{"version":3,"mappings":"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OAAQ,CACN,CACEixB,WAAY,CACV,CACEhxB,aAAc,SACdC,KAAM,OACNC,KAAM,UAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,OACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,gBACNC,KAAM,QAER,CACEF,aAAc,SACdC,KAAM,QACNC,KAAM,UAER,CACEF,aAAc,SACdC,KAAM,gBACNC,KAAM,WAGVF,aAAc,oCACdC,KAAM,cACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,cACNC,KAAM,SAGVD,KAAM,mCACNE,QAAS,CACP,CACEH,aAAc,YACdC,KAAM,GACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,GACNC,KAAM,cAGVE,gBAAiB,OACjBF,KAAM,WACNG,UAAU,GAEZ,CACEN,OAAQ,CACN,CACEC,aAAc,YACdC,KAAM,cACNC,KAAM,cAGVD,KAAM,sBACNE,QAAS,GACTC,gBAAiB,aACjBF,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,WACdC,KAAM,QACNC,KAAM,YAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,QACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,YAGVD,KAAM,uBACNE,QAAS,GACTC,gBAAiB,UACjBF,KAAM,WACNI,SAAS,GAEX,CACEP,OAAQ,CACN,CACEC,aAAc,WACdC,KAAM,QACNC,KAAM,YAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,YACdC,KAAM,cACNC,KAAM,aAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aA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","names":["ENSMarketplaceMainnetABI","inputs","internalType","name","type","outputs","stateMutability","constant","payable","ENSMarketplaceTestnetABI","ContractAddressesMainnetEnum","contractChainlinkMainnet","bulkRegistrationMainnet","marketplaceMainnet","acceptedCurrenciesMainnet","ContractAddressesTestnetEnum","contractChainlinkTestnet","bulkRegistrationTestnet","marketplaceTestnet","acceptedCurrenciesTestnet","currency","address","ETH","decimals","decimalRepresentation","highValueAsset","DAI","USDT","WBTC","SupportedCurrenciesEnum","ENSContracts","registrar","resolver","resolverTestnet","registrarController","migrationContract","token","nullResolver","payNoMarketAddress","BlockExplorersEnum","ENSTokenNFTABI","anonymous","indexed","BUTTON","SAVE_CHANGES","PROCEED","DISMISS","CONNECT","CONNECT_WALLET","DISCONNECT","LOGOUT","CLOSE","SETTINGS","LAUNCH_APP","CONNECT_TO_PROCEED","VIEW_DETAILS","REFRESH","START_REGISTRATION","CANCEL","PRESS_ENTER","LEARN_MORE","CLOSE_WINDOW","SHOW_AVAILABLE_ONLY","SHOW_AVAILABLE","PROCEED_SEARCH","DOWNLOAD","SHOW_ALL","DESELECT_ALL","SHOW_SELCTED","LINK","CUSTOM_LINK","SET_QR_LINK_ALL","SET_QR_LINK","DISABLE_ALL","DISABLE_QR_CODE","ENABLE_QR_CODE","SET_QR_COLOR","SET_COLOR","SET_ALL_COLORS","SET_PRICE","SET_PRICE_ALL","RESET","CHECK_PROFILE","GO_TO_DASHBOARD","GO_TO_HOME","VIEW_PROFILE","CHECK_DOMAINS","TRANSACTION_DETAILS","BUY_NOW","CLEAR_HISTORY","DEFAULT","CUSTOM","FRACTIONALISE","MORE_INFO","LESS_INFO","APPROVE","NEXT","PENDING","REMOVE_ALL_ITEMS","ADD_ALL_TO_CART","BOOKMARK_ALL","DOWNLOAD_LIST","SHARE_LIST","HEADER","FAQ","BACK_TO_HOME","HELP_SUPPORT","CANCEL_REGISTRATION","PROFILE","DOCS","DOCUMENTATIONS","CART","BOOKMARKS","PAYMENTS_HISTORY","LIGHT_MODE","CUSTOM_RPC","SETUP_REQUIRED","MANAGE_DOMAINS","FEATURE_DISABLED","IPFS","INITIALISING","FINDING_PEERS","FAILED","READY","PUBLISHING","EVENTS","TRANSFER","REGISTRATION","RENEWAL","SALE","MINT","BURN","GENERIC","NETWORK_CHANGED_INCOMPATIBLE","IPNS_PUBLISHING_COMPLETED","PENDING_TRANSACTION_CERATED","RENEWAL_DURATIONS","SIX_MONTHS","ONE_YEAR","TWO_YEARS","THREE_YEARS","FOUR_YEARS","FIVE_YEARS","LABELS","FILTER","RENEWAL_DURATION","TRANSACTION","USER_PROFILE","COMPLETE","ESTIMATED_COST","ADDRESS","PLEASE_WAIT","SELECT_A_DOMAIN","RENEW","SEARCH_FOR","MANAGE","COLLECT","LANDING_TEXT","GO_TO_PROFILE","SEARCH","CONTAIN_ALPHABET","CONTAIN_NUMBERS","CONTAIN_EMOJI","MIN_LENGTH","MAX_LENGTH","CONTAINING_KEYWORDS","FILTERS","DOMAINS","DOMAIN","DOMAIN_HISTORY","EXPIRATION_DATE","REGISTRATION_DATE","CREATION_DATE","DETAILS","YOUR_DOMAINS","PROCESSING","LAYOUT","ENTER_SUFFIX","ENTER_PREFIX","CLICK","CONNECT_TO_START","TIP","ACTION","ADVANCED_SEARCH_TIP","ADVANCED_SEARCH","ADVANCED_MODE","REGISTER_DOMAINS_TO","NO_DOMAINS_SELECTED","FIND_AND_REGISTER","SELECTED_DOMAINS","REGISTER","SEARCH_RESULTS","PROCEED_TO_REGISTRATION","REGISTER_DOMAINS","REGISTRANT_ADDRESS","SET_RESOLVER","TOTAL_COST","GAS_PRICE","NO_ADDRESS_DETECTED","DURATION","NOTICE_SELECT_AN_RPC","ENABLE_LIGHT_MODE","CLICK_NEXT_TO_PROCEED","BEFORE_COMMIT","COMMIT_SENT","COMMIT_COMPLETE","AWAIT","BEFORE_REGISTRATION","REGISTRATION_SENT","REGISTRATION_COMPLETE","REGISTRATION_COMPLETE_TITLE","YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED","BASKET_EMPTY","PLEASE_SELECT_DOMAINS_TO_REGISTER","PAYMENT","PAYMENT_CANCELLED","SPINNER","NO_DATA_TO_DISPLAY","PERFORMING_SEARCH","LOADING_DATA","FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET","FORM_LABELS","ENTER_DURATION","ENTER_QR_LINK","ENTER_PRICE","ENTER_CUSTOM_ADDRESS","ENTER_RECEIVER_ADDRESS","FORM_ERRORS","INVALID_DURATION","INVALID_QR_LINK","INVALID_PRICE","INVALID_ADDRESS","STEP","STEP_1","STEP_2","STEP_3","STEP_4","STEP_5","RENEWAL_COST","ESTIMATED_RENEWAL_COST","RENEWAL_COMPLETE","DOMAINS_READY_FOR_RENEWAL","TRANSFER_TO","TRANSFER_COMPLETE","SETUP_INSTRUCTION","CONTRACT_APPROVAL_NOTE","DOMAINS_READY_FOR_TRANSFER","r","p","c","A","g","S","validTranslations","en","EN","de","DE","es","ES","fr","FR","ru","RU","jp","JP","cn","CN","HammerJsConf","HammerGestureConfig","constructor","this","swipe","velocity","threshold","t","factory","generalConfigurations","version","defaultLanguage","defaultPage","PagesEnum","maximumDecimalInPrices","maxAttemptsToCheckoutData","sessionTimeout","maxRPCCallRetries","timeUntilImageLoadErrors","timeToUpdateEthUSDRate","timeToUpdateCheckoutPipe","timeToUpdateRegistrationGasPrice","timeUntilCheckoutExpires","maxConfirmationsUntilTxFinal","declarePaymentStatusUnkownUntilXFailedDataFetches","gasLimitBuffer","maxCheckoutRetryUntilRehydrateProcessId","maxIpfsSubscriptionRetries","maxDomainsToRegister","maxYearsRegistration","maxTotalCostBuffer","defaultCurrency","enableCustomRPC","docsLink","blockscanLink","nftyChatLink","trezorManifest","email","appUrl","appMeta","description","url","icons","enabledTools","category","management","canvas","registration","profile","domain","wallectConnectSupportedWallets","categoriesDomain","check","confetti","cart_empty","llayers","spin","infiniteLoopedIcons","imageToPreload","privatePages","EnsEventsEnum","EnsEvensSymbolEnum","UserStoreErrorsEnum","serviceProviders","UserService","UserSessionService","UserFacadeService","PagesFacadeService","NavigatorFacadeService","NavigatorButtonsFacadeService","FormValidationService","MiscUtilsService","TranslationService","FormatTimePipe","TimeAgoPipe","HttpClient","EnsService","RegistrationDataService","BookmarksServiceService","RegistrationServiceService","PaymentStorageService","WalletConnectService","DownloadService","ContractService","EnsMarketplaceService","routerPaths","bootstrap","home","checkout","notfound","manage","ValidRPCProvidersEnum","PaymentErrorCodes","PaymentTypesEnum","NonceTypesEnum","WalletTypesEnum","IconModule","imports","TranslationModule","MatDialogModule","MatButtonModule","FlexLayoutModule","CustomAddressDialogModule","ReactiveFormsModule","CommonModule","FormsModule","MatIconModule","MatFormFieldModule","MatInputModule","GenericDialogModule","GenericDialogComponent","OnboardDialogModule","SharedModule","SpinnerCustomModule","BulkSearchModule","MatSlideToggleModule","MatProgressBarModule","BlockyModule","SettingsDialogModule","MainHeaderModule","MatBadgeModule","MatMenuModule","MatAutocompleteModule","EtherDecimalFixedModule","RenewManagementDialogModule","OnboardManagementDialogModule","TimeAgo","EtherDecimalFixedPipe","transform","value","toFixed","pure","DatePipe","inputDate","Date","parseInt","super","formatTimePipe","timeAgo","time","format","toLowerCase","indexOf","i0","provide","HAMMER_GESTURE_CONFIG","useClass","MAT_PROGRESS_BAR_DEFAULT_OPTIONS","useValue","MAT_BOTTOM_SHEET_DATA","MAT_DIALOG_DATA","MatDialogRef","HttpClientModule","RouterModule","MatBottomSheetModule","MatExpansionModule","MatChipsModule","MatSelectModule","MatTabsModule","MatCardModule","MatDividerModule","MatRadioModule","MatStepperModule","MatCheckboxModule","MatSliderModule","MatRippleModule","MatProgressSpinnerModule","MatTableModule","MatListModule","MatTooltipModule","MatDatepickerModule","MatNativeDateModule","MatSnackBarModule","MatPaginatorModule","MatSortModule","DragDropModule","OverlayModule","QRCodeModule","NgxColorsModule","snackBar","countBookmarks","loadBookmarksAndFeed","length","loadBookmarks","localStorage","getItem","sBookmarks","JSON","parse","saveAllBookmark","domainsData","bookmarksRaw","reduce","accumulator","labelName","bKeys","Object","keys","bookmarks","Set","map","k","concat","setItem","stringify","saveBookmark","domainData","push","removeAllBookmarks","removeBookmark","domainName","bookmarksUpdated","filter","d","clearBookmarks","isDomainBookmarked","getGasLimitEstimation","provider","method","params","payer","contractAddress","contractABI","providerFunction","Contract","Observable","observer","estimateGas","from","then","next","complete","catch","e","of","CurrencyService","deriveCurrencyAddressFromName","currencies","environment","toUpperCase","deriveCurrencyDataFromCurrencyName","currencySearched","convertAmountToDecimal","amountInString","paymentCurrency","currencyData","bnAmount","BigNumber","ethers","convertAmountToToken","getSupportedCurrencies","determineDefaultCurrencyForPayment","searchType","chooseSecondDefault","secondDefaultToBeChosen","chainlinkV3ABI","globalAny","CurrencyExchangeService","paymentFacade","getPrices","processorLocked","timer","pipe","i","switchMap","chainlink","latestRoundData","normalizedPrices","setEthUsdRate","answer","toNumber","toString","chainlinkAddress","canvasProvider","mistUtils","download","meta","dataRaw","fileName","data","TextEncoder","encode","blob","Blob","fileURL","URL","createObjectURL","window","open","contractService","ensService","checkApproval","tokenId","contract","getENSTokenContract","ownerOf","isApprovedForAll","marketplaceContractAddress","catchError","transfer","domainNames","to","getENSMarketplaceContract","dataMethod","dataParams","dataInput","interface","encodeFunctionData","gasLimit","marketplaceContractABI","toPromise","approve","operator","approvalStatus","renew","duration","totalCost","namesLengths","getNameLength","add","http","getDomainMetadata","domainHash","get","ensMetadataAPI","getDomainContentHash","ethName","getResolver","getContentHash","web2Link","replace","findDomains","domains","ensGraphQLAPI","query","gql","request","getDomain","downloadDomainsListNamesOnly","finalForm","join","downloadDomainsListCSV","kk","calculateExpiry","expiryDate","eDate","getTime","calculateGracePeriodPercentage","timeUtilGraceEnds","gracePeriod","isDomainNameNotValid","prefixedOrSuffixed","prefixedAndSuffixed","minLength","ens_normalize","performNormalisation","prettify","ens_beautify","calculateDomainsPrice","ethToUsdRate","durationInYears","ethUsdRate","nameCost","parseFloat","markFormGroupTouched","formGroup","values","controls","forEach","control","markAsTouched","PathResolveService","resolve","route","state","typoPath","getThreshold","dictionary","path","Math","abs","sortByDistances","pathsDistance","sort","a","b","levenshtein","matrix","j","charAt","min","TrezorService","miscUtils","pagesFacade","connect","TrezorConnect","lazyLoad","webusb","popup","manifest","coin","result","undefined","payload","descriptor","signPayment","accountInfo","transaction","nonce","toHexString","signed","success","utils","v","s","getWeb3Provider","detectEthereumProvider","IconRegistryService","injectCustomIcons","perloadCustomIcons","ic","ici","Image","src","PaymentEffectsService","recordLastConnectionAddress","connectionAddress","getLastConnectionAddress","lConnectionAddres","Intercept","router","userFacade","intercept","req","handle","LedgerService","TransportUSB","transport","ledger","LedgerEth","getAddress","createTransport","signTransaction","substring","MetamaskService","userFacadeService","getAccounts","chainChangedDetectionDaemon","ethereum","on","chainId","setNetworkChainCode","accounts","removeUser","getChainId","networkVersion","Ethers","payloadHash","tx","roundUp","num","roundTo","round","testJSON","json","str","testUrl","RegExp","checksumEtheruemAddress","commafied","parts","split","prependToArray","array","newArray","slice","unshift","toHex","rb","testNumeric","testAlphaNumeric","testAlpha","testEmoji","testIntNumeric","PaymentStoreErrorsEnum","PaymentErrorService","getPaymentErrorTranslatedTextKey","paymentError","getPaymentErrorEnumKey","errorCode","networkName","removePayments","removeItem","savePayments","paymentData","loadPayments","l","PaymentService","userService","currencyService","walletService","prepareTransaction","toAddress","gasPrice","payment","gas","paymentTotal","paymentAbstractBytesSlot","resolveAddressOfEth","walletAddress","resolveName","n","getWalletNonce","getTransactionCount","getGasPrice","getFeeData","feeData","ENSBulkRegistrationContractMainnetABI","components","ENSBulkRegistrationContractTestnetABI","RegistrationFacilityService","miscUtilsService","paymentService","registrationDomainsToCommitmentPacket","owner","secret","commitments","compiled","nc","reverseRecord","fuses","wrapperExpiry","metadata","commitmentPacketToRegistrationDomains","decompiled","createRegistrationCommitmentPacket","getEnsBulkRegistrationContract","comitmentsPrepared","nCP","isResolverSet","commitmentResult","createCommitmentsForRegistration","bulkRegistrationContractAddress","BulkRegistrationContractABI","priceRanges","pr","mul","div","createRegistrationRequestPaymentPacket","commitmentsPrepared","decodeRegistrationPacket","abstractData","parseTransaction","completeRegistration","names","EnsTestnetABI","EnsABI","EnsRegistrarControllerTestnetABI","EnsRegistrarControllerABI","martketSaleTopics","SEAPORT","RARIBLE","X2Y2","LOOKSRARE","SortableMarkets","resolevTxType","relatedNameLabelHash","marketTopics","markets","qualifiedTx","logs","topics","includes","resolvedEventType","labelHashInHex","paymentNoAddressBytes","topicNormalised","x","whichMarket","marketBuyer","getMarketBuyer","marketSeller","getMarketSeller","txHash","transactionHash","txValueToEther","date","timestamp","registrant","uniqueSet","filteredEvents","re","isDuplicate","has","market","eventWholeData","event","match","getENSContract","ensContractABI","getENSRegistrarControllerContract","ensRegistrarControllerContractABI","countRegistrations","loadRegistrationsAndFeed","loadRegistrations","sRegistrations","saveAllRegistrations","registrationsRaw","registrations","saveRegistrations","removeRegistration","registrationsUpdated","removeAllRegistrations","isDomainOnRegistrationList","TranslationPipe","translationService","language","getLanguage","translations","getTranslation","keysSplit","default","currentKey","key","lang","savedLanguage","loadLanguage","navigator","getLocale","getCacheableLanguagekeys","translation","getText","saveLanguage","getUserDomains","getEthAddress","getEthName","lookupAddress","getUserText","text","getUserContentHash","metamaskService","quitUserSession","saveUserSession","userData","loadUserSession","getUserSessionProvider","providerData","newProvider","createAlchemyFrontDefaultProvider","o","createAlchemyFrontProvider","createInfuraFrontProvider","id","createJSONFrontProvider","getDefaultChainId","chain","providerKeys","providerKey","providerKeyPicked","floor","random","providers","projectId","projectSecret","ngZone","dateNow","walletConnect","connector","WalletConnect","bridge","qrcodeModal","QRCodeModal","qrcodeModalOptions","mobileLinks","desktopLinks","clientMeta","error","wc","killSession","setErrorState","chainAccount","gotoPageRoute","createSession","account","registerUser","walletType","sendTransaction","WalletService","produceNonce","nonceLength","charLibrary","nonceString","rnum","validateWalletAddress","test","AddOneENSBookmark","UpdateENSBookmark","UpsertOneENSBookmark","UpsertManyENSBookmark","RemoveOneENSBookmark","RemoveManyENSBookmark","RemoveAllENSBookmark","SetENSBookmarkError","toSave","AddOneENSRegistration","UpdateENSRegistration","UpsertOneENSRegistration","UpsertManyENSRegistration","RemoveOneENSRegistration","RemoveManyENSRegistration","RemoveAllENSRegistration","SetENSRegistrationError","SetNavigatorButtonsState","GetNavigatorButtonsState","SetNavigatorState","GetNavigatorState","ShowLoadingProgressBarOnLoad","HideLoadingProgressBarOnLoadFinished","SetPagesCriticalError","SetPagesPageSlide","SetPagesState","SetPageIpfsErrors","SetPageIpfsState","SetPageChainCode","SetPagesNewPageState","SetPagesNetworkState","SetPagesVisibility","SetRPCProvider","SetPagesNetworkStateOffline","GetPagesState","GotoPageRoute","redirect","firstTimeSet","PaymentCheckFulfilled","CancelledPayment","AddOnePayment","UpdatePayment","UpsertOnePayment","UpsertManyPayment","SetEthUSDRates","RemoveOnePayment","RemoveManyPayment","RemoveAllPayment","ArchiveAllPayment","SetPaymentError","SetUserState","SetUserError","GetUserState","RemoveUserError","RemoveUserState","RemoveUser","AddUser","UpdateUser","RegisterUser","store","userState$","select","getCurrentUserState","user$","getCurrentUser","dispatch","UserRegister","newUserState","userState","UserStateSet","removeUserState","UserStateRemove","UserRemove","removeUserStateError","UserErrorRemove","UserErrorSet","addUser","userAddData","UserAdd","updateUser","UserUpdate","PaymentFacadeService","paymentState$","getPaymentState","pendingPayments$","getPendingPayments","paymentsStoreError$","getPaymentStateError","paymentsStoreLoading$","getPaymentStateLoading","ethUsdPrice$","getEthUsdPrice","usdRate","PaymentETHUSDRatesSet","createPayment","PaymentAddOne","removeAllPayment","PaymentRemoveAll","removePayment","PaymentRemoveOne","paymentSerial","payments","PaymentRemoveMany","archiveAllPayment","PaymentArchiveAll","upsertPayment","PaymentUpsertOne","updatePayment","PaymentUpdate","getPayment","paymentId","selectPayment","getPayments","removePaymentStateError","PaymentErrorSet","ENSBookmarkFacadeService","getENSBookmarkState$","getENSBookmarkState","addBookmark","bookmark","ENSBookmarkAddOne","ENSBookmarkRemoveOne","ENSBookmarkRemoveAll","removeBookmarks","ENSBookmarkRemoveMany","upsertBookmark","ENSBookmarkUpsertOne","upsertAllBookmark","ENSBookmarkUpsertMany","updateBookmark","ENSBookmarkUpdate","getBookmark","bookmarkId","selectENSBookmark","getBookmarks","getENSBookmarks","removeBookmarkStateError","ENSBookmarkErrorSet","ENSRegistrationFacadeService","getENSRegistrationState$","getENSRegistrationState","addRegistration","ENSRegistrationAddOne","ENSRegistrationRemoveOne","removeRegistrations","ENSRegistrationRemoveMany","ENSRegistrationRemoveAll","upsertRegistration","ENSRegistrationUpsertOne","upsertAllRegistration","ENSRegistrationUpsertMany","updateRegistration","ENSRegistrationUpdate","getRegistration","registrationId","selectENSRegistration","getRegistrations","getENSRegistrations","removeRegistrationStateError","ENSRegistrationErrorSet","disabledButtonnavigatorState$","getCurrentNavigatorButtonsState","newNavigatorButtonsState","navigatorState","setTimeout","NavigatorButtonsStateSet","resetNavigatorButtonState","initialNavigatorButtonsState","navigatorState$","getCurrentNavigatorState","newNavigatorState","NavigatorStateSet","resetNavigatorState","initialNavigatorState","navigatorFacade","navigatorButtonFacade","dialog","pagesState$","getCurrentPagesState","pageErrorCode$","getCurrentErrorCode","pagesIpfsState$","getIpfsState","pagesIpfsError$","getIpfsError","pageLoadingState$","getCurrentPageLoadState","pageCritiaclError$","getCriticalErrorState","pageVisibility$","getCurrentPageVisibility","showLoadingProgressBar","PagesShowLoadingProgressBarOnLoad","showNotEnabledToolDialog","titleText","subText","panelClass","setPageCriticalError","errorOccured","PagesSetCriticalError","setRpcProvider","PagesSetRPCProvider","setIpfsError","PagesSetIpfsError","setIpfsState","PagesSetIpfsState","hideLoadingProgressBar","PagesHideLoadingProgressBarOnLoadFinished","newPagesState","pagesState","PagesNewPageStateSet","newNetworkState","networkState","PagesNetworkStateSet","chainCode","PagesSetChainCode","setChainCodeByNetworkName","triggerNetworkOfflineDialog","PagesNetworkOfflineStateInvoke","setPageSlide","pageSlide","PagesSetPageSlide","pageRoute","toPageId","PageGotoRoute","pageId","disabledButtons","action","navigatorActiveButtonId","navigatorData","IpfsStatesEnum","initialPagesState","optionalProvider","pageVisibility","criticalErrorOccured","currentPageId","currentPageSlide","ipfsError","ipfsReady","networkStatus","networkChainCode","isPageLoading","initialUserState","loading","user","adapter","createEntityAdapter","selectId","initialPaymentState","getInitialState","ethUsdPrice","paymentCancelled","stateChange","upsertOne","ids","entities","addOne","upsertMany","removeOne","removeMany","removeAll","updatedPayments","archived","ensRegistrationAdapter","initialENSRegistrationState","ensBookmarkAdapter","initialENSBookmarkState","getNavigatorButtonsState","createFeatureSelector","createSelector","getNavigatorState","getPagesState","getCurrentNetworkChainId","getUserState","getUser","getPaymentStateFull","pendingPs","ps","paymentStatus","getENSRegistrationStateFull","archivedPs","getENSBookmarkStateFull","pagesFacadeService","genericDialogRef","ngOnInit","backdropClick","subscribe","closedByButton","closeDialog","overlays","document","getElementsByClassName","wrappers","overlaysCountOnInit","remove","attr","createAttribute","attributes","setNamedItem","existingAttr","getNamedItem","newAttr","close","goToOnExit","goToOnExitPage","goToLink","buttonLink","buttonLinkPageRef","textAlign","selectors","ctx","IconComponent","iconRegistryService","iconsRegistry","iconId","stopCheck","Subject","checkIconSubscription","interval","takeUntil","icon","nativeElement","innerText","setIcon","replaceAll","getElementById","APNG","parseURL","apng","width","height","iconAnimation","addContext","getContext","playIcon","play","rewind","frames","ngAfterViewChecked","isVisible","offsetParent","ngOnDestroy","unsubscribe","_reboot","asObservable","BootController","instance","watchReboot","reboot$","restart","production","development","deployed","local","chrome","defaultChain","baseUrl","validChainIds","networks","goerli","networkId","ensApp","homestead","routes","redirectTo","pathMatch","loadChildren","Promise","m","BootstrapModule","HomeModule","CanvasModule","DomainModule","ProfileModule","ManageModule","CheckoutModule","CategoryModule","NotFoundModule","AppRoutingModule","useHash","NetworkStatusEnum","AppComponent","userSessionService","iconsRegistryService","onNetworkOnline","target","onNetworkOffline","cId","ngDoCheck","cdk","lightMode","classList","ngAfterViewInit","onLine","getHeight","innerHeight","pageLoadingState","NavigatorEffects","actions$","RpcService","loadRpc","saveRpc","rpcData","removeRPC","PagesEffects","activatedRoute","rpcService","createEffect","ofType","ROOT_EFFECTS_INIT","events","runOutsideAngular","NavigationStart","NavigationEnd","NavigationError","assessProviderChanges","createProvider","withLatestFrom","networkAndPageState","network","pageState","delay","run","message","navigateByUrl","addEventListener","hidden","PagesSetVisibility","UserEffects","trezorService","ledgerService","userSessionStored","defaultChainId","connectType","timeNow","userSession","connectSignature","originalConnectAddress","deviceLanguage","PaymentEffects","paymentErrorService","currencyExchangeService","walletConnectService","paymentStorageService","paymentEffectsService","PaymentUpsertMany","paymentHash","CheckPaymentFulfilled","preparedTx","paymentMarketAddress","paymentGasLimit","staticGenericTranslatedTexts","horizontalPosition","verticalPosition","txToFilter","txHex","signedPacked","hash","staticPaymentTranslatedTexts","PaymentCancelled","paymentNonce","paymentResolved","pvp","pv","paymentState","mergeMap","hasResolved","getBlockNumber","blockNumber","searchTxFromBlock","paymentPayer","paymentPayee","getTransactionReceipt","foundTx","getTransactionByNonce","status","confirmations","paymentDate","paymentType","ENSBookmarkEffects","bookMarkService","ENSRegistrationEffects","registrationService","registrationFacilityService","AppModule","HTTP_INTERCEPTORS","multi","BrowserModule","BrowserAnimationsModule","StoreModule","UserState","UserReducers","NavigatorState","NavigatorReducers","PagesState","PagesReducers","PaymentState","PaymentReducers","NavigatorButtonsState","NavigatorButtonsReducers","ENSRegistrationState","ENSRegistrationReducers","ENSBookmarkState","ENSBookmarkReducers","runtimeChecks","strictActionImmutability","EffectsModule","StoreDevtoolsModule","maxAge","mainApp","global","process","browser","versions","node","appIsPaused","BehaviorSubject","enableProdMode","ngRef","destroy","__NgCli_bootstrap_1","bootstrapModule","err","console"],"sources":["./src/app/configurations/contracts/ens-marketplace-abi-mainnet.model.ts","./src/app/configurations/contracts/ens-marketplace-abi-testnet.model.ts","./src/app/configurations/contracts/contract-addresses-mainnet.enum.ts","./src/app/configurations/contracts/contract-addresses-testnet.enum.ts","./src/app/configurations/contracts/supported-currencies.enum.ts","./src/app/configurations/contracts/ens-contracts.model.ts","./src/app/configurations/contracts/block-explorers.enum.ts","./src/app/configurations/contracts/ens-token-nft-abi.model.ts","./src/app/configurations/translations/en.conf.ts","./src/app/configurations/translations/de.conf.ts","./src/app/configurations/translations/cn.conf.ts","./src/app/configurations/translations/jp.conf.ts","./src/app/configurations/translations/es.conf.ts","./src/app/configurations/translations/ru.conf.ts","./src/app/configurations/translations/fr.conf.ts","./src/app/configurations/translation.conf.ts","./src/app/configurations/hammer-js.conf.ts","./src/app/configurations/general.conf.ts","./src/app/configurations/icons.ts","./src/app/configurations/image-to-preload.conf.ts","./src/app/configurations/private-pages.conf.ts","./src/app/models/ens/ens-events.enum.ts","./src/app/models/error-enums/user-store-errors.enum.ts","./src/app/models/service-providers.model.ts","./src/app/models/pay-no-market-address.model.ts","./src/app/models/router-paths.model.ts","./src/app/models/rpc/valid-rpc-providers.enum.ts","./src/app/models/states/pages-interfaces/pages.enum.ts","./src/app/models/states/payment-interfaces/payment-error-codes.enum.ts","./src/app/models/states/payment-interfaces/payment-types.enum.ts","./src/app/models/states/wallet-interfaces/nonce-types.enum.ts","./src/app/models/states/wallet-interfaces/wallet-types.enum.ts","./src/app/modules/miscs/icon.module.ts","./src/app/modules/miscs/custom-address-dialog.module.ts","./src/app/modules/miscs/generic-dialog.module.ts","./src/app/modules/miscs/onboard-dialog.module.ts","./src/app/modules/miscs/spinner-custom.module.ts","./src/app/modules/miscs/bulk-search.module.ts","./src/app/modules/miscs/blocky.module.ts","./src/app/modules/miscs/settings-dialog.module.ts","./src/app/modules/miscs/main-header.module.ts","./src/app/modules/miscs/ether-decimal-fixed.module.ts","./src/app/modules/miscs/renew-management-dialog.module.ts","./src/app/modules/miscs/onboard-management-dialog.module.ts","./src/app/modules/miscs/translation.module.ts","./src/app/modules/pipes/ether-decimal-fixed.pipe.ts","./src/app/modules/pipes/format-time.pipe.ts","./src/app/modules/pipes/time-ago.pipe.ts","./src/app/modules/shared.module.ts","./src/app/services/bookmarks/bookmarks-service.service.ts","./src/app/services/contract/contract.service.ts","./src/app/services/currency/currency.service.ts","./src/app/configurations/contracts/chainlink-aggregator-v3.abi.ts","./src/app/services/currency/currency-exchange.service.ts","./src/app/services/download/download.service.ts","./src/app/services/ens-marketplace/ens-marketplace.service.ts","./src/app/services/ens/ens.service.ts","./src/app/services/form-validation/form-validation.service.ts","./src/app/services/path-resolve/path-resolve.service.ts","./src/app/services/trezor/trezor.service.ts","./src/app/services/icon-registry/icon-registry.service.ts","./src/app/services/store/payments/payment-effects.service.ts","./src/app/services/intercept/intercept.ts","./src/app/services/ledger/ledger.service.ts","./src/app/services/metamask/metamask.service.ts","./src/app/services/misc-utils/misc-utils.service.ts","./src/app/models/error-enums/payment-store-errors.enum.ts","./src/app/services/payment/payment-error.service.ts","./src/app/services/payment/payment-storage.service.ts","./src/app/services/payment/payment.service.ts","./src/app/configurations/contracts/ens-bulk-registration-mainnet.abi.ts","./src/app/configurations/contracts/ens-bulk-registration-testnet.abi.ts","./src/app/services/registration/registration-facility.service.ts","./src/app/configurations/contracts/ens-abi-testnet.model.ts","./src/app/configurations/contracts/ens-abi.model.ts","./src/app/configurations/contracts/ens-registrar-controller-abi-testnet.model.ts","./src/app/configurations/contracts/ens-registrar-controller-abi.model.ts","./src/app/services/registration/registration-data.service.ts","./src/app/services/registration/registration-service.service.ts","./src/app/services/translations/translation.pipe.ts","./src/app/services/translations/translation.service.ts","./src/app/services/user/user.service.ts","./src/app/services/user/user-session.service.ts","./src/app/services/wallet-connect/wallet-connect.service.ts","./src/app/services/wallet/wallet.service.ts","./src/app/store/actions/ens-bookmark.action.ts","./src/app/store/actions/ens-registration.action.ts","./src/app/store/actions/navigation-buttons.actions.ts","./src/app/store/actions/navigator.actions.ts","./src/app/store/actions/pages.actions.ts","./src/app/store/actions/payment.actions.ts","./src/app/store/actions/user.actions.ts","./src/app/store/facades/user.facades.ts","./src/app/store/facades/payment.facade.ts","./src/app/store/facades/ens-bookmark.facades.ts","./src/app/store/facades/ens-registration.facades.ts","./src/app/store/facades/navigator-buttons.facades.ts","./src/app/store/facades/navigator.facades.ts","./src/app/store/facades/pages.facades.ts","./src/app/store/reducers/navigator-buttons.reducers.ts","./src/app/store/reducers/navigator.reducers.ts","./src/app/models/ipfs/ipfs-states.enum.ts","./src/app/store/reducers/pages.reducers.ts","./src/app/store/reducers/user.reducers.ts","./src/app/store/reducers/payment.reducers.ts","./src/app/store/reducers/ens-registration.reducers.ts","./src/app/store/reducers/ens-bookmark.reducers.ts","./src/app/store/selectors/navigator-buttons.selectors.ts","./src/app/store/selectors/navigator.selectors.ts","./src/app/store/selectors/pages.selectors.ts","./src/app/store/selectors/user.selectors.ts","./src/app/store/selectors/payment.selectors.ts","./src/app/store/selectors/ens-registration.selectors.ts","./src/app/store/selectors/ens-bookmark.selectors.ts","./src/app/widgets/generic-dialog/generic-dialog.component.html","./src/app/widgets/generic-dialog/generic-dialog.component.ts","./src/app/widgets/icon/icon.component.ts","./src/app/widgets/icon/icon.component.html","./src/boot-control.ts","./src/environments/environment.prod.ts","./src/app/app-routing.module.ts","./src/app/models/states/pages-interfaces/network-status.enum.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/store/effects/navigator.effects.ts","./src/app/services/rpc/rpc.service.ts","./src/app/store/effects/pages.effects.ts","./src/app/store/effects/user.effects.ts","./src/app/store/effects/payment.effects.ts","./src/app/store/effects/ens-bookmark.effects.ts","./src/app/store/effects/ens-registration.effects.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["export const ENSMarketplaceMainnetABI = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'addressStorage',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'receiptNonces',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'reservedStorage',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uintStorage',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'string[]',\n        name: 'domains',\n        type: 'string[]',\n      },\n    ],\n    name: 'transferDomains',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renewDomains',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getENSPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: 'resetRentryGuard',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'domainName',\n        type: 'string',\n      },\n    ],\n    name: 'getNameHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newController',\n        type: 'address',\n      },\n    ],\n    name: 'changeController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","export const ENSMarketplaceTestnetABI = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'addressStorage',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    name: 'receiptNonces',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'reservedStorage',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    name: 'uintStorage',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'string[]',\n        name: 'domains',\n        type: 'string[]',\n      },\n    ],\n    name: 'transferDomains',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renewDomains',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getENSPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [],\n    name: 'resetRentryGuard',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'nameOwner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'domainName',\n        type: 'string',\n      },\n    ],\n    name: 'getNameHash',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'newController',\n        type: 'address',\n      },\n    ],\n    name: 'changeController',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","import { AcceptedCurrencyModel } from '../../models/currencies';\n\nexport enum ContractAddressesMainnetEnum {\n  ETH = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n  DAI = '0xf80A32A835F79D7787E8a8ee5721D0fEaFd78108',\n  USDT = '0xB404c51BBC10dcBE948077F18a4B8E553D160084',\n  WBTC = '0xa0E54Ab6AA5f0bf1D62EC3526436F3c05b3348A0',\n}\n\nexport const contractChainlinkMainnet =\n  '0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419';\nexport const bulkRegistrationMainnet =\n  '0x67f57d9C4dc6fbEE423B15B6bBe488c3896AfBc3';\nexport const marketplaceMainnet = '0x34c3f58058E2ad098ef437Ee5Ea1ff1fE2fe4214';\n\nexport const acceptedCurrenciesMainnet = [] as AcceptedCurrencyModel[];\n","import { AcceptedCurrencyModel } from '../../models/currencies';\n\nexport enum ContractAddressesTestnetEnum {\n  ETH = '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',\n  DAI = '0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD',\n  USDT = '0x13512979ADE267AB5100878E2e0f485B568328a4',\n  WBTC = '0x3b92f58feD223E2cB1bCe4c286BD97e42f2A12EA',\n}\n\nexport const contractChainlinkTestnet =\n  '0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e';\nexport const bulkRegistrationTestnet =\n  '0x37c6ea208a60FbD6D63B9C705F832246c8806C3c';\nexport const marketplaceTestnet = '0xBC517d3b884De911573Dfad2A02825A93747002a';\n\nexport const acceptedCurrenciesTestnet = [\n  {\n    currency: 'ETH',\n    address: ContractAddressesTestnetEnum.ETH,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: true,\n  },\n  {\n    currency: 'DAI',\n    address: ContractAddressesTestnetEnum.DAI,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: false,\n  } as AcceptedCurrencyModel,\n  {\n    currency: 'USDT',\n    address: ContractAddressesTestnetEnum.USDT,\n    decimals: 6,\n    decimalRepresentation: '1000000',\n    highValueAsset: false,\n  } as AcceptedCurrencyModel,\n  {\n    currency: 'WBTC',\n    address: ContractAddressesTestnetEnum.WBTC,\n    decimals: 18,\n    decimalRepresentation: '1000000000000000000',\n    highValueAsset: true,\n  } as AcceptedCurrencyModel,\n] as AcceptedCurrencyModel[];\n","export enum SupportedCurrenciesEnum {\n  ETH = \"Ethereum\",\n  DAI = \"Dai Stablecoin\",\n  USDT = \"Tether USD\",\n  WBTC = \"Wrapped Bitcoin\",\n}\n","import { payNoMarketAddress } from 'src/app/models/pay-no-market-address.model';\n\nexport const ENSContracts = {\n  registrar: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  resolver: '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41',\n  resolverTestnet: '0x4B1488B7a6B320d2D721406204aBc3eeAa9AD329',\n  registrarController: '0x283Af0B28c62C092C9727F1Ee09c02CA627EB7F5',\n  migrationContract: '0x6109DD117AA5486605FC85e040ab00163a75c662',\n  token: '0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85',\n  nullResolver: payNoMarketAddress,\n};\n","export enum BlockExplorersEnum {\n  homestead = 'https://etherscan.io/',\n  goerli = 'https://goerli.etherscan.io/',\n}\n","export const ENSTokenNFTABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'approved',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Approval',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'balance',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'ownerOf',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'getApproved',\n    outputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: '_approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'from',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'to',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes',\n        name: 'data',\n        type: 'bytes',\n      },\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n];\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Save Changes',\n    PROCEED: 'Proceed',\n    DISMISS: 'Dismiss',\n    CONNECT: 'Connect',\n    CONNECT_WALLET: 'Connect Wallet',\n    DISCONNECT: 'Disconnect',\n    LOGOUT: 'Logout',\n    CLOSE: 'Close',\n    SETTINGS: 'Settings',\n    LAUNCH_APP: 'Launch App',\n    CONNECT_TO_PROCEED: 'Connect Wallet',\n    VIEW_DETAILS: 'View Details',\n    REFRESH: 'Refresh',\n    START_REGISTRATION: 'Start Registration',\n    CANCEL: 'Cancel',\n    PRESS_ENTER: 'Press Enter',\n    LEARN_MORE: 'Learn More',\n    CLOSE_WINDOW: 'Close Window',\n    SHOW_AVAILABLE_ONLY: 'Show Available Only',\n    SHOW_AVAILABLE: 'Show Available',\n    PROCEED_SEARCH: 'Proceed Search',\n    DOWNLOAD: 'Download',\n    SHOW_ALL: 'Show All',\n    DESELECT_ALL: 'Deselect All',\n    SHOW_SELCTED: 'Show Selected',\n    LINK: 'Link',\n    CUSTOM_LINK: 'Custom Link',\n    SET_QR_LINK_ALL: 'Set QR Link All',\n    SET_QR_LINK: 'Set QR Link',\n    DISABLE_ALL: 'Disable All',\n    DISABLE_QR_CODE: 'Disable QR Code',\n    ENABLE_QR_CODE: 'Enable QR Code',\n    SET_QR_COLOR: 'Set QR Color',\n    SET_COLOR: 'Set Color',\n    SET_ALL_COLORS: 'Set All Colors',\n    SET_PRICE: 'Set Price',\n    SET_PRICE_ALL: 'Set Price All',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Check Profile',\n    GO_TO_DASHBOARD: 'Go to Dashboard',\n    GO_TO_HOME: 'Go To Home',\n    VIEW_PROFILE: 'View Profile',\n    CHECK_DOMAINS: 'Check Domains',\n    TRANSACTION_DETAILS: 'Transaction Details',\n    BUY_NOW: 'Buy Now',\n    CLEAR_HISTORY: 'Clear History',\n    DEFAULT: 'Default',\n    CUSTOM: 'Custom',\n    FRACTIONALISE: 'Fractionalise',\n    MORE_INFO: 'More Info',\n    LESS_INFO: 'Less Info',\n    APPROVE: 'Approve',\n    NEXT: 'Next',\n    PENDING: 'Pending',\n    REMOVE_ALL_ITEMS: 'Remove All Items',\n    ADD_ALL_TO_CART: 'Add All To Cart',\n    BOOKMARK_ALL: 'Bookmark All',\n    DOWNLOAD_LIST: 'Download List',\n    SHARE_LIST: 'Share List',\n  },\n  HEADER: {\n    FAQ: 'FAQs',\n    BACK_TO_HOME: 'Back to Home',\n    HELP_SUPPORT: 'Help & Support',\n    CANCEL_REGISTRATION: 'Cancel Registration',\n    PROFILE: 'Profile',\n    SETTINGS: 'Settings',\n    DOCS: 'Docs',\n    DOCUMENTATIONS: 'Documentations',\n    CART: 'Cart',\n    BOOKMARKS: 'Bookmarks',\n    PAYMENTS_HISTORY: 'Payments History',\n    LIGHT_MODE: 'Light Mode',\n    CUSTOM_RPC: 'Custom RPC',\n    SETUP_REQUIRED: 'Setup Required',\n    MANAGE_DOMAINS: 'Manage Domains',\n    APPROVE: 'Approve',\n    FEATURE_DISABLED: 'Feature Disabled',\n  },\n  IPFS: {\n    INITIALISING: 'Starting p2p',\n    FINDING_PEERS: 'Finding peers',\n    FAILED: 'Failed',\n    READY: 'Ready',\n    PUBLISHING: 'Publishing',\n  },\n  EVENTS: {\n    TRANSFER: 'Transfer',\n    REGISTRATION: 'Registration',\n    RENEWAL: 'Renewal',\n    SALE: 'Sale',\n    MINT: 'Mint',\n    BURN: 'Burn',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'Network is not supported. Please change your network.',\n    IPNS_PUBLISHING_COMPLETED: 'Publishing completed!',\n    PENDING_TRANSACTION_CERATED:\n      'A new transaction has been created. Please check your wallet.',\n  },\n  RENEWAL_DURATIONS: {\n    SIX_MONTHS: '6 Months',\n    ONE_YEAR: '1 Year',\n    TWO_YEARS: '2 Years',\n    THREE_YEARS: '3 Years',\n    FOUR_YEARS: '4 Years',\n    FIVE_YEARS: '5 Years',\n  },\n  LABELS: {\n    FILTER: 'Filter',\n    RENEWAL_DURATION: 'Renewal Duration',\n    TRANSACTION: 'Transaction',\n    USER_PROFILE: 'User Profile',\n    FEATURE_DISABLED: 'This feature is currently disabled.',\n    COMPLETE: 'Complete',\n    ESTIMATED_COST: 'Estimated Cost',\n    ADDRESS: 'Address',\n    TRANSFER: 'Transfer',\n    PLEASE_WAIT: 'Please wait',\n    SELECT_A_DOMAIN: 'Select a Domain',\n    RENEW: 'Renew',\n    MANAGE_DOMAINS: 'Manage Domains',\n    SEARCH_FOR: 'Search For',\n    MANAGE: 'Manage',\n    COLLECT: 'Collect',\n    LANDING_TEXT:\n      'Open-source, decentralised, ENS domains search, registration & marketplace.',\n    PROFILE: 'Profile',\n    GO_TO_PROFILE: 'Go to Profile',\n    SEARCH: 'Search',\n    CONTAIN_ALPHABET: 'Contain Alphabet',\n    CONTAIN_NUMBERS: 'Contain Numbers',\n    CONTAIN_EMOJI: 'Contain Emoji',\n    MIN_LENGTH: 'Min. Length',\n    MAX_LENGTH: 'Max. Length',\n    CONTAINING_KEYWORDS: 'Containing Keywords',\n    FILTERS: 'Filters',\n    DOMAINS: 'Domains',\n    DOMAIN: 'Domain',\n    DOMAIN_HISTORY: 'Domain History',\n    EXPIRATION_DATE: 'Expiration Date',\n    REGISTRATION_DATE: 'Registration Date',\n    CREATION_DATE: 'Creation Date',\n    DETAILS: 'Details',\n    YOUR_DOMAINS: 'Your Domains',\n    PROCESSING: 'Processing',\n    LAYOUT: 'Layout',\n    ENTER_SUFFIX: 'Enter suffix',\n    ENTER_PREFIX: 'Enter prefix',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' to get started or ',\n    TIP: 'Tip',\n    ACTION: 'Action',\n    ADVANCED_SEARCH_TIP:\n      'use new line or commas to seperate your domain entries.',\n    ADVANCED_SEARCH: 'Advanced Search',\n    ADVANCED_MODE: 'Advanced Mode',\n    REGISTER_DOMAINS_TO: 'Register Domains To',\n    NO_DOMAINS_SELECTED: 'No domains selected.',\n    FIND_AND_REGISTER: 'Register domains e.g. domain1, domain2...',\n    SELECTED_DOMAINS: 'Selected Domains',\n    REGISTER: 'Register',\n    BOOKMARKS: 'Bookmarks',\n    SEARCH_RESULTS: 'Search Results',\n    PROCEED_TO_REGISTRATION: 'Proceed To Registration',\n    REGISTER_DOMAINS: 'Register Domains',\n    REGISTRANT_ADDRESS: 'Registrant Address',\n    SET_RESOLVER: 'Set Resolver',\n    TOTAL_COST: 'Total Cost',\n    GAS_PRICE: 'Gas Price',\n    NO_ADDRESS_DETECTED: 'No address detected.',\n    DURATION: 'Duration',\n    NOTICE_SELECT_AN_RPC:\n      'Notice: select an RPC that will be used in the application to replace the default RPC provider.',\n    ENABLE_LIGHT_MODE: 'Enable light layout style.',\n    CLICK_NEXT_TO_PROCEED: 'Click <b>Next</b> to proceed.',\n  },\n  REGISTRATION: {\n    BEFORE_COMMIT: 'Step 1: request registration.',\n    COMMIT_SENT: 'Processing request...',\n    COMMIT_COMPLETE: 'Step 1: request registration received...',\n    AWAIT: 'Finalising request...',\n    BEFORE_REGISTRATION: 'Complete registration.',\n    REGISTRATION_SENT: 'Completing registration...',\n    REGISTRATION_COMPLETE: 'Registration complete!',\n    REGISTRATION_COMPLETE_TITLE: 'Registration Complete',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED:\n      'Your domains have now been registered.',\n    BASKET_EMPTY: 'Your basket is empty',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: 'Please select new domains to register.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Transaction cancelled. Please try again.',\n  },\n  SPINNER: {\n    NO_DATA_TO_DISPLAY: 'No items to display.',\n    PERFORMING_SEARCH: 'Performing search...',\n    LOADING_DATA: 'Loading Data...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Please follow the instructions in your wallet to proceed.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Enter Duration',\n    ENTER_QR_LINK: 'Enter custom QR Code URL',\n    ENTER_PRICE: 'Enter price',\n    ENTER_CUSTOM_ADDRESS: 'Enter custom address',\n    ENTER_RECEIVER_ADDRESS: 'Enter Receiver Address',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Invalid Duration',\n    INVALID_QR_LINK: 'Invalid URL, please try again.',\n    INVALID_PRICE: 'Invalid price, please try again.',\n    NO_ADDRESS_DETECTED: 'No address detected, please try again.',\n    INVALID_ADDRESS: 'Invalid address, please try again.',\n  },\n  STEP: {\n    STEP_1: 'Step 1',\n    STEP_2: 'Step 2',\n    STEP_3: 'Step 3',\n    STEP_4: 'Step 4',\n    STEP_5: 'Step 5',\n  },\n  RENEW: {\n    RENEWAL_COST: 'Renewal Cost',\n    ESTIMATED_RENEWAL_COST:\n      'Below is the estimated renewal cost for this transaction.',\n    RENEWAL_COMPLETE: 'Renewal Complete',\n    DOMAINS_READY_FOR_RENEWAL:\n      ' Your domains are now ready renewal. To complete your renewal press proceed.',\n  },\n  TRANSFER: {\n    TRANSFER_TO: 'Transfer to',\n    TRANSFER_COMPLETE: 'Tranfer Complete!',\n    SETUP_INSTRUCTION:\n      'To enabled ENS domains management, your account must be configured to approve domain transfers.',\n    CONTRACT_APPROVAL_NOTE:\n      'Contract approval allows the contract to perform transferring of domains on your behalf.',\n    DOMAINS_READY_FOR_TRANSFER:\n      \"Your domains are now ready for transfer. Enter the reciever's address and press proceed.\",\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Änderungen speichern',\n    PROCEED: 'Fortfahren',\n    DISMISS: 'Verwerfen',\n    CONNECT: 'Verbinden',\n    CONNECT_WALLET: 'Wallet verbinden',\n    DISCONNECT: 'Verbindung trennen',\n    LOGOUT: 'Abmelden',\n    CLOSE: 'Schließen',\n    SETTINGS: 'Einstellungen',\n    LAUNCH_APP: 'App starten',\n    CONNECT_TO_PROCEED: 'Wallet verbinden',\n    VIEW_DETAILS: 'Details anzeigen',\n    REFRESH: 'Aktualisieren',\n    START_REGISTRATION: 'Registrierung starten',\n    CANCEL: 'Abbrechen',\n    PRESS_ENTER: 'Drücke Enter',\n    LEARN_MORE: 'Mehr erfahren',\n    CLOSE_WINDOW: 'Fenster schließen',\n    SHOW_AVAILABLE_ONLY: 'Nur verfügbare anzeigen',\n    SHOW_AVAILABLE: 'Nur verfügbare anzeigen',\n    PROCEED_SEARCH: 'Suche fortsetzen',\n    DOWNLOAD: 'Download',\n    SHOW_ALL: 'Alle anzeigen',\n    DESELECT_ALL: 'Alle abwählen',\n    SHOW_SELCTED: 'Ausgewählte anzeigen',\n    LINK: 'Link',\n    CUSTOM_LINK: 'Eigener Link',\n    SET_QR_LINK_ALL: 'QR-Link alle setzen',\n    SET_QR_LINK: 'QR-Link alle setzen',\n    DISABLE_ALL: 'Alle deaktivieren',\n    DISABLE_QR_CODE: 'QR-Code deaktivieren',\n    ENABLE_QR_CODE: 'QR-Code deaktivieren',\n    SET_QR_COLOR: 'QR-Farbe festlegen',\n    SET_COLOR: 'QR-Farbe festlegen',\n    SET_ALL_COLORS: 'QR-Farbe festlegen',\n    SET_PRICE: 'Preis festlegen',\n    SET_PRICE_ALL: 'Preis alle festlegen',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Profil prüfen',\n    GO_TO_DASHBOARD: 'Zum Dashboard gehen',\n    GO_TO_HOME: 'Gehe zu Home',\n    VIEW_PROFILE: 'Profil anzeigen',\n    CHECK_DOMAINS: 'Domänen überprüfen',\n    TRANSACTION_DETAILS: 'Transaktionsdetails',\n    BUY_NOW: 'Jetzt kaufen',\n    CLEAR_HISTORY: 'Verlauf löschen',\n    DEFAULT: 'Standard',\n    CUSTOM: 'Brauch',\n  },\n  HEADER: {\n    FAQ: 'FAQ',\n    BACK_TO_HOME: 'Zurück zur Startseite',\n    HELP_SUPPORT: 'Hilfe & Support',\n    CANCEL_REGISTRATION: 'Registrierung abbrechen',\n    PROFILE: 'Profil',\n    SETTINGS: 'Einstellungen',\n    DOCS: 'Texte',\n    DOCUMENTATIONS: 'Dokumentationen',\n    CART: 'Warenkorb',\n    BOOKMARKS: 'Lesezeichen',\n    CUSTOM_RPC: 'Benutzerdefinierter RPC',\n  },\n  IPFS: {\n    INITIALISING: 'Starte p2p',\n    FINDING_PEERS: 'Suche Partner',\n    FAILED: 'Fehler',\n    READY: 'Bereit',\n    PUBLISHING: 'Veröffentlichen',\n  },\n  EVENTS: {\n    TRANSFER: 'Überweisung',\n    REGISTRATION: 'Anmeldung',\n    RENEWAL: 'Erneuern',\n    SALE: 'Verkauf',\n    MINT: 'Minze',\n    BURN: 'Verbrennen',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'Netzwerk wird nicht unterstützt. Bitte Netzwerk wechseln.',\n    IPNS_PUBLISHING_COMPLETED: 'Veröffentlichung abgeschlossen!',\n    PENDING_TRANSACTION_CERATED:\n      'Eine neue Transaktion wurde erstellt. Bitte überprüfen Sie Ihre Wallet.',\n  },\n  LABELS: {\n    PLEASE_WAIT: 'Warten Sie mal',\n    SEARCH_FOR: 'Suchen nach',\n    MANAGE: 'Verwalten',\n    COLLECT: 'Sammeln',\n    LANDING_TEXT:\n      'Open-Source, dezentrale Suche, Registrierung und Marktplatz für ENS-Domains.',\n    PROFILE: 'Profil',\n    SEARCH: 'Suchen',\n    CONTAIN_ALPHABET: 'Enthält Alphabet',\n    CONTAIN_NUMBERS: 'Enthält Zahlen',\n    CONTAIN_EMOJI: 'Enthält Emoji',\n    MIN_LENGTH: 'Min. Länge',\n    MAX_LENGTH: 'Max. Länge',\n    CONTAINING_KEYWORDS: 'Enthält Stichwörter',\n    FILTERS: 'Filtern',\n    DOMAINS: 'Domains',\n    DOMAIN_HISTORY: 'Domänengeschichte',\n    EXPIRATION_DATE: 'Verfallsdatum',\n    REGISTRATION_DATE: 'Anmeldung',\n    CREATION_DATE: 'Erstellungsdatum',\n    DETAILS: 'Details',\n    YOUR_DOMAINS: 'Ihre Domains',\n    PROCESSING: 'Verarbeitung',\n    LAYOUT: 'Layout',\n    ENTER_SUFFIX: 'Suffix eingeben',\n    ENTER_PREFIX: 'Präfix eingeben',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' loslegen oder ',\n    TIP: 'Tip',\n    ADVANCED_SEARCH_TIP:\n      'verwenden Sie neue Zeile oder Kommas um Ihre Domain-Einträge zu trennen.',\n    ADVANCED_SEARCH: 'Durchschnittliche Suche',\n    ADVANCED_MODE: 'Erweiterter Modus',\n    REGISTER_DOMAINS_TO: 'Domains registrieren zu',\n    NO_DOMAINS_SELECTED: 'Keine Domains ausgewählt.',\n    FIND_AND_REGISTER: 'Domänen finden z.B. domain1, domain2...',\n    SELECTED_DOMAINS: 'Ausgewählte Domains',\n    REGISTER: 'Registrieren',\n    BOOKMARKS: 'Lesezeichen',\n    SEARCH_RESULTS: 'Suchergebnisse',\n    PROCEED_TO_REGISTRATION: 'Zur Registrierung fortfahren',\n    REGISTER_DOMAINS: 'Domains registrieren zu',\n    REGISTRANT_ADDRESS: 'Adresse des Interessenten',\n    SET_RESOLVER: 'Auflöser setzen',\n    TOTAL_COST: 'Gesamtkosten',\n    GAS_PRICE: 'Gaspreis',\n    NO_ADDRESS_DETECTED: 'Keine Adresse erkannt.',\n    DURATION: 'Dauer',\n    NOTICE_SELECT_AN_RPC:\n      'Hinweis: Wählen Sie einen RPC aus, der in der Anwendung verwendet wird, um den Standard-RPC-Anbieter zu ersetzen.',\n    ENABLE_LIGHT_MODE: 'Aktivieren Sie den hellen Layoutstil.',\n  },\n  REGISTRATION: {\n    BEFORE_COMMIT: 'Schritt 1: Registrierung anfordern.',\n    COMMIT_SENT: 'Anfrage wird verarbeitet...',\n    COMMIT_COMPLETE: 'Schritt 1: Registrierung anfordern...',\n    AWAIT: 'Anfrage wird verarbeitet...',\n    BEFORE_REGISTRATION: 'Registrierung anfordern.',\n    REGISTRATION_SENT: 'Registrierung wird abgeschlossen...',\n    REGISTRATION_COMPLETE: 'Anmeldung!',\n    REGISTRATION_COMPLETE_TITLE: 'Anmeldung',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED:\n      'Ihre Domains wurden jetzt registriert.',\n    BASKET_EMPTY: 'Ihr Warenkorb ist leer',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Bitte wählen Sie neue Domains zum Registrieren aus.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED:\n      'Transaktion abgebrochen. Bitte versuchen Sie es erneut.',\n  },\n  SPINNER: {\n    NO_DATA_TO_DISPLAY: 'Keine Elemente zum Anzeigen.',\n    PERFORMING_SEARCH: 'Suche wird durchgeführt...',\n    LOADING_DATA: 'Lade Daten...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Bitte folgen Sie den Anweisungen in Ihrer Brieftasche um fortzufahren.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Dauer eingeben',\n    ENTER_QR_LINK: 'Eigene QR-Code URL eingeben',\n    ENTER_PRICE: 'Preis eingeben',\n    ENTER_CUSTOM_ADDRESS: 'Eigene Adresse eingeben',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Ungültige Dauer',\n    INVALID_QR_LINK: 'Ungültige URL, bitte versuchen Sie es erneut.',\n    INVALID_PRICE: 'Ungültiger Preis, bitte versuchen Sie es erneut.',\n    NO_ADDRESS_DETECTED:\n      'Keine Adresse erkannt, bitte versuchen Sie es erneut.',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: '保存更改',\n    PROCEED: '继续',\n    DISMISS: '关闭',\n    CONNECT: '连接',\n    CONNECT_WALLET: '连接钱包',\n    DISCONNECT: '断开连接',\n    LOGOUT: '注销',\n    CLOSE: '关闭',\n    SETTINGS: '设置',\n    LAUNCH_APP: '启动应用程序',\n    CONNECT_TO_PROCEED: '连接钱包',\n    VIEW_DETAILS: '查看详情',\n    REFRESH: '刷新',\n    START_REGISTRATION: '开始注册',\n    CANCEL: '取消',\n    PRESS_ENTER: '按回车键',\n    LEARN_MORE: '了解更多',\n    CLOSE_WINDOW: '关闭窗口',\n    SHOW_AVAILABLE_ONLY: '仅显示可用的',\n    SHOW_AVAILABLE: '仅显示可用的',\n    PROCEED_SEARCH: '正在搜索',\n    DOWNLOAD: '下载',\n    SHOW_ALL: '显示全部',\n    DESELECT_ALL: '取消全选',\n    SHOW_SELCTED: '显示选中的',\n    LINK: '链接',\n    CUSTOM_LINK: '自定义链接',\n    SET_QR_LINK_ALL: '设置所有 QR 链接',\n    SET_QR_LINK: 'Set QR Link',\n    DISABLE_ALL: '禁用所有',\n    DISABLE_QR_CODE: '禁用二维码',\n    ENABLE_QR_CODE: '启用二维码',\n    SET_QR_COLOR: '设置 QR 颜色',\n    SET_COLOR: '设置颜色',\n    SET_ALL_COLORS: '设置 QR 颜色',\n    SET_PRICE: '设置价格',\n    SET_PRICE_ALL: '设置价格所有',\n    RESET: 'Reset',\n    CHECK_PROFILE: '检查个人资料',\n    GO_TO_DASHBOARD: '转到仪表板',\n    GO_TO_HOME: '返回首页',\n    VIEW_PROFILE: '查看个人资料',\n    CHECK_DOMAINS: '检查域',\n    TRANSACTION_DETAILS: '交易详情',\n    BUY_NOW: '立即购买',\n    CLEAR_HISTORY: '清除历史记录',\n    DEFAULT: '默认',\n    CUSTOM: '风俗',\n  },\n  HEADER: {\n    FAQ: '常见问题',\n    BACK_TO_HOME: '返回首页',\n    HELP_SUPPORT: '帮助与支持',\n    CANCEL_REGISTRATION: '取消注册',\n    PROFILE: '个人信息',\n    SETTINGS: '设置',\n    DOCS: '文档',\n    DOCUMENTATIONS: '文件',\n    CART: '购物车',\n    BOOKMARKS: '书签',\n    CUSTOM_RPC: '自定义 RPC',\n  },\n  IPFS: {\n    INITIALISING: '正在启动 p2p',\n    FINDING_PEERS: '查找节点',\n    FAILED: '失败',\n    READY: '准备好',\n    PUBLISHING: '发布',\n  },\n  EVENTS: {\n    TRANSFER: '转移',\n    REGISTRATION: '登记',\n    RENEWAL: '续费',\n    SALE: '销售',\n    MINT: '分钟数',\n    BURN: '刻录',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE: '不支持网络。请更改您的网络。',\n    IPNS_PUBLISHING_COMPLETED: '发布已完成！',\n    PENDING_TRANSACTION_CERATED: '新交易已创建。请检查您的钱包。',\n  },\n  LABELS: {\n    PLEASE_WAIT: '请稍等',\n    SEARCH_FOR: '搜索',\n    MANAGE: '管理',\n    COLLECT: '搜集',\n    LANDING_TEXT: '开源、去中心化的 ENS 域名搜索、注册和市场',\n    PROFILE: '个人信息',\n    SEARCH: '搜索',\n    CONTAIN_ALPHABET: '包含字母表',\n    CONTAIN_NUMBERS: '包含数字',\n    CONTAIN_EMOJI: '包含表情',\n    MIN_LENGTH: '最小长度',\n    MAX_LENGTH: '最大长度',\n    CONTAINING_KEYWORDS: '包含关键字',\n    FILTERS: '筛选器',\n    DOMAINS: '域',\n    DOMAIN_HISTORY: '域名历史',\n    EXPIRATION_DATE: '过期日期',\n    REGISTRATION_DATE: '登记',\n    CREATION_DATE: '创建日期',\n    DETAILS: '详细信息',\n    YOUR_DOMAINS: '您的域',\n    PROCESSING: '处理中',\n    LAYOUT: '布局',\n    ENTER_SUFFIX: '输入后缀',\n    ENTER_PREFIX: '输入前缀',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' 开始或 ',\n    TIP: 'Tip',\n    ADVANCED_SEARCH_TIP: '使用新行或逗号分隔你的域名。',\n    ADVANCED_SEARCH: '平均搜索',\n    ADVANCED_MODE: '高级模式',\n    REGISTER_DOMAINS_TO: '注册域名到',\n    NO_DOMAINS_SELECTED: '未选择域名。',\n    FIND_AND_REGISTER: '查找域，例如 domain1, domain2...',\n    SELECTED_DOMAINS: '选定域',\n    REGISTER: '注册',\n    BOOKMARKS: '书签',\n    SEARCH_RESULTS: '搜索结果',\n    PROCEED_TO_REGISTRATION: '继续注册',\n    REGISTER_DOMAINS: '注册域名到',\n    REGISTRANT_ADDRESS: '注册地址',\n    SET_RESOLVER: '设置解析器',\n    TOTAL_COST: '总成本',\n    GAS_PRICE: '煤气价格',\n    NO_ADDRESS_DETECTED: '未检测到地址。',\n    DURATION: '期限',\n    NOTICE_SELECT_AN_RPC:\n      '注意：选择一个将在应用程序中使用的 RPC 来替换默认的 RPC 提供程序。',\n    ENABLE_LIGHT_MODE: '启用灯光布局样式。',\n  },\n  REGISTRATION: {\n    BEFORE_COMMIT: '第 1 步：请求注册。',\n    COMMIT_SENT: '正在处理请求...',\n    COMMIT_COMPLETE: '第 1 步：请求注册。',\n    AWAIT: '正在处理请求...',\n    BEFORE_REGISTRATION: '请求注册。',\n    REGISTRATION_SENT: '正在完成注册...',\n    REGISTRATION_COMPLETE: '登记!',\n    REGISTRATION_COMPLETE_TITLE: '登记',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: '您的域名已被注册。',\n    BASKET_EMPTY: '您的篮子是空的',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER: '请选择要注册的新域名。',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: '交易已取消。请重试。',\n  },\n  SPINNER: {\n    NO_DATA_TO_DISPLAY: '没有要显示的项目。',\n    PERFORMING_SEARCH: '正在执行搜索...',\n    LOADING_DATA: '正在加载数据...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET: '请按照你钱包中的说明继续操作。',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: '输入持续时间',\n    ENTER_QR_LINK: '输入自定义 QR 代码 URL',\n    ENTER_PRICE: '输入价格',\n    ENTER_CUSTOM_ADDRESS: '输入自定义地址',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: '无效时长',\n    INVALID_QR_LINK: '无效的 URL，请重试。',\n    INVALID_PRICE: '价格无效，请重试。',\n    NO_ADDRESS_DETECTED: '未检测到地址，请重试。',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: '変更を保存',\n    PROCEED: '続行する',\n    DISMISS: '却下する',\n    CONNECT: '接続する',\n    CONNECT_WALLET: 'ウォレットに接続',\n    DISCONNECT: '接続を解除',\n    LOGOUT: 'ログアウト',\n    CLOSE: '閉じる',\n    SETTINGS: '設定',\n    LAUNCH_APP: 'アプリを起動',\n    CONNECT_TO_PROCEED: 'ウォレットに接続',\n    VIEW_DETAILS: '詳細を表示',\n    REFRESH: '更新',\n    START_REGISTRATION: '登録を開始',\n    CANCEL: 'キャンセル',\n    PRESS_ENTER: 'Enter キーを押します',\n    LEARN_MORE: 'もっと詳しく',\n    CLOSE_WINDOW: 'ウィンドウを閉じる',\n    SHOW_AVAILABLE_ONLY: '利用可能なもののみ表示',\n    SHOW_AVAILABLE: '利用可能なもののみ表示',\n    PROCEED_SEARCH: '検索を続行する',\n    DOWNLOAD: 'ダウンロード',\n    SHOW_ALL: 'すべて表示',\n    DESELECT_ALL: 'すべての選択を解除',\n    SHOW_SELCTED: '選択したものを表示',\n    LINK: 'リンク',\n    CUSTOM_LINK: 'カスタムリンク',\n    SET_QR_LINK_ALL: 'QRリンクをすべて設定',\n    SET_QR_LINK: 'QRリンクをすべて設定',\n    DISABLE_ALL: 'すべて無効',\n    DISABLE_QR_CODE: 'QRコードを無効にする',\n    ENABLE_QR_CODE: 'QRコードを有効にする',\n    SET_QR_COLOR: 'QRコードの色を設定',\n    SET_COLOR: 'QRコードの色を設定',\n    SET_ALL_COLORS: 'QRコードの色を設定',\n    SET_PRICE: '価格の設定',\n    SET_PRICE_ALL: '価格を全て設定',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'プロファイルを確認',\n    GO_TO_DASHBOARD: 'ダッシュボードに移動',\n    GO_TO_HOME: 'ホームへ移動',\n    VIEW_PROFILE: 'プロフィールを表示',\n    CHECK_DOMAINS: 'ドメインを確認',\n    TRANSACTION_DETAILS: 'トランザクションの詳細',\n    BUY_NOW: '今すぐ購入',\n    CLEAR_HISTORY: '履歴をクリア',\n    DEFAULT: 'デフォルト',\n    CUSTOM: 'カスタム',\n  },\n  HEADER: {\n    FAQ: 'よくある質問',\n    BACK_TO_HOME: 'ホームに戻る',\n    HELP_SUPPORT: 'ヘルプ & サポート',\n    CANCEL_REGISTRATION: '登録をキャンセル',\n    PROFILE: 'プロフィール',\n    SETTINGS: '設定',\n    DOCS: 'ドキュメント',\n    DOCUMENTATIONS: '文書',\n    CART: 'カート',\n    BOOKMARKS: 'ブックマーク',\n    CUSTOM_RPC: 'カスタム RPC',\n  },\n  IPFS: {\n    INITIALISING: 'p2pを開始',\n    FINDING_PEERS: 'ピアを検索中',\n    FAILED: '失敗しました',\n    READY: '準備完了',\n    PUBLISHING: '公開',\n  },\n  EVENTS: {\n    TRANSFER: '送金',\n    REGISTRATION: '登録',\n    RENEWAL: '更新',\n    SALE: '販売',\n    MINT: '造幣局',\n    BURN: '書き込み中',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'ネットワークはサポートされていません。ネットワークを変更してください。',\n    IPNS_PUBLISHING_COMPLETED: '公開完了！',\n    PENDING_TRANSACTION_CERATED:\n      '新しい取引が作成されました。ウォレットを確認してください。',\n  },\n  LABELS: {\n    PLEASE_WAIT: 'お待ちください',\n    SEARCH_FOR: '検索する',\n    MANAGE: '管理',\n    COLLECT: '収集',\n    LANDING_TEXT:\n      'オープンソース、分散型、ENS ドメインの検索、登録、および 市場。',\n    PROFILE: 'プロフィール',\n    SEARCH: '検索',\n    CONTAIN_ALPHABET: 'アルファベットが含まれています',\n    CONTAIN_NUMBERS: '数字が含まれています',\n    CONTAIN_EMOJI: '絵文字を含む',\n    MIN_LENGTH: '最小長さ',\n    MAX_LENGTH: '最大の長さ',\n    CONTAINING_KEYWORDS: 'キーワードを含む',\n    FILTERS: 'フィルタ',\n    DOMAINS: 'ドメイン',\n    DOMAIN_HISTORY: 'ドメイン履歴',\n    EXPIRATION_DATE: '有効期限日',\n    REGISTRATION_DATE: '登録',\n    CREATION_DATE: '作成日',\n    DETAILS: '詳細',\n    YOUR_DOMAINS: 'あなたのドメイン',\n    PROCESSING: '処理中',\n    LAYOUT: 'レイアウト',\n    ENTER_SUFFIX: 'サフィックスを入力',\n    ENTER_PREFIX: 'サフィックスを入力',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' 始めるには ',\n    TIP: 'Tip',\n    ADVANCED_SEARCH_TIP:\n      '新しい行またはカンマを使用して、ドメインエントリを分離します。',\n    ADVANCED_SEARCH: '高度な検索',\n    ADVANCED_MODE: '詳細モード',\n    REGISTER_DOMAINS_TO: 'ドメインを登録先',\n    NO_DOMAINS_SELECTED: 'ドメインが選択されていません。',\n    FIND_AND_REGISTER: 'ドメインを検索します。例：domain1, domain2...',\n    SELECTED_DOMAINS: '選択したドメイン',\n    REGISTER: '登録',\n    BOOKMARKS: 'ブックマーク',\n    SEARCH_RESULTS: '検索結果',\n    PROCEED_TO_REGISTRATION: '登録に進む',\n    REGISTER_DOMAINS: 'ドメインを登録先',\n    REGISTRANT_ADDRESS: '登録者アドレス',\n    SET_RESOLVER: 'リゾルバーを設定',\n    TOTAL_COST: '合計コスト',\n    GAS_PRICE: 'ガス価格',\n    NO_ADDRESS_DETECTED: 'アドレスが見つかりません。',\n    DURATION: '期間',\n    NOTICE_SELECT_AN_RPC:\n      '注意: アプリケーションで使用される RPC を選択して、デフォルトの RPC プロバイダーを置き換えます。',\n    ENABLE_LIGHT_MODE: 'ライト レイアウト スタイルを有効にします。',\n  },\n  REGISTRATION: {\n    BEFORE_COMMIT: 'ステップ 1: リクエスト登録',\n    COMMIT_SENT: 'リクエストを処理しています...',\n    COMMIT_COMPLETE: 'ステップ 1: リクエスト登録',\n    AWAIT: 'リクエストを処理しています...',\n    BEFORE_REGISTRATION: 'リクエスト登録',\n    REGISTRATION_SENT: '登録を完了中...',\n    REGISTRATION_COMPLETE: '登録!',\n    REGISTRATION_COMPLETE_TITLE: '登録',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'ドメインが登録されました。',\n    BASKET_EMPTY: 'カートが空です',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      '登録する新しいドメインを選択してください。',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED:\n      '取引がキャンセルされました。もう一度やり直してください。',\n  },\n  SPINNER: {\n    NO_DATA_TO_DISPLAY: '表示する項目がありません。',\n    PERFORMING_SEARCH: '検索を実行中...',\n    LOADING_DATA: 'データを読み込み中...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      '続行するにはウォレットの指示に従ってください。',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: '期間を入力',\n    ENTER_QR_LINK: 'カスタム QR コードのURLを入力してください',\n    ENTER_PRICE: '価格を入力',\n    ENTER_CUSTOM_ADDRESS: 'カスタムアドレスを入力してください',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: '無効な期間',\n    INVALID_QR_LINK: '無効な URL です。もう一度やり直してください。',\n    INVALID_PRICE: '無効な価格です。もう一度やり直してください。',\n    NO_ADDRESS_DETECTED:\n      'アドレスが見つかりませんでした。もう一度やり直してください。',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Guardar Cambios',\n    PROCEED: 'Continuar',\n    DISMISS: 'Descartar',\n    CONNECT: 'Conectar',\n    CONNECT_WALLET: 'Conectar cartera',\n    DISCONNECT: 'Desconectar',\n    LOGOUT: 'Cerrar sesión',\n    CLOSE: 'Cerrar',\n    SETTINGS: 'Ajustes',\n    LAUNCH_APP: 'Iniciar App',\n    CONNECT_TO_PROCEED: 'Conectar cartera',\n    VIEW_DETAILS: 'Ver detalles',\n    REFRESH: 'Refrescar',\n    START_REGISTRATION: 'Iniciar registro',\n    CANCEL: 'Cancelar',\n    PRESS_ENTER: 'Presione Entrar',\n    LEARN_MORE: 'Más información',\n    CLOSE_WINDOW: 'Cerrar ventana',\n    SHOW_AVAILABLE_ONLY: 'Mostrar sólo disponible',\n    SHOW_AVAILABLE: 'Mostrar sólo disponible',\n    PROCEED_SEARCH: 'Proceder búsqueda',\n    DOWNLOAD: 'Descargar',\n    SHOW_ALL: 'Mostrar todo',\n    DESELECT_ALL: 'Deseleccionar todo',\n    SHOW_SELCTED: 'Mostrar seleccionados',\n    LINK: 'Enlace',\n    CUSTOM_LINK: 'Enlace personalizado',\n    SET_QR_LINK_ALL: 'Establecer todos los enlaces QR',\n    SET_QR_LINK: 'Establecer todos los enlaces QR',\n    DISABLE_ALL: 'Desactivar todo',\n    DISABLE_QR_CODE: 'Desactivar código QR',\n    ENABLE_QR_CODE: 'Habilitar código QR',\n    SET_QR_COLOR: 'Establecer color QR',\n    SET_COLOR: 'Definir color',\n    SET_ALL_COLORS: 'Establecer todos los colores',\n    SET_PRICE: 'Fijar Precio',\n    SET_PRICE_ALL: 'Fijar precio todo',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Comprobar perfil',\n    GO_TO_DASHBOARD: 'Ir al Tablero',\n    GO_TO_HOME: 'Ir a Inicio',\n    VIEW_PROFILE: 'Ver perfil',\n    CHECK_DOMAINS: 'Comprobar dominios',\n    TRANSACTION_DETAILS: 'Detalles de la transacción',\n    BUY_NOW: 'Comprar ahora',\n    CLEAR_HISTORY: 'Borrar historial',\n    DEFAULT: 'Defecto',\n    CUSTOM: 'Disfraz',\n  },\n  HEADER: {\n    FAQ: 'FAQs',\n    BACK_TO_HOME: 'Volver a Inicio',\n    HELP_SUPPORT: 'Ayuda y soporte',\n    CANCEL_REGISTRATION: 'Cancelar Registro',\n    PROFILE: 'Perfil',\n    SETTINGS: 'Ajustes',\n    DOCS: 'Documentos',\n    DOCUMENTATIONS: 'Documentaciones',\n    CART: 'Carrito',\n    BOOKMARKS: 'Marcadores',\n    CUSTOM_RPC: 'RPC personalizado',\n  },\n  IPFS: {\n    INITIALISING: 'Iniciando p2p',\n    FINDING_PEERS: 'Encontrando pares',\n    FAILED: 'Fallo',\n    READY: 'Listo',\n    PUBLISHING: 'Publicación',\n  },\n  EVENTS: {\n    TRANSFER: 'Transferir',\n    REGISTRATION: 'Registro',\n    RENEWAL: 'Renovación',\n    SALE: 'Venta',\n    MINT: 'Moneda',\n    BURN: 'Quemar',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'La red no es compatible. Por favor, cambie su red.',\n    IPNS_PUBLISHING_COMPLETED: '¡Publicación completada!',\n    PENDING_TRANSACTION_CERATED:\n      'Se ha creado una nueva transacción. Por favor, comprueba tu cartera.',\n  },\n  LABELS: {\n    PLEASE_WAIT: 'Espere por favor',\n    SEARCH_FOR: 'Buscar',\n    MANAGE: 'Administrar',\n    COLLECT: 'Recoger',\n    LANDING_TEXT:\n      'Mercado, registro y búsqueda de dominios ENS descentralizados y de código abierto.',\n    PROFILE: 'Perfil',\n    SEARCH: 'Buscar',\n    CONTAIN_ALPHABET: 'Contiene el alfabeto',\n    CONTAIN_NUMBERS: 'Contiene números',\n    CONTAIN_EMOJI: 'Contiene Emoji',\n    MIN_LENGTH: 'Longitud Mínima',\n    MAX_LENGTH: 'Longitud Máxima',\n    CONTAINING_KEYWORDS: 'Conteniendo palabras clave',\n    FILTERS: 'Filtros',\n    DOMAINS: 'Dominios',\n    DOMAIN_HISTORY: 'Historial de dominios',\n    EXPIRATION_DATE: 'Fecha de caducidad',\n    REGISTRATION_DATE: 'Fecha de registro',\n    CREATION_DATE: 'Fecha de creación',\n    DETAILS: 'Detalles',\n    YOUR_DOMAINS: 'Tus dominios',\n    PROCESSING: 'Procesando',\n    LAYOUT: 'Diseño',\n    ENTER_SUFFIX: 'Introducir sufijo',\n    ENTER_PREFIX: 'Introduzca prefijo',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' para empezar o ',\n    TIP: 'Tip',\n    ADVANCED_SEARCH_TIP:\n      'utilice una nueva línea o comas para separar sus entradas de dominio.',\n    ADVANCED_SEARCH: 'Búsqueda Avanzada',\n    ADVANCED_MODE: 'Modo avanzado',\n    REGISTER_DOMAINS_TO: 'Registrar Dominios a',\n    NO_DOMAINS_SELECTED: 'No hay dominios seleccionados.',\n    FIND_AND_REGISTER: 'Buscar dominios por ejemplo dominio1, dominio2...',\n    SELECTED_DOMAINS: 'Dominios seleccionados',\n    REGISTER: 'Registrarse',\n    BOOKMARKS: 'Marcadores',\n    SEARCH_RESULTS: 'Resultados de búsqueda',\n    PROCEED_TO_REGISTRATION: 'Continuar con el registro',\n    REGISTER_DOMAINS: 'Registrar Dominios a',\n    REGISTRANT_ADDRESS: 'Registrar dirección',\n    SET_RESOLVER: 'Definir Resolver',\n    TOTAL_COST: 'Coste total',\n    GAS_PRICE: 'Precio gas',\n    NO_ADDRESS_DETECTED: 'Ninguna dirección detectada.',\n    DURATION: 'Duración',\n    NOTICE_SELECT_AN_RPC:\n      'Aviso: seleccione un RPC que se utilizará en la aplicación para reemplazar el proveedor de RPC predeterminado.',\n    ENABLE_LIGHT_MODE: 'Habilite el estilo de diseño claro.',\n  },\n  REGISTRATION: {\n    BEFORE_COMMIT: 'Paso 1: solicitar registro.',\n    COMMIT_SENT: 'Procesando solicitud...',\n    COMMIT_COMPLETE: 'Paso 1: solicitar registro...',\n    AWAIT: 'Procesando solicitud...',\n    BEFORE_REGISTRATION: 'Solicitar registro.',\n    REGISTRATION_SENT: 'Completando registro...',\n    REGISTRATION_COMPLETE: 'Fecha de registro!',\n    REGISTRATION_COMPLETE_TITLE: 'Registro completado',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'Tus dominios han sido registrados.',\n    BASKET_EMPTY: 'Tu cesta está vacía',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Por favor, seleccione nuevos dominios para registrarse.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Transacción cancelada. Por favor, inténtelo de nuevo.',\n  },\n  SPINNER: {\n    NO_DATA_TO_DISPLAY: 'No hay elementos para mostrar.',\n    PERFORMING_SEARCH: 'Realizando búsqueda...',\n    LOADING_DATA: 'Cargando datos...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Siga las instrucciones de su cartera para continuar.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Introducir duración',\n    ENTER_QR_LINK: 'Introduzca la URL personalizada del código QR',\n    ENTER_PRICE: 'Introducir precio',\n    ENTER_CUSTOM_ADDRESS: 'Introduzca dirección personalizada',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Duración no válida',\n    INVALID_QR_LINK: 'URL no válida, por favor inténtelo de nuevo.',\n    INVALID_PRICE: 'Precio no válido, por favor inténtalo de nuevo.',\n    NO_ADDRESS_DETECTED:\n      'No se ha detectado ninguna dirección, inténtelo de nuevo.',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Сохранить изменения',\n    PROCEED: 'Продолжить',\n    DISMISS: 'Отклонить',\n    CONNECT: 'Подключиться',\n    CONNECT_WALLET: 'Подключить кошелёк',\n    DISCONNECT: 'Отключиться',\n    LOGOUT: 'Выйти',\n    CLOSE: 'Закрыть',\n    SETTINGS: 'Настройки',\n    LAUNCH_APP: 'Запустить приложение',\n    CONNECT_TO_PROCEED: 'Подключить кошелёк',\n    VIEW_DETAILS: 'Подробности',\n    REFRESH: 'Обновить',\n    START_REGISTRATION: 'Начать регистрацию',\n    CANCEL: 'Отмена',\n    PRESS_ENTER: 'Нажмите Enter',\n    LEARN_MORE: 'Узнать больше',\n    CLOSE_WINDOW: 'Закрыть окно',\n    SHOW_AVAILABLE_ONLY: 'Показать только доступные',\n    SHOW_AVAILABLE: 'Показать доступные',\n    PROCEED_SEARCH: 'Продолжить поиск',\n    DOWNLOAD: 'Скачать',\n    SHOW_ALL: 'Показать все',\n    DESELECT_ALL: 'Отменить выбор',\n    SHOW_SELCTED: 'Показать выбранные',\n    LINK: 'Ссылка',\n    CUSTOM_LINK: 'Пользовательская ссылка',\n    SET_QR_LINK_ALL: 'Установить QR ссылку на все',\n    SET_QR_LINK: 'Установить QR ссылку',\n    DISABLE_ALL: 'Отключить все',\n    DISABLE_QR_CODE: 'Отключить QR-код',\n    ENABLE_QR_CODE: 'Включить QR-код',\n    SET_QR_COLOR: 'Установить цвет QR-кода',\n    SET_COLOR: 'Выбрать цвет',\n    SET_ALL_COLORS: 'Установить цвет для всего',\n    SET_PRICE: 'Установить цену',\n    SET_PRICE_ALL: 'Установить цену для всего',\n    RESET: 'Сбросить',\n    CHECK_PROFILE: 'Перейти в профиль',\n    GO_TO_DASHBOARD: 'Перейти к панели управления',\n    GO_TO_HOME: 'Перейти на главную',\n    VIEW_PROFILE: 'Просмотр профиля',\n    CHECK_DOMAINS: 'Просмотр доменов',\n    TRANSACTION_DETAILS: 'Подробности транзакции',\n    BUY_NOW: 'Купить сейчас',\n    CLEAR_HISTORY: 'Очистить историю',\n    DEFAULT: 'По умолчанию',\n    CUSTOM: 'Пользовательский',\n  },\n  HEADER: {\n    FAQ: 'ЧАВО',\n    BACK_TO_HOME: 'Назад на главную',\n    HELP_SUPPORT: 'Помощь и поддержка',\n    CANCEL_REGISTRATION: 'Отменить регистрацию',\n    PROFILE: 'Профиль',\n    SETTINGS: 'Настройки',\n    DOCS: 'Документация',\n    DOCUMENTATIONS: 'Документация',\n    CART: 'Корзина',\n    BOOKMARKS: 'Закладки',\n    CUSTOM_RPC: 'Пользовательский RPC',\n  },\n  IPFS: {\n    INITIALISING: 'Запуск p2p',\n    FINDING_PEERS: 'Поиск пиров',\n    FAILED: 'Неудача',\n    READY: 'Успех',\n    PUBLISHING: 'Публикация',\n  },\n  EVENTS: {\n    TRANSFER: 'Перевод',\n    REGISTRATION: 'Регистрация',\n    RENEWAL: 'Продление',\n    SALE: 'Продажа',\n    MINT: 'Чеканка',\n    BURN: 'Сжигание',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      'Сеть не поддерживается. Пожалуйста, смените сеть.',\n    IPNS_PUBLISHING_COMPLETED: 'Публикация завершена!',\n    PENDING_TRANSACTION_CERATED:\n      'Была создана новая транзакция. Пожалуйста, проверьте ваш кошелек.',\n  },\n  LABELS: {\n    PLEASE_WAIT: 'Пожалуйста подождите',\n    SEARCH_FOR: 'искать',\n    MANAGE: 'управлять',\n    COLLECT: 'собирать',\n    LANDING_TEXT:\n      'Открытый децентрализованный поиск ENS доменов, регистрация и торговая площадка.',\n    PROFILE: 'Профиль',\n    SEARCH: 'Искать',\n    CONTAIN_ALPHABET: 'Содержащие буквы',\n    CONTAIN_NUMBERS: 'Содержащие цифры',\n    CONTAIN_EMOJI: 'Содержит эмодзи',\n    MIN_LENGTH: 'Мин. длина',\n    MAX_LENGTH: 'Макс. длина',\n    CONTAINING_KEYWORDS: 'Содержащие ключевые слова',\n    FILTERS: 'Фильтры',\n    DOMAINS: 'Домены',\n    DOMAIN_HISTORY: 'История доменов',\n    EXPIRATION_DATE: 'Дата истечения',\n    REGISTRATION_DATE: 'Регистрация',\n    CREATION_DATE: 'Дата создания',\n    DETAILS: 'Подробности',\n    YOUR_DOMAINS: 'Ваши домены',\n    PROCESSING: 'Обработка',\n    LAYOUT: 'Макет',\n    ENTER_SUFFIX: 'Введите постфикс',\n    ENTER_PREFIX: 'Укажите приставку',\n    CLICK: 'Нажать',\n    CONNECT_TO_START: ' чтобы начать или ',\n    TIP: 'Совет',\n    ADVANCED_SEARCH_TIP:\n      'используйте новую строку или запятую для разделения ваших доменов.',\n    ADVANCED_SEARCH: 'Расширенный поиск',\n    ADVANCED_MODE: 'Расширенный режим',\n    REGISTER_DOMAINS_TO: 'Регистрация доменов для',\n    NO_DOMAINS_SELECTED: 'Домены не выбраны.',\n    FIND_AND_REGISTER: 'Поиск доменов, например домен1, домен2...',\n    SELECTED_DOMAINS: 'Выбранные домены',\n    REGISTER: 'Зарегистрировать',\n    BOOKMARKS: 'Закладки',\n    SEARCH_RESULTS: 'Результаты поиска',\n    PROCEED_TO_REGISTRATION: 'Перейти к регистрации',\n    REGISTER_DOMAINS: 'Регистрация доменов для',\n    REGISTRANT_ADDRESS: 'Регистрационный адрес',\n    SET_RESOLVER: 'Установить резолвер',\n    TOTAL_COST: 'Общая стоимость',\n    GAS_PRICE: 'Цена газа',\n    NO_ADDRESS_DETECTED: 'Адрес не обнаружен.',\n    DURATION: 'Продолжительность регистрации',\n    NOTICE_SELECT_AN_RPC:\n      'Примечание: выберите RPC, который будет использоваться в приложении для замены RPC по умолчанию.',\n    ENABLE_LIGHT_MODE: 'Включить светлую тему.',\n  },\n  REGISTRATION: {\n    BEFORE_COMMIT: 'Шаг 1: запрос на регистрацию.',\n    COMMIT_SENT: 'Обработка запроса...',\n    COMMIT_COMPLETE: 'Шаг 1: запрос на регистрацию...',\n    AWAIT: 'Обработка запроса...',\n    BEFORE_REGISTRATION: 'запрос на регистрацию.',\n    REGISTRATION_SENT: 'Завершение регистрации...',\n    REGISTRATION_COMPLETE: 'Регистрация!',\n    REGISTRATION_COMPLETE_TITLE: 'Регистрация завершена',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'Ваши домены зарегистрированы.',\n    BASKET_EMPTY: 'Ваша корзина пуста',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Пожалуйста, выберите новые домены для регистрации.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Транзакция отменена. Пожалуйста, попробуйте еще раз.',\n  },\n  SPINNER: {\n    NO_DATA_TO_DISPLAY: 'Нет элементов для отображения.',\n    PERFORMING_SEARCH: 'Выполняется поиск...',\n    LOADING_DATA: 'Загрузка данных...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Чтобы продолжить, следуйте инструкциям в вашем кошельке.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Введите длительность',\n    ENTER_QR_LINK: 'Введите ссылку на свой QR-код',\n    ENTER_PRICE: 'Введите цену',\n    ENTER_CUSTOM_ADDRESS: 'Введите свой адрес',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Неверная длительность',\n    INVALID_QR_LINK: 'Неправильный URL, попробуйте еще раз.',\n    INVALID_PRICE: 'Неправильная цена, попробуйте еще раз.',\n    NO_ADDRESS_DETECTED: 'Адрес не обнаружен, попробуйте еще раз.',\n  },\n};\n","export default {\n  BUTTON: {\n    SAVE_CHANGES: 'Enregistrer les modifications',\n    PROCEED: 'Procéder',\n    DISMISS: 'Refuser',\n    CONNECT: 'Connecter',\n    CONNECT_WALLET: 'Connecter le portefeuille',\n    DISCONNECT: 'Déconnecter',\n    LOGOUT: 'Déconnexion',\n    CLOSE: 'Fermer',\n    SETTINGS: 'Réglages',\n    LAUNCH_APP: \"Lancer l'application\",\n    CONNECT_TO_PROCEED: 'Connecter le portefeuille',\n    VIEW_DETAILS: 'Voir les détails',\n    REFRESH: 'Rafraîchir',\n    START_REGISTRATION: \"Commencer l'inscription\",\n    CANCEL: 'Abandonner',\n    PRESS_ENTER: 'Appuyez sur Entrée',\n    LEARN_MORE: 'En savoir plus',\n    CLOSE_WINDOW: 'Fermer la fenêtre',\n    SHOW_AVAILABLE_ONLY: 'Afficher uniquement les disponibilités',\n    SHOW_AVAILABLE: 'Afficher uniquement les disponibilités',\n    PROCEED_SEARCH: 'Poursuivre la recherche',\n    DOWNLOAD: 'Télécharger',\n    SHOW_ALL: 'Tout afficher',\n    DESELECT_ALL: 'Désélectionner tout',\n    SHOW_SELCTED: 'Afficher la sélection',\n    LINK: 'Lier',\n    CUSTOM_LINK: 'Lien personnalisé',\n    SET_QR_LINK_ALL: 'Définir le lien QR',\n    SET_QR_LINK: 'Définir le lien QR',\n    DISABLE_ALL: 'Désactiver tout',\n    DISABLE_QR_CODE: 'Désactiver le QR Code',\n    ENABLE_QR_CODE: 'Désactiver le QR Code',\n    SET_QR_COLOR: 'Définir la couleur du QR',\n    SET_COLOR: 'Définir la couleur du QR',\n    SET_ALL_COLORS: 'Définir la couleur du QR',\n    SET_PRICE: 'Fixer le prix',\n    SET_PRICE_ALL: 'Fixer le prix à tous',\n    RESET: 'Reset',\n    CHECK_PROFILE: 'Vérifier le profil',\n    GO_TO_DASHBOARD: 'Aller au tableau de bord',\n    GO_TO_HOME: \"Aller à la page d'accueil\",\n    VIEW_PROFILE: 'Voir le profil',\n    CHECK_DOMAINS: 'Vérifier les domaines',\n    TRANSACTION_DETAILS: 'Détails de la transaction',\n    BUY_NOW: 'Acheter maintenant',\n    CLEAR_HISTORY: 'Histoire claire',\n    DEFAULT: 'Défaut',\n    CUSTOM: 'Personnalisé',\n  },\n  HEADER: {\n    FAQ: 'Foire aux questions',\n    BACK_TO_HOME: \"Retour à la page d'accueil\",\n    HELP_SUPPORT: 'Aide & Support',\n    CANCEL_REGISTRATION: \"Annuler l'inscription\",\n    PROFILE: 'Profil',\n    SETTINGS: 'Réglages',\n    DOCS: 'Documents',\n    DOCUMENTATIONS: 'Documentations',\n    CART: 'Panier',\n    BOOKMARKS: 'Signets',\n    CUSTOM_RPC: 'RPC personnalisé',\n  },\n  IPFS: {\n    INITIALISING: 'Démarrage p2p',\n    FINDING_PEERS: 'Recherche de pairs',\n    FAILED: 'Echoué',\n    READY: 'Prêt',\n    PUBLISHING: 'Publication en cours',\n  },\n  EVENTS: {\n    TRANSFER: 'Transférer',\n    REGISTRATION: 'Inscription',\n    RENEWAL: 'Renouvellement',\n    SALE: 'Vente',\n    MINT: 'Médicaments',\n    BURN: 'Brûlure',\n  },\n  GENERIC: {\n    NETWORK_CHANGED_INCOMPATIBLE:\n      \"Le réseau n'est pas pris en charge. Veuillez modifier votre réseau.\",\n    IPNS_PUBLISHING_COMPLETED: 'Publication terminée !',\n    PENDING_TRANSACTION_CERATED:\n      'Une nouvelle transaction a été créée. Veuillez vérifier votre portefeuille.',\n  },\n  LABELS: {\n    PLEASE_WAIT: \"S'il vous plaît, attendez\",\n    SEARCH_FOR: 'Rechercher',\n    MANAGE: 'Faire en sorte',\n    COLLECT: 'Recueillir',\n    LANDING_TEXT:\n      'Recherche, enregistrement et marché de domaines ENS open source et décentralisés.',\n    PROFILE: 'Profil',\n    SEARCH: 'Chercher',\n    CONTAIN_ALPHABET: \"Contient l'alphabet\",\n    CONTAIN_NUMBERS: 'Contient des nombres',\n    CONTAIN_EMOJI: 'Contient des émoticônes',\n    MIN_LENGTH: 'Longueur min.',\n    MAX_LENGTH: 'Longueur Max.',\n    CONTAINING_KEYWORDS: 'Contenant des mots-clés',\n    FILTERS: 'Filtres',\n    DOMAINS: 'Domaines',\n    DOMAIN_HISTORY: 'Historique du domaine',\n    EXPIRATION_DATE: \"Date d'expiration\",\n    REGISTRATION_DATE: 'Inscription',\n    CREATION_DATE: 'Date de Création',\n    DETAILS: 'Détail',\n    YOUR_DOMAINS: 'Vos domaines',\n    PROCESSING: 'En cours de traitement',\n    LAYOUT: 'Disposition',\n    ENTER_SUFFIX: 'Saisir le suffixe',\n    ENTER_PREFIX: 'Entrez le préfixe',\n    CLICK: 'Click',\n    CONNECT_TO_START: ' pour commencer ou ',\n    TIP: 'Tip',\n    ADVANCED_SEARCH_TIP:\n      'utilisez une nouvelle ligne ou une nouvelle virgule pour séparer vos entrées de domaine.',\n    ADVANCED_SEARCH: 'Recherche Avancée',\n    ADVANCED_MODE: 'Mode Avancé',\n    REGISTER_DOMAINS_TO: 'Enregistrer les domaines à',\n    NO_DOMAINS_SELECTED: 'Aucun domaine sélectionné.',\n    FIND_AND_REGISTER: 'Trouver des domaines par exemple domaine1, domaine2...',\n    SELECTED_DOMAINS: 'Domaines sélectionnés',\n    REGISTER: 'Inscription',\n    BOOKMARKS: 'Signets',\n    SEARCH_RESULTS: 'Résultats de recherche',\n    PROCEED_TO_REGISTRATION: \"Procéder à l'inscription\",\n    REGISTER_DOMAINS: 'Enregistrer les domaines à',\n    REGISTRANT_ADDRESS: \"Adresse de l'inscrit\",\n    SET_RESOLVER: 'Définir le résolveur',\n    TOTAL_COST: 'Coût total',\n    GAS_PRICE: 'Prix du gaz',\n    NO_ADDRESS_DETECTED: 'Aucune adresse détectée.',\n    DURATION: 'Durée',\n    NOTICE_SELECT_AN_RPC:\n      \"Remarque : sélectionnez un RPC qui sera utilisé dans l'application pour remplacer le fournisseur RPC par défaut.\",\n    ENABLE_LIGHT_MODE: 'Activer le style de mise en page clair.',\n  },\n  REGISTRATION: {\n    BEFORE_COMMIT: \"Étape 1 : demande d'inscription.\",\n    COMMIT_SENT: 'Traitement de la requête...',\n    COMMIT_COMPLETE: \"Étape 1 : demande d'inscription...\",\n    AWAIT: 'Traitement de la requête...',\n    BEFORE_REGISTRATION: \"Demande d'inscription.\",\n    REGISTRATION_SENT: \"Fin de l'inscription...\",\n    REGISTRATION_COMPLETE: 'Inscription!',\n    REGISTRATION_COMPLETE_TITLE: 'Inscription',\n    YOUR_DOMAINS_HAVE_NOW_BEEN_REGISTERED: 'Vos domaines ont été enregistrés.',\n    BASKET_EMPTY: 'Votre panier est vide',\n    PLEASE_SELECT_DOMAINS_TO_REGISTER:\n      'Veuillez sélectionner de nouveaux domaines à enregistrer.',\n  },\n  PAYMENT: {\n    PAYMENT_CANCELLED: 'Transaction annulée. Veuillez réessayer.',\n  },\n  SPINNER: {\n    NO_DATA_TO_DISPLAY: 'Aucun élément à afficher.',\n    PERFORMING_SEARCH: 'Recherche en cours...',\n    LOADING_DATA: 'Chargement des données...',\n    FOLLOW_THE_INSTRUCTIONS_ON_YOUR_WALLET:\n      'Veuillez suivre les instructions de votre portefeuille pour continuer.',\n  },\n  FORM_LABELS: {\n    ENTER_DURATION: 'Entrez la durée',\n    ENTER_QR_LINK: \"Entrez l'URL du QR Code personnalisé\",\n    ENTER_PRICE: 'Entrez le prix',\n    ENTER_CUSTOM_ADDRESS: 'Entrez une adresse personnalisée',\n  },\n  FORM_ERRORS: {\n    INVALID_DURATION: 'Durée non valide',\n    INVALID_QR_LINK: 'URL invalide, veuillez réessayer.',\n    INVALID_PRICE: 'URL invalide, veuillez réessayer.',\n    NO_ADDRESS_DETECTED: 'Aucune adresse détectée, veuillez réessayer.',\n  },\n};\n","import * as EN from './translations/en.conf';\nimport * as DE from './translations/de.conf';\nimport * as CN from './translations/cn.conf';\nimport * as JP from './translations/jp.conf';\nimport * as ES from './translations/es.conf';\nimport * as RU from './translations/ru.conf';\nimport * as FR from './translations/fr.conf';\n\nexport const validTranslations = {\n  en: EN,\n  de: DE,\n  es: ES,\n  fr: FR,\n  ru: RU,\n  jp: JP,\n  cn: CN,\n};\n","import { HammerGestureConfig } from '@angular/platform-browser';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class HammerJsConf extends HammerGestureConfig {\n\toverrides = {\n\t\tswipe: { velocity: 0.3, threshold: 10 },\n\t} as any;\n}\n","import { PagesEnum } from '../models/states/pages-interfaces';\n\nexport const generalConfigurations = {\n  version: '0.1.0',\n  defaultLanguage: 'en',\n  defaultPage: PagesEnum.HOME,\n  maximumDecimalInPrices: 8,\n  maxAttemptsToCheckoutData: 3,\n  sessionTimeout: 6000 * 15,\n  maxRPCCallRetries: 3,\n  timeUntilImageLoadErrors: 3000,\n  timeToUpdateEthUSDRate: 60000,\n  timeToUpdateCheckoutPipe: 3000,\n  timeToUpdateRegistrationGasPrice: 5000,\n  timeUntilCheckoutExpires: 3000,\n  maxConfirmationsUntilTxFinal: 1,\n  declarePaymentStatusUnkownUntilXFailedDataFetches: 5,\n  gasLimitBuffer: 50000,\n  maxCheckoutRetryUntilRehydrateProcessId: 5,\n  maxIpfsSubscriptionRetries: 5,\n  maxDomainsToRegister: 50,\n  maxYearsRegistration: 1000,\n  maxTotalCostBuffer: 105,\n  defaultCurrency: 'ETH',\n  enableCustomRPC: true,\n  docsLink: 'https://docs.predomain.xyz/',\n  blockscanLink: 'https://chat.blockscan.com/index?a=',\n  nftyChatLink: 'https://nftychat.xyz/dm/',\n  trezorManifest: {\n    email: 'predomain@skiff.com',\n    appUrl: 'https://predomain.eth.limo',\n  },\n  appMeta: {\n    description: 'Decentralised ENS Search, Registration, & Marketplace',\n    url: 'https://predomain.eth.limo',\n    icons: ['https://ecanvas.eth.limo/assets/logo.png'],\n    name: 'Predomain.eth',\n  },\n  enabledTools: {\n    category: false,\n    management: true,\n    canvas: true,\n    registration: true,\n    profile: true,\n    domain: true,\n  },\n  wallectConnectSupportedWallets: [\n    'rainbow',\n    'metamask',\n    'argent',\n    'trust',\n    'trezor',\n    'imtoken',\n    'pillar',\n    'coinbase',\n  ],\n  categoriesDomain: 'categories.predomain.eth',\n};\n","export const icons = {\n  check: 'assets/icons/check.apng',\n  confetti: 'assets/icons/confetti.apng',\n  cart_empty: 'assets/icons/cart_empty.apng',\n  llayers: 'assets/icons/llayers.apng',\n  spin: 'assets/icons/spin.apng',\n};\n\nexport const infiniteLoopedIcons = ['spin', 'confetti'];\n","export const imageToPreload = [\n  'icn-ledger.svg',\n  'icn-metamask.svg',\n  'trezor-logo.png',\n  'metamask-connect-in-progress.png',\n  'metamask-sign-in-progress.png',\n  'trezor-connect-in-progress.png',\n  'trezor-sign-in-progress.png',\n  'ledger-connect-in-progress.png',\n  'ledger-sign-in-progress.png',\n];\n","import { PagesEnum } from '../models/states/pages-interfaces';\n\n/**\n * Define pages that are not accessible without a wallet connected.\n */\nexport const privatePages = [\n  PagesEnum.CANVAS,\n  PagesEnum.CHECKOUT,\n  PagesEnum.MANAGE,\n];\n","export enum EnsEventsEnum {\n  TRANSFER = 'EVENTS.TRANSFER',\n  REGISTRATION = 'EVENTS.REGISTRATION',\n  RENEWAL = 'EVENTS.RENEWAL',\n  SALE = 'EVENTS.SALE',\n  MINT = 'EVENTS.MINT',\n  BURN = 'EVENTS.BURN',\n}\n\nexport enum EnsEvensSymbolEnum {\n  'EVENTS.TRANSFER' = 'sync_alt',\n  'EVENTS.REGISTRATION' = 'sync_alt',\n  'EVENTS.RENEWAL' = 'update',\n  'EVENTS.SALE' = 'shopping_cart',\n  'EVENTS.MINT' = 'magic_button',\n  'EVENTS.BURN' = 'local_fire_department',\n}\n","export enum UserStoreErrorsEnum {\n  UNKNOWN = \"UNKNOWN_USER\",\n  CONNECT_ERROR = \"CONNECT_ERROR\",\n  EMAIL_INVALID = \"EMAIL_INVALID\",\n  COMPANY_NAME_INVALID = \"COMPANY_NAME_INVALID\",\n  COMPANY_ADDRESS_INVALID = \"COMPANY_ADDRESS_INVALID\",\n  SELECTED_CURRENCIES_INVALID = \"SELECTED_CURRENCIES_INVALID\",\n  WALLET_ADDRESS_INVALID = \"WALLET_ADDRESS_INVALID\",\n  ACCOUNT_EXISTS = \"ACCOUNT_EXISTS\",\n  USER_NO_NETWORK_CONNECTION = \"USER_NO_NETWORK_CONNECTION\",\n  CANNOT_FIND_WALLET_ADDRESS_TO_RECOVER = \"CANNOT_FIND_WALLET_ADDRESS_TO_RECOVER\",\n  DEVICE_VERIFICATION_FAILED = \"DEVICE_VERIFICATION_FAILED\",\n  REGISTRATION_EXPIRED = \"REGISTRATION_EXPIRED\",\n  REGISTER_CAPTCHA_INVALID = \"REGISTER_CAPTCHA_INVALID\",\n  EMAIL_VERIFICATION_FAILED = \"EMAIL_VERIFICATION_FAILED\",\n}\n","import { HttpClient } from '@angular/common/http';\nimport { FormatTimePipe, TimeAgoPipe } from '../modules/pipes';\nimport {\n  FormValidationService,\n  MiscUtilsService,\n  PaymentStorageService,\n  TranslationService,\n  UserService,\n  UserSessionService,\n} from '../services';\nimport { BookmarksServiceService } from '../services/bookmarks';\nimport { EnsService } from '../services/ens';\nimport { WalletConnectService } from '../services/wallet-connect';\nimport {\n  RegistrationDataService,\n  RegistrationServiceService,\n} from '../services/registration';\nimport {\n  NavigatorButtonsFacadeService,\n  NavigatorFacadeService,\n  PagesFacadeService,\n  UserFacadeService,\n} from '../store/facades';\nimport { DownloadService } from '../services/download/download.service';\nimport { ContractService } from '../services/contract';\nimport { EnsMarketplaceService } from '../services/ens-marketplace';\n\nexport const serviceProviders = [\n  UserService,\n  UserSessionService,\n  UserFacadeService,\n  PagesFacadeService,\n  NavigatorFacadeService,\n  NavigatorButtonsFacadeService,\n  FormValidationService,\n  MiscUtilsService,\n  TranslationService,\n  FormatTimePipe,\n  TimeAgoPipe,\n  HttpClient,\n  EnsService,\n  RegistrationDataService,\n  BookmarksServiceService,\n  RegistrationServiceService,\n  PaymentStorageService,\n  WalletConnectService,\n  DownloadService,\n  ContractService,\n  EnsMarketplaceService,\n];\n","export const payNoMarketAddress = '0x0000000000000000000000000000000000000000';\n","export const routerPaths = {\n  canvas: 'canvas',\n  bootstrap: 'bootstrap',\n  home: 'home',\n  checkout: 'checkout',\n  notfound: 'notfound',\n  profile: 'profile',\n  domain: 'domain',\n  manage: 'manage',\n};\n","export enum ValidRPCProvidersEnum {\n  DEFAULT,\n  CUSTOM,\n  INFURA,\n  ALCHEMY,\n}\n","export enum PagesEnum {\n  BOOTSTRAP = 'BOOTSTRAP',\n  HOME = 'HOME',\n  CANVAS = 'CANVAS',\n  CHECKOUT = 'CHECKOUT',\n  ERROR = 'ERROR',\n  SUCCESS = 'SUCCESS',\n  PROFILE = 'PROFILE',\n  DOMAIN = 'DOMAIN',\n  NOTFOUND = 'NOTFOUND',\n  MANAGE = 'manage',\n}\n","export enum PaymentErrorCodes {\n  NONE,\n  PAYMENT_EXPIRED,\n  TOKEN_NOT_SUPPORTED,\n  INSUFFICIENT_FUNDS,\n  SIGNATURE_INVALID,\n  PAYMENT_FAILURE,\n  AMOUNT_ZERO,\n  MARKET_NOT_SUPPORTED,\n}\n","/**\n * LEAVE THE VALUES, IT MUST BE SET EXPLICITLY.\n */\nexport enum PaymentTypesEnum {\n  PAY = 0,\n  REGISTER = 1,\n  COMMIT = 2,\n  TX_APPROVAL = 3,\n  TX_TRANSFER = 4,\n  TX_RENEW = 5,\n}\n","export enum NonceTypesEnum {\n  SERIAL,\n  TOKEN\n}\n","export enum WalletTypesEnum {\n  METAMASK,\n  LEDGER,\n  TREZOR,\n  WALLET_CONNECT,\n}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconComponent } from 'src/app/widgets/icon';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [IconComponent],\n  exports: [\n    IconComponent,\n    MatDialogModule,\n    MatButtonModule,\n    TranslationModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class IconModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationModule } from \"./translation.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { serviceProviders } from \"../../models\";\nimport { CustomAddressComponent } from \"../../widgets/custom-address/custom-address.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { CommonModule } from \"@angular/common\";\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [CustomAddressComponent],\n  exports: [\n    CustomAddressComponent,\n    TranslationModule,\n    FlexLayoutModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  bootstrap: [],\n  entryComponents: [CustomAddressComponent],\n  schemas: [],\n})\nexport class CustomAddressDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog/generic-dialog.component';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [GenericDialogComponent],\n  exports: [\n    CommonModule,\n    GenericDialogComponent,\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [GenericDialogComponent],\n  schemas: [],\n})\nexport class GenericDialogModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationModule } from \"./translation.module\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { serviceProviders } from \"../../models\";\nimport { OnboardDialogComponent } from \"../../widgets/onboard-dialog\";\nimport { SharedModule } from \"../shared.module\";\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [OnboardDialogComponent],\n  exports: [OnboardDialogComponent, TranslationModule, FlexLayoutModule],\n  bootstrap: [],\n  entryComponents: [OnboardDialogComponent],\n  schemas: [],\n})\nexport class OnboardDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SpinnerCustomComponent } from 'src/app/widgets/spinner-custom';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from './icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [SpinnerCustomComponent],\n  exports: [\n    SpinnerCustomComponent,\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class SpinnerCustomModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { BulkSearchComponent } from 'src/app/widgets/bulk-search';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { SpinnerCustomModule } from './spinner-custom.module';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatProgressBarModule,\n    SpinnerCustomModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [BulkSearchComponent],\n  exports: [\n    BulkSearchComponent,\n    CommonModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    MatProgressBarModule,\n    SpinnerCustomModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class BulkSearchModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { BlockyComponent } from 'src/app/widgets/blocky';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslationModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [BlockyComponent],\n  exports: [\n    CommonModule,\n    BlockyComponent,\n    MatIconModule,\n    TranslationModule,\n    FlexLayoutModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class BlockyModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { serviceProviders } from '../../models';\nimport { CommonModule } from '@angular/common';\nimport { SettingsComponent } from 'src/app/widgets/settings';\nimport { SharedModule } from '../shared.module';\n\n@NgModule({\n  imports: [CommonModule, TranslationModule, SharedModule],\n  providers: [...serviceProviders],\n  declarations: [SettingsComponent],\n  exports: [CommonModule, SettingsComponent, SharedModule],\n  bootstrap: [],\n  entryComponents: [SettingsComponent],\n  schemas: [],\n})\nexport class SettingsDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { IconModule } from './icon.module';\nimport { CommonModule } from '@angular/common';\nimport { MainHeaderComponent } from 'src/app/widgets/main-header';\nimport { BulkSearchModule } from './bulk-search.module';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BlockyModule } from './blocky.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SpinnerCustomModule } from './spinner-custom.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { SettingsDialogModule } from './settings-dialog.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatMenuModule,\n    MatAutocompleteModule,\n    MatInputModule,\n    FlexLayoutModule,\n    SpinnerCustomModule,\n    BulkSearchModule,\n    SettingsDialogModule,\n    BlockyModule,\n    IconModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [MainHeaderComponent],\n  exports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MainHeaderComponent,\n    MatDialogModule,\n    MatButtonModule,\n    MatBadgeModule,\n    MatAutocompleteModule,\n    MatMenuModule,\n    MatInputModule,\n    TranslationModule,\n    FlexLayoutModule,\n    SpinnerCustomModule,\n    BulkSearchModule,\n    SettingsDialogModule,\n    BlockyModule,\n    IconModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class MainHeaderModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationPipe } from '../../services';\nimport { EtherDecimalFixedPipe } from '../pipes';\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [EtherDecimalFixedPipe],\n  exports: [EtherDecimalFixedPipe],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class EtherDecimalFixedModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SharedModule } from '../shared.module';\nimport { IconModule } from './icon.module';\nimport { RenewManagementComponent } from 'src/app/widgets/renew-management/renew-management.component';\nimport { EtherDecimalFixedModule } from './ether-decimal-fixed.module';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [RenewManagementComponent],\n  exports: [\n    RenewManagementComponent,\n    TranslationModule,\n    IconModule,\n    EtherDecimalFixedModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [RenewManagementComponent],\n  schemas: [],\n})\nexport class RenewManagementDialogModule {}\n","import { NgModule } from '@angular/core';\nimport { TranslationModule } from './translation.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { serviceProviders } from '../../models';\nimport { SharedModule } from '../shared.module';\nimport { OnboardManagementComponent } from 'src/app/widgets/onboard-management';\nimport { IconModule } from './icon.module';\n\n@NgModule({\n  imports: [\n    TranslationModule,\n    MatDialogModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    IconModule,\n    SharedModule,\n  ],\n  providers: [...serviceProviders],\n  declarations: [OnboardManagementComponent],\n  exports: [\n    OnboardManagementComponent,\n    TranslationModule,\n    IconModule,\n    FlexLayoutModule,\n  ],\n  bootstrap: [],\n  entryComponents: [OnboardManagementComponent],\n  schemas: [],\n})\nexport class OnboardManagementDialogModule {}\n","import { NgModule } from \"@angular/core\";\nimport { TranslationPipe } from \"../../services\";\n\n@NgModule({\n  imports: [],\n  providers: [],\n  declarations: [TranslationPipe],\n  exports: [TranslationPipe],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [],\n})\nexport class TranslationModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nTimeAgo.addDefaultLocale(en);\n\n@Pipe({\n  name: 'fixedEther',\n})\nexport class EtherDecimalFixedPipe implements PipeTransform {\n  transform(value: number): any {\n    return value.toFixed(6);\n  }\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatTime',\n})\nexport class FormatTimePipe extends DatePipe implements PipeTransform {\n  transform(value: string): any {\n    if (value) {\n      const inputDate = new Date(parseInt(value));\n      return super.transform(inputDate, 'MMM d y HH:MM');\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\nimport { FormatTimePipe } from './format-time.pipe';\nTimeAgo.addDefaultLocale(en);\n\n@Pipe({\n  name: 'timeAgo',\n})\nexport class TimeAgoPipe implements PipeTransform {\n  constructor(protected formatTimePipe: FormatTimePipe) {}\n\n  transform(value: string): any {\n    const timeAgo = new TimeAgo('en-US');\n    if (value) {\n      const time = timeAgo.format(new Date(parseInt(value)));\n      if (time.toLowerCase().indexOf('year') > -1) {\n        return this.formatTimePipe.transform(value);\n      }\n      return time;\n    }\n  }\n}\n","import {\n  NgModule,\n  CUSTOM_ELEMENTS_SCHEMA,\n  NO_ERRORS_SCHEMA,\n} from '@angular/core';\nimport {\n  MAT_BOTTOM_SHEET_DATA,\n  MatBottomSheetModule,\n} from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n  MatDialogModule,\n} from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {\n  MatProgressBarModule,\n  MAT_PROGRESS_BAR_DEFAULT_OPTIONS,\n} from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { TranslationModule } from './miscs/translation.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport {\n  GenericDialogModule,\n  CustomAddressDialogModule,\n  IconModule,\n} from './miscs';\nimport { serviceProviders } from '../models';\nimport { HammerJsConf } from '../configurations';\nimport { GetScrollableXyDirective } from './directives';\nimport { FormatTimePipe, TimeAgoPipe } from './pipes';\nimport { HeaderComponent } from '../widgets/header';\nimport { NavigatorComponent } from '../widgets/navigator';\nimport { NavigatorButtonComponent } from '../widgets/navigator-button';\nimport { PinInputComponent } from '../widgets/pin-input';\nimport { SpinnerComponent } from '../widgets/spinner';\nimport { PreviewImageComponent } from '../widgets/preview-image';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { NgxColorsModule } from 'ngx-colors';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    RouterModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IconModule,\n    MatBottomSheetModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatChipsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatStepperModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatRippleModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatListModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSnackBarModule,\n    MatProgressBarModule,\n    MatBadgeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    TranslationModule,\n    DragDropModule,\n    OverlayModule,\n    GenericDialogModule,\n    CustomAddressDialogModule,\n    QRCodeModule,\n    NgxColorsModule,\n  ],\n  providers: [\n    ...serviceProviders,\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerJsConf,\n    },\n    { provide: MAT_PROGRESS_BAR_DEFAULT_OPTIONS, useValue: {} },\n    { provide: MAT_BOTTOM_SHEET_DATA, useValue: {} },\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MatDialogRef, useValue: {} },\n  ],\n  declarations: [\n    HeaderComponent,\n    NavigatorComponent,\n    NavigatorButtonComponent,\n    PinInputComponent,\n    SpinnerComponent,\n    GetScrollableXyDirective,\n    FormatTimePipe,\n    TimeAgoPipe,\n    PreviewImageComponent,\n  ],\n  exports: [\n    HttpClientModule,\n    TranslationModule,\n    CommonModule,\n    RouterModule,\n    HeaderComponent,\n    NavigatorComponent,\n    NavigatorButtonComponent,\n    MatAutocompleteModule,\n    PinInputComponent,\n    SpinnerComponent,\n    PreviewImageComponent,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    FormsModule,\n    IconModule,\n    MatBottomSheetModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatTabsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSlideToggleModule,\n    MatRippleModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatStepperModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatTableModule,\n    MatSnackBarModule,\n    MatBadgeModule,\n    MatPaginatorModule,\n    MatSortModule,\n    DragDropModule,\n    OverlayModule,\n    GetScrollableXyDirective,\n    FormatTimePipe,\n    TimeAgoPipe,\n    GenericDialogModule,\n    CustomAddressDialogModule,\n    QRCodeModule,\n    NgxColorsModule,\n  ],\n  bootstrap: [],\n  entryComponents: [],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BookmarksServiceService {\n  constructor(protected snackBar: MatSnackBar) {}\n\n  countBookmarks() {\n    return this.loadBookmarksAndFeed().length;\n  }\n\n  loadBookmarks() {\n    return localStorage.getItem('canvas-bookmarks');\n  }\n\n  loadBookmarksAndFeed() {\n    const sBookmarks = this.loadBookmarks();\n    if (sBookmarks !== null && sBookmarks !== '' && sBookmarks !== '[]') {\n      return JSON.parse(sBookmarks);\n    }\n    return [];\n  }\n\n  saveAllBookmark(domainsData: ENSDomainMetadataModel[]) {\n    const bookmarksRaw = this.loadBookmarksAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(bookmarksRaw);\n    let bookmarks = [...new Set(bKeys)].map((k) => bookmarksRaw[k]);\n    bookmarks = bookmarks.concat(domainsData);\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  saveBookmark(domainData: ENSDomainMetadataModel) {\n    const bookmarksRaw = this.loadBookmarksAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(bookmarksRaw);\n    const bookmarks = [...new Set(bKeys)].map((k) => bookmarksRaw[k]);\n    bookmarks.push(domainData);\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  removeAllBookmarks() {\n    localStorage.setItem('canvas-bookmarks', JSON.stringify([]));\n    return [];\n  }\n  removeBookmark(bookmarks: ENSDomainMetadataModel[], domainName: string) {\n    const bookmarksUpdated = [];\n    bookmarks.filter((d) => {\n      if (d.labelName !== domainName) {\n        bookmarksUpdated.push(d);\n      }\n    });\n    localStorage.setItem('canvas-bookmarks', JSON.stringify(bookmarks));\n    return bookmarks;\n  }\n\n  clearBookmarks() {\n    localStorage.setItem('canvas-bookmarks', JSON.stringify([]));\n  }\n\n  isDomainBookmarked(bookmarks: ENSDomainMetadataModel[], domainName: string) {\n    for (const d of bookmarks) {\n      if (d.labelName === domainName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Contract } from 'ethers';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContractService {\n  constructor() {}\n\n  getGasLimitEstimation(\n    provider = null,\n    method: string,\n    params: any,\n    payer: string,\n    contractAddress: string = null,\n    contractABI: any = null,\n    providerFunction = false,\n    value: string = '0x0'\n  ) {\n    let c;\n    if (\n      providerFunction === false &&\n      (contractAddress === null || contractABI === null)\n    ) {\n      return of(false);\n    }\n    if (providerFunction === false) {\n      c = new Contract(contractAddress, contractABI, provider);\n    }\n    return new Observable((observer) => {\n      if (providerFunction === false) {\n        c.estimateGas[method](...params, {\n          value,\n          from: payer,\n        })\n          .then((r) => {\n            if (r === null) {\n              observer.next(false);\n              observer.complete();\n            }\n            observer.next(r);\n            observer.complete();\n          })\n          .catch((e) => {\n            observer.next(false);\n            observer.complete();\n          });\n      } else {\n        provider\n          .estimateGas(params)\n          .then((r) => {\n            if (r === null) {\n              observer.next(false);\n              observer.complete();\n            }\n            observer.next(r);\n            observer.complete();\n          })\n          .catch((e) => {\n            observer.next(false);\n            observer.complete();\n          });\n      }\n    });\n  }\n}\n","import * as ethers from 'ethers';\nimport { BigNumber } from 'ethers';\nimport { environment } from '../../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport {\n  acceptedCurrenciesMainnet,\n  acceptedCurrenciesTestnet,\n  ContractAddressesMainnetEnum,\n  ContractAddressesTestnetEnum,\n  SupportedCurrenciesEnum,\n} from '../../configurations/contracts';\nimport { AcceptedCurrencyModel } from '../../models/currencies';\nimport { PaymentTypesEnum } from '../../models/states/payment-interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyService {\n  constructor() {}\n  /**\n   * Environment production: mainnet contracts are used.\n   * Environment development (true): devnet contracts are used.\n   * Environment development (false): testnet (ropsten) contracts are used.\n   * @param currency\n   */\n  deriveCurrencyAddressFromName(currency: string) {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(ContractAddressesMainnetEnum);\n    } else {\n      currencies = Object(ContractAddressesTestnetEnum);\n    }\n    return currencies[currency.toUpperCase()];\n  }\n\n  deriveCurrencyDataFromCurrencyName(currency: string) {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(acceptedCurrenciesMainnet) as AcceptedCurrencyModel[];\n    } else {\n      currencies = Object(acceptedCurrenciesTestnet) as AcceptedCurrencyModel[];\n    }\n    let currencySearched: any = false;\n    for (const c of currencies) {\n      if (c.currency === currency) {\n        currencySearched = c as AcceptedCurrencyModel;\n      }\n    }\n    return currencySearched;\n  }\n\n  convertAmountToDecimal(amountInString: string, currency: string) {\n    const paymentCurrency = this.deriveCurrencyDataFromCurrencyName(currency);\n    if (paymentCurrency === false) {\n      return false;\n    }\n    const currencyData = paymentCurrency as AcceptedCurrencyModel;\n    const bnAmount = BigNumber.from(amountInString);\n    return ethers.utils.formatUnits(bnAmount, currencyData.decimals);\n  }\n\n  convertAmountToToken(amountInString: string, currency: string) {\n    const paymentCurrency = this.deriveCurrencyDataFromCurrencyName(currency);\n    if (paymentCurrency === false) {\n      return false;\n    }\n    const currencyData = paymentCurrency as AcceptedCurrencyModel;\n    return ethers.utils.parseUnits(amountInString, currencyData.decimals);\n  }\n\n  getSupportedCurrencies() {\n    let currencies;\n    if (environment.production === true) {\n      currencies = Object(acceptedCurrenciesMainnet) as AcceptedCurrencyModel[];\n    } else {\n      currencies = Object(acceptedCurrenciesTestnet) as AcceptedCurrencyModel[];\n    }\n    return currencies as AcceptedCurrencyModel[];\n  }\n\n  determineDefaultCurrencyForPayment(\n    searchType: PaymentTypesEnum,\n    chooseSecondDefault = false\n  ) {\n    let secondDefaultToBeChosen = false;\n    for (const c of Object.keys(SupportedCurrenciesEnum)) {\n      const currencyData = this.deriveCurrencyDataFromCurrencyName(\n        c\n      ) as AcceptedCurrencyModel;\n      if (searchType === PaymentTypesEnum.PAY) {\n        if (chooseSecondDefault === true && secondDefaultToBeChosen === false) {\n          secondDefaultToBeChosen = true;\n        } else {\n          return c;\n        }\n      }\n    }\n  }\n}\n","export const chainlinkV3ABI = [\n  {\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        internalType: 'uint8',\n        name: '',\n        type: 'uint8',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'description',\n    outputs: [\n      {\n        internalType: 'string',\n        name: '',\n        type: 'string',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint80',\n        name: '_roundId',\n        type: 'uint80',\n      },\n    ],\n    name: 'getRoundData',\n    outputs: [\n      {\n        internalType: 'uint80',\n        name: 'roundId',\n        type: 'uint80',\n      },\n      {\n        internalType: 'int256',\n        name: 'answer',\n        type: 'int256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'startedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'updatedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint80',\n        name: 'answeredInRound',\n        type: 'uint80',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'latestRoundData',\n    outputs: [\n      {\n        internalType: 'uint80',\n        name: 'roundId',\n        type: 'uint80',\n      },\n      {\n        internalType: 'int256',\n        name: 'answer',\n        type: 'int256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'startedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint256',\n        name: 'updatedAt',\n        type: 'uint256',\n      },\n      {\n        internalType: 'uint80',\n        name: 'answeredInRound',\n        type: 'uint80',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [],\n    name: 'version',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract } from 'ethers';\nimport { from, timer } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport {\n  contractChainlinkMainnet,\n  contractChainlinkTestnet,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { chainlinkV3ABI } from 'src/app/configurations/contracts/chainlink-aggregator-v3.abi';\nimport { PaymentFacadeService } from 'src/app/store/facades';\nimport { environment } from 'src/environments/environment';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyExchangeService {\n  constructor(protected paymentFacade: PaymentFacadeService) {}\n\n  getPrices() {\n    let processorLocked = false;\n    return timer(0, generalConfigurations.timeToUpdateEthUSDRate).pipe(\n      filter((i) => {\n        if (processorLocked === true) {\n          return false;\n        }\n        return true;\n      }),\n      switchMap((i) => {\n        processorLocked = true;\n        return from(this.chainlink.latestRoundData()).pipe(\n          map((normalizedPrices) => {\n            if (normalizedPrices === false || normalizedPrices === null) {\n              return false;\n            }\n            this.paymentFacade.setEthUsdRate(\n              ((normalizedPrices as any).answer.toNumber() / 10 ** 8).toString()\n            );\n            processorLocked = false;\n          })\n        );\n      })\n    );\n  }\n\n  get chainlinkAddress() {\n    if (environment.test === true) {\n      return contractChainlinkTestnet;\n    }\n    return contractChainlinkMainnet;\n  }\n\n  get chainlink() {\n    const contract = new Contract(\n      this.chainlinkAddress,\n      chainlinkV3ABI,\n      globalAny.canvasProvider\n    );\n    return contract;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MiscUtilsService } from '../misc-utils';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DownloadService {\n  constructor(protected mistUtils: MiscUtilsService) {}\n\n  download(meta: string, dataRaw: any, fileName = null) {\n    const data = new TextEncoder().encode(dataRaw);\n    const blob = new Blob(['\\uFEFF', data], {\n      type: meta,\n    });\n    let fileURL;\n    if (fileName === null) {\n      fileURL = URL.createObjectURL(blob);\n    } else {\n      fileURL = meta;\n    }\n    window.open(fileURL, '_target');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BigNumber, Contract } from 'ethers';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport {\n  ENSContracts,\n  ENSTokenNFTABI,\n  generalConfigurations,\n  marketplaceMainnet,\n  marketplaceTestnet,\n} from 'src/app/configurations';\nimport { ENSMarketplaceMainnetABI } from 'src/app/configurations/contracts/ens-marketplace-abi-mainnet.model';\nimport { ENSMarketplaceTestnetABI } from 'src/app/configurations/contracts/ens-marketplace-abi-testnet.model';\nimport { environment } from 'src/environments/environment';\nimport { ContractService } from '../contract';\nimport { EnsService } from '../ens/ens.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnsMarketplaceService {\n  constructor(\n    protected contractService: ContractService,\n    protected ensService: EnsService\n  ) {}\n\n  checkApproval(tokenId: string, provider) {\n    const contract = this.getENSTokenContract(provider);\n    return from(contract.ownerOf(tokenId)).pipe(\n      switchMap((r) => {\n        if (r === null) {\n          throw null;\n        }\n        return contract.isApprovedForAll(r, this.marketplaceContractAddress);\n      }),\n      switchMap((r) => {\n        if (r === null) {\n          throw null;\n        }\n        return of(r);\n      }),\n      catchError((e) => of(null))\n    );\n  }\n\n  transfer(domainNames: string[], to: string, payer: string, provider: any) {\n    const contract = this.getENSMarketplaceContract(provider);\n    const dataMethod = 'transferDomains';\n    const dataParams = [to, domainNames];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.marketplaceContractAddress,\n          this.marketplaceContractABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  approve(\n    operator: string,\n    payer: string,\n    approvalStatus: boolean,\n    provider: any\n  ) {\n    const contract = this.getENSTokenContract(provider);\n    const dataMethod = 'setApprovalForAll';\n    const dataParams = [operator, approvalStatus];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          ENSContracts.token,\n          ENSTokenNFTABI,\n          false\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  renew(\n    domainNames: string[],\n    duration: BigNumber,\n    payer: string,\n    totalCost: string,\n    provider: any\n  ) {\n    const contract = this.getENSMarketplaceContract(provider);\n    const namesLengths = [];\n    for (const c of domainNames) {\n      namesLengths.push(this.ensService.getNameLength(c));\n    }\n    const dataMethod = 'renewDomains';\n    const dataParams = [domainNames, namesLengths, duration];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.marketplaceContractAddress,\n          this.marketplaceContractABI,\n          false,\n          totalCost\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getENSTokenContract(provider) {\n    const contract = new Contract(ENSContracts.token, ENSTokenNFTABI, provider);\n    return contract;\n  }\n\n  getENSMarketplaceContract(provider) {\n    const contract = new Contract(\n      this.marketplaceContractAddress,\n      this.marketplaceContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  get marketplaceContractAddress() {\n    if (environment.test === true) {\n      return marketplaceTestnet;\n    }\n    return marketplaceMainnet;\n  }\n\n  get marketplaceContractABI() {\n    if (environment.test === true) {\n      return ENSMarketplaceTestnetABI;\n    }\n    return ENSMarketplaceMainnetABI;\n  }\n}\n","import { Injectable, Provider } from '@angular/core';\nimport request, { gql } from 'graphql-request';\nimport { Observable } from 'rxjs';\nimport {\n  ens_normalize,\n  ens_beautify,\n  ens_tokenize,\n} from '@adraffy/ens-normalize';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EnsService {\n  constructor(private http: HttpClient) {}\n\n  getDomainMetadata(domainHash: string) {\n    const url = environment.networks[environment.defaultChain].ensMetadataAPI;\n    return this.http.get(url + domainHash);\n  }\n\n  getDomainContentHash(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getContentHash();\n        })\n        .then((r) => {\n          let web2Link = 'https://';\n          if (r.indexOf('ipfs:') > -1) {\n            web2Link += 'ipfs.io/ipfs/' + r.replace('ipfs://', '');\n          } else if (r.indexOf('ipns:') > -1) {\n            web2Link += 'gateway.ipfs.io/ipns/' + r.replace('ipns://', '');\n          }\n          observer.next(web2Link);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  findDomains(domains: string[]) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query ($domainNames: [String!]) {\n          registrations(first: 1000, where: { labelName_in: $domainNames }) {\n            id\n            labelName\n            expiryDate\n            registrationDate\n            domain {\n              id\n              createdAt\n            }\n          }\n        }\n      `;\n      request(url, query, { domainNames: domains }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getDomain(domain: string) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        query ($domainName: String!) {\n          registrations(first: 1, where: { labelName: $domainName }) {\n            id\n            labelName\n            expiryDate\n            registrationDate\n            registrant {\n              id\n            }\n            domain {\n              id\n              createdAt\n              labelhash\n            }\n            events {\n              blockNumber\n              transactionID\n            }\n          }\n        }\n      `;\n      request(url, query, { domainName: domain }).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  downloadDomainsListNamesOnly(domains: ENSDomainMetadataModel[]) {\n    let finalForm = '';\n    finalForm += domains\n      .map((d) => {\n        return d.labelName;\n      })\n      .join('\\n');\n    return finalForm;\n  }\n\n  downloadDomainsListCSV(domains: ENSDomainMetadataModel[]) {\n    let finalForm = '';\n    finalForm +=\n      Object.keys(domains[0])\n        .filter((k) => {\n          if (k === 'events') {\n            return false;\n          }\n          return true;\n        })\n        .join(',') + '\\n';\n    finalForm += domains\n      .map((d) => {\n        const k = Object.keys(d);\n        return k\n          .map((kk) => {\n            return d[kk];\n          })\n          .join(',');\n      })\n      .join('\\n');\n    return finalForm;\n  }\n\n  calculateExpiry(expiryDate: string) {\n    const eDate = parseInt(expiryDate, 10) * 1000;\n    const now = new Date().getTime();\n    const remainingDate = now - eDate;\n    return remainingDate;\n  }\n\n  calculateGracePeriodPercentage(expiryDate: number) {\n    const now = new Date().getTime();\n    const gracePeriod = 7889400000;\n    const timeUtilGraceEnds = expiryDate * 1000 + gracePeriod;\n    const gracePeriodExact = timeUtilGraceEnds - now;\n    const gInPercent = gracePeriod / 100;\n    return gracePeriodExact / gInPercent;\n  }\n\n  isDomainNameNotValid(\n    name: string,\n    prefixedOrSuffixed = false,\n    prefixedAndSuffixed = false\n  ) {\n    let minLength = 3;\n    if (prefixedOrSuffixed === true) {\n      minLength = 2;\n    }\n    if (prefixedAndSuffixed === true) {\n      minLength = 1;\n    }\n    if (name === '' || name.length < minLength) {\n      return false;\n    }\n    try {\n      const normed = ens_normalize(name);\n      if (normed !== name) {\n        throw false;\n      }\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  performNormalisation(name: string) {\n    return ens_normalize(name);\n  }\n\n  prettify(name: string) {\n    return ens_beautify(name);\n  }\n\n  calculateDomainsPrice(\n    name: string,\n    ethToUsdRate: string,\n    durationInYears: number = 1\n  ) {\n    const ethUsdRate = parseInt(ethToUsdRate, 10);\n    let nameCost = 5;\n    const count = this.getNameLength(name);\n    switch (count) {\n      case 3:\n        {\n          nameCost = 640;\n        }\n        break;\n      case 4:\n        {\n          nameCost = 160;\n        }\n        break;\n    }\n    return parseFloat((nameCost / ethUsdRate).toFixed(4)) * durationInYears;\n  }\n\n  getNameLength(name: string) {\n    const count = [...ens_normalize(name)].length;\n    return count;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FormValidationService {\n  constructor() {}\n\n  markFormGroupTouched(formGroup: FormGroup) {\n    (Object as any).values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n\n      if (control.controls) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { routerPaths } from 'src/app/models/router-paths.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PathResolveService implements Resolve<string | null> {\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): string | null {\n    const typoPath = state.url.replace('/', '');\n    const threshold = this.getThreshold(typoPath);\n    const dictionary = Object.values(routerPaths).filter(\n      (path) => Math.abs(path.length - typoPath.length) < threshold\n    ) as string[];\n    if (!dictionary.length) {\n      return null;\n    }\n    this.sortByDistances(typoPath, dictionary);\n    return `/${dictionary[0]}`;\n  }\n\n  getThreshold(path: string): number {\n    if (path.length < 5) {\n      return 3;\n    }\n    return 5;\n  }\n\n  sortByDistances(typoPath: string, dictionary: string[]) {\n    const pathsDistance = {} as { [name: string]: number };\n    dictionary.sort((a, b) => {\n      if (!(a in pathsDistance)) {\n        pathsDistance[a] = this.levenshtein(a, typoPath);\n      }\n      if (!(b in pathsDistance)) {\n        pathsDistance[b] = this.levenshtein(b, typoPath);\n      }\n\n      return pathsDistance[a] - pathsDistance[b];\n    });\n  }\n\n  levenshtein(a: string, b: string): number {\n    if (a.length === 0) {\n      return b.length;\n    }\n    if (b.length === 0) {\n      return a.length;\n    }\n    const matrix = [];\n    for (let i = 0; i <= b.length; i++) {\n      matrix[i] = [i];\n    }\n    for (let j = 0; j <= a.length; j++) {\n      matrix[0][j] = j;\n    }\n    for (let i = 1; i <= b.length; i++) {\n      for (let j = 1; j <= a.length; j++) {\n        if (b.charAt(i - 1) === a.charAt(j - 1)) {\n          matrix[i][j] = matrix[i - 1][j - 1];\n        } else {\n          matrix[i][j] = Math.min(\n            matrix[i - 1][j - 1] + 1,\n            matrix[i][j - 1] + 1,\n            matrix[i - 1][j] + 1\n          );\n        }\n      }\n    }\n    return matrix[b.length][a.length];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport TrezorConnect from 'trezor-connect';\nimport { MiscUtilsService } from '../misc-utils';\nimport { PagesFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { BigNumber, utils } from 'ethers';\nimport { generalConfigurations } from 'src/app/configurations';\n\ninterface TrezorSignedTransactionModel {\n  id: number;\n  success: boolean;\n  payload: {\n    v: string;\n    r: string;\n    s: string;\n  };\n}\n\ninterface TrezorGetAccountInfoResultModel {\n  id: number;\n  success: boolean;\n  payload: {\n    availableBalance: string;\n    balance: string;\n    descriptor: string;\n    empty: boolean;\n    history: {\n      tokens: string[];\n      total: number;\n      transactions: any[];\n      unconfirmed: number;\n    };\n    misc: {\n      nonce: string;\n    };\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrezorService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public pagesFacade: PagesFacadeService\n  ) {}\n\n  connect(time: number) {\n    return new Observable((observer) => {\n      TrezorConnect.init({\n        lazyLoad: false,\n        webusb: true,\n        popup: true,\n        manifest: generalConfigurations.trezorManifest,\n      })\n        .then((r) => {\n          return TrezorConnect.getAccountInfo({\n            path: \"m/44'/60'/0'/0/0\",\n            coin: 'eth',\n          });\n        })\n        .then((r) => {\n          const result = r as any as TrezorGetAccountInfoResultModel;\n          if (r === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(result.payload.descriptor);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  signPayment(payload: any) {\n    return new Observable((observer) => {\n      TrezorConnect.getAccountInfo({\n        path: \"m/44'/60'/0'/0/0\",\n        coin: 'eth',\n      })\n        .then((r) => {\n          const accountInfo = r as any as TrezorGetAccountInfoResultModel;\n          return TrezorConnect.ethereumSignTransaction({\n            path: \"m/44'/60'/0'/0/0\",\n            transaction: {\n              ...payload,\n              from: accountInfo.payload.descriptor,\n              nonce: BigNumber.from(payload.nonce).toHexString(),\n            },\n          });\n        })\n        .then((r) => {\n          const signed = r as any as TrezorSignedTransactionModel;\n          if (\n            signed === null ||\n            signed.success === false ||\n            signed === undefined\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(\n            utils.serializeTransaction(payload, {\n              v: BigNumber.from(signed.payload.v).toNumber(),\n              r: signed.payload.r,\n              s: signed.payload.s,\n            })\n          );\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { icons, imageToPreload } from 'src/app/configurations';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconRegistryService {\n  constructor() {}\n\n  injectCustomIcons() {\n    return icons;\n  }\n\n  perloadCustomIcons() {\n    const ic = this.injectCustomIcons();\n    for (const i of Object.keys(ic).map((ici) => ic[ici])) {\n      const ii = new Image();\n      ii.src = i;\n    }\n    const icc = imageToPreload;\n    for (const i of Object.keys(ic).map((ici) => ic[ici])) {\n      const ii = new Image();\n      ii.src = i;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { MiscUtilsService } from \"../../misc-utils\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PaymentEffectsService {\n  constructor(protected miscUtils: MiscUtilsService) {}\n\n  recordLastConnectionAddress(connectionAddress: string) {\n    localStorage.setItem(\"ps-last-connection\", connectionAddress);\n  }\n\n  getLastConnectionAddress() {\n    const lConnectionAddres = localStorage.getItem(\"ps-last-connection\");\n    if (\n      lConnectionAddres === null ||\n      lConnectionAddres === \"\" ||\n      lConnectionAddres === undefined\n    ) {\n      return false;\n    }\n    return lConnectionAddres;\n  }\n}\n","import { Router } from '@angular/router';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { UserFacadeService } from '../../store/facades';\n\n@Injectable({ providedIn: 'root' })\nexport class Intercept implements HttpInterceptor {\n  constructor(router: Router, public userFacade: UserFacadeService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MiscUtilsService } from '../misc-utils';\nimport TransportUSB from '@ledgerhq/hw-transport-webusb';\nimport LedgerEth from '@ledgerhq/hw-app-eth';\nimport { PagesFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\n\ninterface LedgerSignResultModel {\n  v: number;\n  r: string;\n  s: string;\n}\n\ninterface LedgerGetAddressResultModel {\n  address: string;\n  chainCode: string;\n  publicKey: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LedgerService {\n  transport: any;\n  ledger: LedgerEth;\n\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public pagesFacade: PagesFacadeService\n  ) {\n    TransportUSB.create().then((r) => {\n      this.transport = r;\n      this.ledger = new LedgerEth(r);\n      return this.ledger.getAddress(\"m/44'/60'/0'/0/0\");\n    });\n  }\n\n  connect(time: number) {\n    return new Observable((observer) => {\n      this.ledger\n        .getAddress(\"m/44'/60'/0'/0/0\")\n        .then((r) => {\n          const result = r as any as LedgerGetAddressResultModel;\n          observer.next(result.address);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  createTransport() {\n    return new Observable((observer) => {\n      TransportUSB.create().then((r) => {\n        this.transport = r;\n        this.ledger = new LedgerEth(r);\n        observer.next(this.ledger);\n        observer.complete();\n        return;\n      });\n    });\n  }\n\n  signPayment(payload: string) {\n    return new Observable((observer) => {\n      this.ledger\n        .signTransaction(\"m/44'/60'/0'/0/0\", payload.substring(2))\n        .then((r) => {\n          if (r === null || r === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          const signed = r as any as LedgerSignResultModel;\n          observer.next(signed);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","import * as Ethers from 'ethers';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MiscUtilsService } from '../misc-utils';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { UserModel } from 'src/app/models/states/user-interfaces';\n\ndeclare const ethereum;\n@Injectable({\n  providedIn: 'root',\n})\nexport class MetamaskService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public userFacadeService: UserFacadeService,\n    public pagesFacade: PagesFacadeService\n  ) {}\n\n  connect(time: number) {\n    return this.getAccounts().pipe(\n      switchMap((a) => {\n        const accounts = a as any;\n        if (\n          accounts === undefined ||\n          accounts === null ||\n          accounts.length <= 0\n        ) {\n          return of(false);\n        }\n        return of(a[0]);\n      }),\n      catchError((e) => {\n        return of(false);\n      })\n    );\n  }\n\n  chainChangedDetectionDaemon() {\n    ethereum.on('chainChanged', (chainId) => {\n      this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n    });\n    ethereum.on('accountsChanged', (accounts) => {\n      this.userFacadeService.removeUser();\n    });\n  }\n\n  getChainId() {\n    return ethereum.networkVersion;\n  }\n\n  getAccounts() {\n    return new Observable((observer) => {\n      ethereum\n        .request({ method: 'eth_requestAccounts' })\n        .then((accounts) => {\n          if (\n            accounts === null ||\n            accounts.length <= 0 ||\n            accounts === undefined\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(\n            accounts.map((a) => {\n              return Ethers.utils.getAddress(a);\n            })\n          );\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  signPayment(payloadHash: any) {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p: any) => {\n          return p.request({\n            method: 'eth_sendTransaction',\n            params: payloadHash,\n          });\n        })\n        .then((tx) => {\n          if (tx === null || tx.length <= 0 || tx === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(tx);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getWeb3Provider() {\n    return new Observable((observer) => {\n      detectEthereumProvider()\n        .then((p) => {\n          observer.next(p);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(null);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ethers } from 'ethers';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MiscUtilsService {\n  constructor() {}\n\n  roundUp(num: number, roundTo: number) {\n    return Math.round(num / roundTo) * roundTo;\n  }\n\n  testJSON(json) {\n    const str = json.toString();\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  testUrl() {\n    const expression =\n      /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi;\n    const test = new RegExp(expression);\n    return test;\n  }\n\n  checksumEtheruemAddress(address: string) {\n    try {\n      return (\n        ethers.utils.getAddress(address).toLowerCase() === address.toLowerCase()\n      );\n    } catch (e) {\n      return false;\n    }\n  }\n\n  commafied(num: string) {\n    if (num.toString().indexOf('.') <= -1) {\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n      const parts = num.toString().split('.');\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      return parts.join('.');\n    }\n  }\n\n  prependToArray(value: any, array: any[]) {\n    var newArray = array.slice();\n    newArray.unshift(value);\n    return newArray;\n  }\n\n  toHex(str: string) {\n    const rb = new TextEncoder().encode(str);\n    let r = '';\n    for (const b of rb) {\n      r += ('0' + b.toString(16)).slice(-2);\n    }\n    return r;\n  }\n\n  testNumeric() {\n    const reg = new RegExp(/^(0|[1-9]\\d*)(\\.\\d+)?$/);\n    return reg;\n  }\n\n  testAlphaNumeric() {\n    const reg = new RegExp('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$');\n    return reg;\n  }\n\n  testAlpha() {\n    const reg = new RegExp('^[A-Za-z]+$');\n    return reg;\n  }\n\n  testEmoji() {\n    const reg = new RegExp(/\\p{Extended_Pictographic}/u);\n    return reg;\n  }\n\n  testIntNumeric() {\n    const reg = new RegExp('^[0-9]+$');\n    return reg;\n  }\n}\n","export enum PaymentStoreErrorsEnum {\n  UNKOWN = \"UNKNOWN_PAYMENT\",\n  NO_NETWORK_CONNECTION = \"NO_NETWORK_CONNECTION\",\n  QRSCANNER_CAMERA_NO_PERMISSION = \"QRSCANNER_CAMERA_NO_PERMISSION\",\n  QRSCANNED_RESULT_ERROR = \"QRSCANNED_RESULT_ERROR\",\n  QRSCAN_CANCELLED = \"QRSCAN_CANCELLED\",\n  PIN_INVALID = \"PIN_INVALID\",\n  SIGNING_PAYMENT_ERROR = \"SIGNING_PAYMENT_ERROR\",\n  QRSCANNED_WALLET_ADDRESS_INVALID = \"QRSCANNED_WALLET_ADDRESS_INVALID\",\n  PAYMENT_RELAY_FAILED = \"PAYMENT_RELAY_FAILED\",\n  PAYMENT_FAILED_AMOUNT_ZERO = \"PAYMENT_FAILED_AMOUNT_ZERO\",\n  PAYMENT_FAILED_INSUFFICIENT_FUNDS = \"PAYMENT_FAILED_INSUFFICIENT_FUNDS\",\n  PAYMENT_FAILED_EXPIRED = \"PAYMENT_FAILED_EXPIRED\",\n  PAYMENT_FAILED_TOKEN_NOT_SUPPORTED = \"PAYMENT_FAILED_TOKEN_NOT_SUPPORTED\",\n  PAYMENT_FAILED_UNKNOWN = \"PAYMENT_FAILED_UNKNOWN\",\n  PAYMENT_FAILED_SIGNATURE_INVALID = \"PAYMENT_FAILED_SIGNATURE_INVALID\",\n  PAYMENT_FAILED_PAYEE_ADDRESS_INVALID = \"PAYMENT_FAILED_PAYEE_ADDRESS_INVALID\",\n  PAYMENT_FAILED_WITHDRAW_FAILURE = \"PAYMENT_FAILED_WITHDRAW_FAILURE\",\n  PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE = \"PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE\",\n  PAYMENT_FAILED_WALLET_RECOVERY_FAILURE = \"PAYMENT_FAILED_WALLET_RECOVERY_FAILURE\",\n  PAYMENT_FAILED_EXCHANGE_CURRENCIES_DUPLICATE = \"PAYMENT_FAILED_EXCHANGE_CURRENCIES_DUPLICATE\",\n  PAYMENT_FAILED_INSUFFICIENT_LIQUIDITY = \"PAYMENT_FAILED_INSUFFICIENT_LIQUIDITY\",\n  PAYMENT_FAILED_NONCE_COLLUSION = \"PAYMENT_FAILED_NONCE_COLLUSION\",\n  PAYMENT_FAILED_SERVER_BUSY = \"PAYMENT_FAILED_SERVER_BUSY\",\n  PAYMENT_FAILED_MARKET_CLOSED = \"PAYMENT_FAILED_MARKET_CLOSED\",\n  PAYMENT_FAILED_WALLET_ID_TAKEN = \"PAYMENT_FAILED_WALLET_ID_TAKEN\",\n  PAYMENT_FAILED_MARKET_NOT_SUPPORTED = \"PAYMENT_FAILED_MARKET_NOT_SUPPORTED\",\n  PAYMENT_FAILED_MULTISIG_QUORUM_FAILED = \"PAYMENT_FAILED_MULTISIG_QUORUM_FAILED\",\n  PAYMENT_FAILED_MULTISIG_STORAGE_FULL = \"PAYMENT_FAILED_MULTISIG_STORAGE_FULL\",\n  PAYMENT_FAILED_MULTISIG_NO_ENTRY = \"PAYMENT_FAILED_MULTISIG_NO_ENTRY\",\n  PAYMENT_HISTORY_REMOVAL_FAILED = \"PAYMENT_HISTORY_REMOVAL_FAILED\",\n  PAYMENT_FAILED_ALREADY_FULFILLED = \"PAYMENT_FAILED_ALREADY_FULFILLED\",\n}\n","import { Injectable } from \"@angular/core\";\nimport { PaymentStoreErrorsEnum } from \"../../models/error-enums\";\nimport { PaymentErrorCodes } from \"../../models/states/payment-interfaces\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PaymentErrorService {\n  constructor() {}\n\n  getPaymentErrorTranslatedTextKey(paymentError: PaymentStoreErrorsEnum) {\n    switch (paymentError) {\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_AMOUNT_ZERO:\n        {\n          return \"ERRORS.PAYMENT_FAILED_INSUFFICIENT_FUNDS\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_INSUFFICIENT_FUNDS:\n        {\n          return \"ERRORS.PAYMENT_FAILED_INSUFFICIENT_FUNDS\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_EXPIRED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_EXPIRED\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_UNKNOWN:\n        {\n          return \"ERRORS.PAYMENT_FAILED_UNKNOWN\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_SIGNATURE_INVALID:\n        {\n          return \"ERRORS.PAYMENT_FAILED_SIGNATURE_INVALID\";\n        }\n        break;\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WITHDRAW_FAILURE:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WITHDRAW_FAILURE\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_ID_TAKEN:\n        {\n          return \"ERRORS.PAYMENT_FAILED_WALLET_ID_TAKEN\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_QUORUM_FAILED:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_QUORUM_FAILED\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_STORAGE_FULL:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_STORAGE_FULL\";\n        }\n        break;\n\n      case PaymentStoreErrorsEnum.PAYMENT_FAILED_MULTISIG_NO_ENTRY:\n        {\n          return \"ERRORS.PAYMENT_FAILED_MULTISIG_NO_ENTRY\";\n        }\n        break;\n    }\n  }\n  getPaymentErrorEnumKey(errorCode: PaymentErrorCodes) {\n    switch (errorCode) {\n      case PaymentErrorCodes.AMOUNT_ZERO:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_AMOUNT_ZERO;\n        }\n        break;\n      case PaymentErrorCodes.INSUFFICIENT_FUNDS:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_INSUFFICIENT_FUNDS;\n        }\n        break;\n      case PaymentErrorCodes.PAYMENT_EXPIRED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_EXPIRED;\n        }\n        break;\n      case PaymentErrorCodes.PAYMENT_FAILURE:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_UNKNOWN;\n        }\n        break;\n      case PaymentErrorCodes.TOKEN_NOT_SUPPORTED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_TOKEN_NOT_SUPPORTED;\n        }\n        break;\n      case PaymentErrorCodes.SIGNATURE_INVALID:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_WALLET_INITIALISATION_FAILURE;\n        }\n        break;\n      case PaymentErrorCodes.MARKET_NOT_SUPPORTED:\n        {\n          return PaymentStoreErrorsEnum.PAYMENT_FAILED_MARKET_NOT_SUPPORTED;\n        }\n        break;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PaymentModel } from 'src/app/models/states/payment-interfaces';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentStorageService {\n  constructor() {}\n\n  get networkName() {\n    return globalAny.networkName;\n  }\n\n  removePayments() {\n    localStorage.removeItem('canvas-payments-data');\n  }\n\n  savePayments(paymentData: PaymentModel[]) {\n    localStorage.setItem('canvas-payments-data', JSON.stringify(paymentData));\n  }\n\n  loadPayments() {\n    const l = localStorage.getItem('canvas-payments-data');\n    if (l === null || l === '[]' || l === '') {\n      return false;\n    }\n    return JSON.parse(l);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { UserService } from '../user';\nimport { CurrencyService } from '../currency';\nimport { WalletService } from '../wallet';\nimport { PaymentModel } from 'src/app/models/states/payment-interfaces';\nimport { Observable } from 'rxjs';\nimport { BigNumber, ethers } from 'ethers';\nimport { Provider } from '@ethersproject/abstract-provider';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentService {\n  constructor(\n    protected userService: UserService,\n    protected currencyService: CurrencyService,\n    protected walletService: WalletService\n  ) {}\n\n  prepareTransaction(\n    chainId: number,\n    nonce: number,\n    toAddress: string,\n    gasLimit: string,\n    gasPrice: string,\n    payment: PaymentModel\n  ) {\n    const paymentLoad = {\n      chainId: chainId,\n      nonce: nonce,\n      to: toAddress,\n      gasPrice: gasPrice,\n      gas: gasLimit,\n      value: payment.paymentTotal,\n      data: payment.paymentAbstractBytesSlot,\n    };\n    return paymentLoad;\n  }\n\n  resolveAddressOfEth(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      provider.resolveName(walletAddress).then((n) => {\n        observer.next(n);\n        observer.complete();\n      });\n    });\n  }\n\n  getWalletNonce(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      provider.getTransactionCount(walletAddress).then((n) => {\n        observer.next(n);\n        observer.complete();\n      });\n    });\n  }\n\n  getGasPrice(provider: Provider) {\n    return new Observable((observer) => {\n      provider\n        .getFeeData()\n        .then((feeData) => {\n          observer.next(feeData);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","export const ENSBulkRegistrationContractMainnetABI = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'errorInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'error',\n    type: 'event',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'receive',\n    payable: true,\n  },\n  {\n    inputs: [],\n    name: 'recoverStuckETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'string',\n            name: 'name',\n            type: 'string',\n          },\n          {\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'duration',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'secret',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'resolver',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'data',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'bool',\n            name: 'reverseRecord',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint32',\n            name: 'fuses',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'wrapperExpiry',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct ENSCommitment.Commitment[]',\n        name: 'commitments',\n        type: 'tuple[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'withConfigs',\n        type: 'bool',\n      },\n    ],\n    name: 'createCommitmentsForRegistration',\n    outputs: [\n      {\n        internalType: 'bytes32[]',\n        name: '',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32[]',\n        name: 'commitments',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'requestRegistration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'completeRegistration',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'completeRegistrationWithConfigs',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n];\n","export const ENSBulkRegistrationContractTestnetABI = [\n  {\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes',\n        name: 'errorInfo',\n        type: 'bytes',\n      },\n    ],\n    name: 'error',\n    type: 'event',\n  },\n  {\n    stateMutability: 'payable',\n    type: 'receive',\n    payable: true,\n  },\n  {\n    inputs: [],\n    name: 'recoverStuckETH',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        components: [\n          {\n            internalType: 'string',\n            name: 'name',\n            type: 'string',\n          },\n          {\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            internalType: 'uint256',\n            name: 'duration',\n            type: 'uint256',\n          },\n          {\n            internalType: 'bytes32',\n            name: 'secret',\n            type: 'bytes32',\n          },\n          {\n            internalType: 'address',\n            name: 'resolver',\n            type: 'address',\n          },\n          {\n            internalType: 'bytes[]',\n            name: 'data',\n            type: 'bytes[]',\n          },\n          {\n            internalType: 'bool',\n            name: 'reverseRecord',\n            type: 'bool',\n          },\n          {\n            internalType: 'uint32',\n            name: 'fuses',\n            type: 'uint32',\n          },\n          {\n            internalType: 'uint64',\n            name: 'wrapperExpiry',\n            type: 'uint64',\n          },\n        ],\n        internalType: 'struct ENSCommitment.Commitment[]',\n        name: 'commitments',\n        type: 'tuple[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bool',\n        name: 'withConfigs',\n        type: 'bool',\n      },\n    ],\n    name: 'createCommitmentsForRegistration',\n    outputs: [\n      {\n        internalType: 'bytes32[]',\n        name: '',\n        type: 'bytes32[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32[]',\n        name: 'commitments',\n        type: 'bytes32[]',\n      },\n    ],\n    name: 'requestRegistration',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'completeRegistration',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string[]',\n        name: 'names',\n        type: 'string[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'nameLengths',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256[]',\n        name: 'priceRanges',\n        type: 'uint256[]',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'completeRegistrationWithConfigs',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n    payable: true,\n  },\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'getPriceRanges',\n    outputs: [\n      {\n        internalType: 'uint256[]',\n        name: '',\n        type: 'uint256[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n    constant: true,\n  },\n];\n","import { ens_normalize, ens_tokenize } from '@adraffy/ens-normalize';\nimport { Injectable } from '@angular/core';\nimport { BigNumber, Contract, ethers } from 'ethers';\nimport { Observable, of } from 'rxjs';\nimport {\n  bulkRegistrationMainnet,\n  bulkRegistrationTestnet,\n  generalConfigurations,\n} from 'src/app/configurations';\nimport { ENSBulkRegistrationContractMainnetABI } from 'src/app/configurations/contracts/ens-bulk-registration-mainnet.abi';\nimport { ENSBulkRegistrationContractTestnetABI } from 'src/app/configurations/contracts/ens-bulk-registration-testnet.abi';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport {\n  ENSRegistrationCommitmentModel,\n  ENSRegistrationCommmitmentRequestResultModel,\n} from 'src/app/models/states/ens-registration-interfaces';\nimport { environment } from 'src/environments/environment';\nimport { ContractService } from '../contract';\nimport { EnsService } from '../ens';\nimport { MiscUtilsService } from '../misc-utils';\nimport { PaymentService } from '../payment';\n\nconst gloalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationFacilityService {\n  constructor(\n    protected miscUtilsService: MiscUtilsService,\n    protected paymentService: PaymentService,\n    protected ensService: EnsService,\n    protected contractService: ContractService\n  ) {}\n\n  registrationDomainsToCommitmentPacket(\n    owner: string,\n    duration: number,\n    secret: string,\n    resolver: string,\n    commitments: ENSDomainMetadataModel[]\n  ) {\n    let compiled = [];\n    for (const c of commitments) {\n      const nc = {\n        name: c.labelName,\n        owner: owner,\n        duration: BigNumber.from(duration),\n        secret: secret,\n        resolver: resolver,\n        data: [],\n        reverseRecord: resolver !== payNoMarketAddress ? true : false,\n        fuses: 0,\n        wrapperExpiry: 0,\n        metadata: c,\n      } as ENSRegistrationCommitmentModel;\n      compiled.push(nc);\n    }\n    return compiled;\n  }\n\n  commitmentPacketToRegistrationDomains(\n    commitments: ENSRegistrationCommitmentModel[]\n  ) {\n    let decompiled = [];\n    for (const c of commitments) {\n      const nc = c.metadata as ENSDomainMetadataModel;\n      decompiled.push(nc);\n    }\n    return decompiled;\n  }\n\n  createRegistrationCommitmentPacket(\n    commitments: ENSRegistrationCommitmentModel[],\n    payer: string,\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const comitmentsPrepared = [];\n    for (const c of commitments) {\n      const nCP = [\n        c.name,\n        c.owner,\n        c.duration,\n        c.secret,\n        c.resolver,\n        c.data,\n        c.reverseRecord,\n        c.fuses,\n        c.wrapperExpiry,\n      ] as any;\n      nCP.name = c.name;\n      nCP.owner = c.owner;\n      nCP.duration = c.duration;\n      nCP.secret = c.secret;\n      nCP.resolver = c.resolver;\n      nCP.data = c.data;\n      nCP.reverseRecord = c.reverseRecord;\n      nCP.fuses = c.fuses;\n      nCP.wrapperExpiry = c.wrapperExpiry;\n      comitmentsPrepared.push(nCP);\n    }\n    const isResolverSet = comitmentsPrepared[0].resolver !== payNoMarketAddress;\n    const duration = comitmentsPrepared[0].duration;\n    let commitmentResult, gasLimit;\n    return new Observable((observer) => {\n      contract\n        .createCommitmentsForRegistration(\n          comitmentsPrepared,\n          duration,\n          isResolverSet\n        )\n        .then((r) => {\n          commitmentResult = r;\n          return this.contractService\n            .getGasLimitEstimation(\n              provider,\n              'requestRegistration',\n              [commitmentResult[0]],\n              payer,\n              this.bulkRegistrationContractAddress,\n              this.BulkRegistrationContractABI\n            )\n            .toPromise()\n            .catch((e) => {\n              return null;\n            });\n        })\n        .then((r) => {\n          if (\n            r === false ||\n            r === null ||\n            commitmentResult === false ||\n            commitmentResult === null\n          ) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = r as BigNumber;\n          observer.next([\n            {\n              commitments: commitmentResult[0],\n              priceRanges: commitmentResult[1].map((pr) =>\n                pr.mul(generalConfigurations.maxTotalCostBuffer).div(100)\n              ),\n            } as ENSRegistrationCommmitmentRequestResultModel,\n            gasLimit,\n          ]);\n          observer.complete();\n          return;\n        });\n    });\n  }\n\n  createRegistrationRequestPaymentPacket(\n    commitmentsPrepared: string[],\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const dataInput = contract.interface.encodeFunctionData(\n      'requestRegistration',\n      [commitmentsPrepared]\n    );\n    return dataInput;\n  }\n\n  decodeRegistrationPacket(abstractData: string, value: BigNumber) {\n    const contract = this.getEnsBulkRegistrationContract();\n    const dataInput = contract.interface.parseTransaction({\n      data: abstractData,\n      value,\n    });\n    return dataInput;\n  }\n\n  completeRegistration(\n    commitments: ENSRegistrationCommitmentModel[],\n    payer: string,\n    priceRanges: string[],\n    totalCost: string,\n    provider\n  ) {\n    const contract = this.getEnsBulkRegistrationContract(provider);\n    const names = [];\n    const namesLengths = [];\n    const secret = commitments[0].secret;\n    const resolver = commitments[0].resolver;\n    const owner = commitments[0].owner;\n    const duration = commitments[0].duration;\n    for (const c of commitments) {\n      names.push(c.name);\n      namesLengths.push(this.ensService.getNameLength(c.name));\n    }\n    const dataMethod =\n      commitments[0].resolver === payNoMarketAddress\n        ? 'completeRegistration'\n        : 'completeRegistrationWithConfigs';\n    const dataParams =\n      commitments[0].resolver === payNoMarketAddress\n        ? [names, namesLengths, priceRanges, owner, duration, secret]\n        : [names, namesLengths, priceRanges, duration, secret, resolver, owner];\n    const dataInput = contract.interface.encodeFunctionData(\n      dataMethod,\n      dataParams\n    );\n    let gasLimit;\n    if (names.length === 1) {\n      return of([\n        dataInput,\n        ethers.BigNumber.from(\n          commitments[0].resolver === payNoMarketAddress ? '300000' : '350000'\n        ),\n      ]);\n    }\n    return new Observable((observer) => {\n      this.contractService\n        .getGasLimitEstimation(\n          provider,\n          dataMethod,\n          dataParams,\n          payer,\n          this.bulkRegistrationContractAddress,\n          this.BulkRegistrationContractABI,\n          false,\n          totalCost\n        )\n        .toPromise()\n        .then((r) => {\n          if (r === false || r === null) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          gasLimit = (r as BigNumber).add(generalConfigurations.gasLimitBuffer);\n          observer.next([dataInput, gasLimit]);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getEnsBulkRegistrationContract(provider = null) {\n    const c = new Contract(\n      this.bulkRegistrationContractAddress,\n      this.BulkRegistrationContractABI,\n      provider\n    );\n    return c;\n  }\n\n  get BulkRegistrationContractABI() {\n    if (environment.test === true) {\n      return ENSBulkRegistrationContractTestnetABI;\n    }\n    return ENSBulkRegistrationContractMainnetABI;\n  }\n\n  get bulkRegistrationContractAddress() {\n    if (environment.test === true) {\n      return bulkRegistrationTestnet;\n    }\n    return bulkRegistrationMainnet;\n  }\n}\n","export const EnsTestnetABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'NewOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'NewResolver',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'NewTTL',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setSubnodeRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setSubnodeOwner',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'setResolver',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setTTL',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ttl',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","export const EnsABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'ApprovalForAll',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'NewOwner',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'NewResolver',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'NewTTL',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'Transfer',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setSubnodeRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setSubnodeOwner',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n    ],\n    name: 'setResolver',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n    ],\n    name: 'setOwner',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'uint64',\n        name: 'ttl',\n        type: 'uint64',\n      },\n    ],\n    name: 'setTTL',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n      {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool',\n      },\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'owner',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'ttl',\n    outputs: [\n      {\n        internalType: 'uint64',\n        name: '',\n        type: 'uint64',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'recordExists',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address',\n      },\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n];\n","export const EnsRegistrarControllerTestnetABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRenewed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oracle',\n        type: 'address',\n      },\n    ],\n    name: 'NewPriceOracle',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'rentPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'valid',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'available',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'makeCommitment',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'makeCommitmentWithConfig',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'commit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'register',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'registerWithConfig',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renew',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n];\n","export const EnsRegistrarControllerABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRegistered',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'label',\n        type: 'bytes32',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'cost',\n        type: 'uint256',\n      },\n      {\n        indexed: false,\n        internalType: 'uint256',\n        name: 'expires',\n        type: 'uint256',\n      },\n    ],\n    name: 'NameRenewed',\n    type: 'event',\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'oracle',\n        type: 'address',\n      },\n    ],\n    name: 'NewPriceOracle',\n    type: 'event',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'rentPrice',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'valid',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n    ],\n    name: 'available',\n    outputs: [\n      {\n        internalType: 'bool',\n        name: '',\n        type: 'bool',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'makeCommitment',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'makeCommitmentWithConfig',\n    outputs: [\n      {\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32',\n      },\n    ],\n    stateMutability: 'pure',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'commitment',\n        type: 'bytes32',\n      },\n    ],\n    name: 'commit',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n    ],\n    name: 'register',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'address',\n        name: 'owner',\n        type: 'address',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n      {\n        internalType: 'bytes32',\n        name: 'secret',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'address',\n        name: 'resolver',\n        type: 'address',\n      },\n      {\n        internalType: 'address',\n        name: 'addr',\n        type: 'address',\n      },\n    ],\n    name: 'registerWithConfig',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n  {\n    inputs: [\n      {\n        internalType: 'string',\n        name: 'name',\n        type: 'string',\n      },\n      {\n        internalType: 'uint256',\n        name: 'duration',\n        type: 'uint256',\n      },\n    ],\n    name: 'renew',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { Contract, ethers } from 'ethers';\nimport { ENSContracts } from 'src/app/configurations';\nimport { EnsTestnetABI } from 'src/app/configurations/contracts/ens-abi-testnet.model';\nimport { EnsABI } from 'src/app/configurations/contracts/ens-abi.model';\nimport { EnsRegistrarControllerTestnetABI } from 'src/app/configurations/contracts/ens-registrar-controller-abi-testnet.model';\nimport { EnsRegistrarControllerABI } from 'src/app/configurations/contracts/ens-registrar-controller-abi.model';\nimport { payNoMarketAddress } from 'src/app/models';\nimport { ENSEventModel, EnsEventsEnum } from 'src/app/models/ens';\nimport { environment } from 'src/environments/environment';\n\nexport const registrationTopic =\n  '0xca6abbe9d7f11422cb6ca7629fbf6fe9efb1c621f71ce8f02b9f2a230097404f';\nexport const nameRenewedTopicHash =\n  '0x3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae';\nexport const martketSaleTopics = {\n  SEAPORT: '0xc4109843e0b7d514e4c093114b863f8e7d8d9a458c372cd51bfe526b588006c9',\n  RARIBLE: '0x9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31',\n  X2Y2: '0xe2c49856b032c255ae7e325d18109bc4e22a2804e2e49a017ec0f59f19cd447b',\n  LOOKSRARE:\n    '0x95fb6205e23ff6bda16a2d1dba56b9ad7c783f67c96fa149785052f47696f2be',\n};\nexport enum SortableMarkets {\n  SEAPORT = 'SEAPORT',\n  RARIBLE = 'RARIBLE',\n  X2Y2 = 'X2Y2',\n  LOOKSRARE = 'LOOKSrare',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationDataService {\n  constructor() {}\n\n  resolevTxType(relatedNameLabelHash: string, owner: string, tx: any) {\n    const marketTopics = Object.values(martketSaleTopics);\n    const markets = Object.keys(martketSaleTopics);\n    let qualifiedTx = tx.logs.filter((e) => {\n      if (marketTopics.filter((t) => e.topics.includes(t)).length > 0) {\n        return true;\n      }\n      if (\n        e.topics.includes(owner) ||\n        e.topics.includes(relatedNameLabelHash) ||\n        e.topics.includes(ENSContracts.registrarController)\n      ) {\n        return true;\n      }\n      return false;\n    });\n    let resolvedEventType: ENSEventModel[] = [];\n    const labelHashInHex =\n      ethers.BigNumber.from(relatedNameLabelHash).toHexString();\n    const paymentNoAddressBytes =\n      ethers.BigNumber.from(payNoMarketAddress).toHexString();\n    for (const e of qualifiedTx) {\n      const topicNormalised = e.topics.map((x) => {\n        return ethers.BigNumber.from(x).toHexString();\n      });\n      if (marketTopics.includes(topicNormalised[0])) {\n        const whichMarket = markets[marketTopics.indexOf(topicNormalised[0])];\n        const marketBuyer = this.getMarketBuyer(\n          SortableMarkets[whichMarket],\n          e,\n          topicNormalised,\n          tx\n        );\n        const marketSeller = this.getMarketSeller(\n          SortableMarkets[whichMarket],\n          e,\n          topicNormalised,\n          tx\n        );\n        resolvedEventType.push({\n          type: EnsEventsEnum.SALE,\n          from: marketSeller.toLowerCase(),\n          to: marketBuyer.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        (topicNormalised[1] ===\n          ENSContracts.registrarController.toLowerCase() &&\n          topicNormalised[2] !== paymentNoAddressBytes) ||\n        (topicNormalised[0] === registrationTopic &&\n          topicNormalised[1] === labelHashInHex &&\n          topicNormalised[2] === owner)\n      ) {\n        const registrant = topicNormalised[2];\n        resolvedEventType.push({\n          type: EnsEventsEnum.REGISTRATION,\n          from: ENSContracts.registrarController.toLowerCase(),\n          to: registrant.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        (topicNormalised[1] === paymentNoAddressBytes &&\n          topicNormalised[2] ===\n            ENSContracts.registrarController.toLowerCase()) ||\n        (topicNormalised[1] === paymentNoAddressBytes &&\n          topicNormalised[2] === owner)\n      ) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.MINT,\n          from: null,\n          to: ENSContracts.registrarController.toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (topicNormalised[2] === paymentNoAddressBytes) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.BURN,\n          from: topicNormalised[1],\n          to: null,\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      } else if (\n        topicNormalised[1] !== ENSContracts.registrarController.toLowerCase() &&\n        topicNormalised[1] !== paymentNoAddressBytes &&\n        topicNormalised[2] !== ENSContracts.registrarController.toLowerCase() &&\n        topicNormalised[2] !== paymentNoAddressBytes &&\n        topicNormalised[1].length === 42 &&\n        topicNormalised[2].length === 42\n      ) {\n        resolvedEventType.push({\n          type: EnsEventsEnum.TRANSFER,\n          from: topicNormalised[1].toLowerCase(),\n          to: topicNormalised[2].toLowerCase(),\n          txHash: tx.transactionHash,\n          value: this.txValueToEther(tx.value),\n          date: tx.timestamp,\n        } as ENSEventModel);\n      }\n    }\n    const uniqueSet = new Set();\n    let filteredEvents = resolvedEventType;\n    if (resolvedEventType.map((re) => re.type).includes(EnsEventsEnum.SALE)) {\n      filteredEvents = resolvedEventType.filter((r) => {\n        if (r.type === EnsEventsEnum.SALE) {\n          return true;\n        }\n        return false;\n      });\n    }\n    return filteredEvents.filter((r) => {\n      const isDuplicate = uniqueSet.has(r.type + r.txHash);\n      uniqueSet.add(r.type + r.txHash);\n      if (isDuplicate === false) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  txValueToEther(value: string) {\n    return parseFloat(\n      ethers.utils.formatEther(ethers.BigNumber.from(value).toString())\n    ).toFixed(5);\n  }\n\n  getMarketBuyer(\n    market: SortableMarkets,\n    eventWholeData: any,\n    event: any,\n    tx: any\n  ) {\n    switch (market) {\n      case SortableMarkets.SEAPORT:\n        {\n          return event[2];\n        }\n        break;\n      case SortableMarkets.LOOKSRARE:\n        {\n          return tx.from;\n        }\n        break;\n      case SortableMarkets.RARIBLE:\n        {\n          return tx.from;\n        }\n        break;\n      case SortableMarkets.X2Y2:\n        {\n          return tx.from;\n        }\n        break;\n    }\n  }\n\n  getMarketSeller(\n    market: SortableMarkets,\n    eventWholeData: any,\n    event: any,\n    tx: any\n  ) {\n    switch (market) {\n      case SortableMarkets.SEAPORT:\n        {\n          return event[1];\n        }\n        break;\n      case SortableMarkets.LOOKSRARE:\n        {\n          return event[2];\n        }\n        break;\n      case SortableMarkets.RARIBLE:\n        {\n          return event[1];\n        }\n        break;\n      case SortableMarkets.X2Y2:\n        {\n          const data = eventWholeData.data.substring(2).match(/.{1,64}/g);\n          return ethers.BigNumber.from('0x' + data[2]).toHexString();\n        }\n        break;\n    }\n  }\n\n  getENSContract(provider) {\n    const contract = new Contract(\n      ENSContracts.registrar,\n      this.ensContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  getENSRegistrarControllerContract(provider) {\n    const contract = new Contract(\n      ENSContracts.registrarController,\n      this.ensRegistrarControllerContractABI,\n      provider\n    );\n    return contract;\n  }\n\n  get ensRegistrarControllerContractABI() {\n    if (environment.test === true) {\n      return EnsRegistrarControllerTestnetABI;\n    }\n    return EnsRegistrarControllerABI;\n  }\n\n  get ensContractABI() {\n    if (environment.test === true) {\n      return EnsTestnetABI;\n    }\n    return EnsABI;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegistrationServiceService {\n  constructor(protected snackBar: MatSnackBar) {}\n\n  countRegistrations() {\n    const rs = this.loadRegistrationsAndFeed();\n    return rs.length;\n  }\n\n  loadRegistrations() {\n    return localStorage.getItem('canvas-registrations');\n  }\n\n  loadRegistrationsAndFeed() {\n    const sRegistrations = this.loadRegistrations();\n    if (\n      sRegistrations !== null &&\n      sRegistrations !== 'null' &&\n      sRegistrations !== '' &&\n      sRegistrations !== '[]'\n    ) {\n      return JSON.parse(sRegistrations);\n    }\n    return [];\n  }\n\n  saveAllRegistrations(domainsData: ENSDomainMetadataModel[]) {\n    const registrationsRaw = this.loadRegistrationsAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(registrationsRaw);\n    let registrations = [...new Set(bKeys)].map((k) => registrationsRaw[k]);\n    registrations = registrations.concat(domainsData);\n    localStorage.setItem('canvas-registrations', JSON.stringify(registrations));\n    return registrations;\n  }\n\n  saveRegistrations(domainData: ENSDomainMetadataModel) {\n    const registrationsRaw = this.loadRegistrationsAndFeed().reduce(\n      (accumulator, value) => {\n        return { ...accumulator, [value.labelName]: value };\n      },\n      {}\n    );\n    const bKeys = Object.keys(registrationsRaw);\n    const registrations = [...new Set(bKeys)].map((k) => registrationsRaw[k]);\n    registrations.push(domainData);\n    localStorage.setItem('canvas-registrations', JSON.stringify(registrations));\n    return registrations;\n  }\n\n  removeRegistration(\n    registrations: ENSDomainMetadataModel[],\n    domainName: string\n  ) {\n    const registrationsUpdated = [];\n    registrations.filter((d) => {\n      if (d.labelName !== domainName) {\n        registrationsUpdated.push(d);\n      }\n    });\n    localStorage.setItem(\n      'canvas-registrations',\n      JSON.stringify(registrationsUpdated)\n    );\n    return registrationsUpdated;\n  }\n\n  removeAllRegistrations() {\n    return localStorage.setItem('canvas-registrations', '');\n  }\n\n  isDomainOnRegistrationList(\n    registrations: ENSDomainMetadataModel[],\n    domainName: string\n  ) {\n    for (const d of registrations) {\n      if (d.labelName === domainName) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from './translation.service';\n\n@Pipe({\n  name: 'translate',\n})\nexport class TranslationPipe implements PipeTransform {\n  constructor(public translationService: TranslationService) {}\n  transform(value: any): any {\n    if (!value || value === undefined || value.length <= 0) {\n      return null;\n    }\n    const language = this.translationService.getLanguage();\n    const translations = this.translationService.getTranslation(language);\n    const keysSplit = value.split('.');\n    if (value.indexOf('.') <= -1 && value in translations.default) {\n      return translations.default[value];\n    }\n    let currentKey;\n    for (const key of keysSplit) {\n      if (!currentKey) {\n        if (key in translations.default === false) {\n          return value;\n        }\n        currentKey = translations.default[key];\n      } else {\n        if (key in currentKey === false) {\n          return value;\n        }\n        currentKey = currentKey[key];\n      }\n    }\n    return currentKey;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { generalConfigurations, validTranslations } from '../../configurations';\nimport { ValidLangEnum } from '../../models';\n\ndeclare const navigator: any;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TranslationService {\n  getTranslation(lang: ValidLangEnum) {\n    if (\n      lang in validTranslations === false ||\n      validTranslations[lang] === undefined\n    ) {\n      return validTranslations.en;\n    }\n    return validTranslations[lang];\n  }\n\n  getLanguage() {\n    const savedLanguage = this.loadLanguage();\n    if (\n      savedLanguage !== null &&\n      savedLanguage !== '' &&\n      savedLanguage !== undefined &&\n      savedLanguage in validTranslations === true\n    ) {\n      return savedLanguage;\n    } else if (navigator.language) {\n      return navigator.language.split('-')[0];\n    } else {\n      return generalConfigurations.defaultLanguage;\n    }\n  }\n\n  getLocale() {\n    return navigator.language.length <= 2 ? 'en-US' : navigator.language;\n  }\n\n  getCacheableLanguagekeys(key: string) {\n    const translation = this.getTranslation(this.getLanguage());\n    return translation.default[key];\n  }\n\n  getText(key: string) {\n    const translation = this.getTranslation(this.getLanguage());\n    return translation.default[key];\n  }\n\n  loadLanguage() {\n    return localStorage.getItem('canvas-language');\n  }\n\n  saveLanguage(language: string) {\n    localStorage.setItem('canvas-language', language);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WalletService } from '../wallet';\nimport { UserFacadeService } from '../../store/facades';\nimport { Provider } from '@ethersproject/abstract-provider';\nimport { Observable } from 'rxjs';\nimport { request, gql } from 'graphql-request';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(\n    public userFacade: UserFacadeService,\n    public walletService: WalletService\n  ) {}\n\n  getUserDomains(walletAddress: string) {\n    const url = environment.networks[environment.defaultChain].ensGraphQLAPI;\n    return new Observable((observer) => {\n      const query = gql`\n        { \n          registrations(first: 1000, where: { registrant: \"${walletAddress}\" }) {\n            expiryDate\n            registrationDate\n            domain{\n              id\n              createdAt\n              labelName\n              labelhash\n              events{\n                id\n                blockNumber\n                transactionID\n              }\n            }\n          }\n        }\n      `;\n      request(url, query).then((data) => {\n        observer.next(data);\n        observer.complete();\n      });\n    });\n  }\n\n  getEthAddress(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .resolveName(ethName)\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getEthName(provider: Provider, walletAddress: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .lookupAddress(walletAddress)\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getUserText(provider: Provider, ethName: string, text: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getText(text);\n        })\n        .then((r) => {\n          observer.next(r);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n\n  getUserContentHash(provider: Provider, ethName: string) {\n    return new Observable((observer) => {\n      (provider as any)\n        .getResolver(ethName)\n        .then((resolver) => {\n          return resolver.getContentHash();\n        })\n        .then((r) => {\n          let web2Link = 'https://';\n          if (r.indexOf('ipfs:') > -1) {\n            web2Link += 'ipfs.io/ipfs/' + r.replace('ipfs://', '');\n          } else if (r.indexOf('ipns:') > -1) {\n            web2Link += 'gateway.ipfs.io/ipns/' + r.replace('ipns://', '');\n          }\n          observer.next(web2Link);\n          observer.complete();\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { providers } from 'ethers';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { ValidRPCProvidersEnum } from 'src/app/models/rpc/valid-rpc-providers.enum';\nimport { environment } from '../../../environments/environment';\nimport { UserModel } from '../../models/states/user-interfaces';\nimport { MetamaskService } from '../metamask';\n\ndeclare const localStorage;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserSessionService {\n  constructor(public metamaskService: MetamaskService) {}\n\n  quitUserSession() {\n    localStorage.removeItem('canvas-user-session');\n    localStorage.removeItem('walletconnect');\n    localStorage.removeItem('WALLETCONNECT_DEEPLINK_CHOICE');\n  }\n\n  saveUserSession(userData: UserModel) {\n    localStorage.setItem('canvas-user-session', JSON.stringify(userData));\n  }\n\n  loadUserSession() {\n    return localStorage.getItem('canvas-user-session');\n  }\n\n  getUserSessionProvider(\n    chainId: number,\n    providerData: RPCProviderModel = null\n  ) {\n    let newProvider;\n    if (providerData === null) {\n      newProvider = this.createAlchemyFrontDefaultProvider(chainId);\n    } else if (providerData.type === ValidRPCProvidersEnum.ALCHEMY) {\n      newProvider = this.createAlchemyFrontProvider(\n        chainId,\n        providerData.secret\n      );\n    } else if (providerData.type === ValidRPCProvidersEnum.INFURA) {\n      newProvider = this.createInfuraFrontProvider(\n        chainId,\n        providerData.id,\n        providerData.secret\n      );\n    } else if (providerData.type === ValidRPCProvidersEnum.CUSTOM) {\n      newProvider = this.createJSONFrontProvider(chainId, providerData.url);\n    }\n    return newProvider;\n  }\n\n  getDefaultChainId() {\n    return environment.networks[environment.defaultChain].chainId;\n  }\n\n  createAlchemyFrontDefaultProvider(chain: number) {\n    const providerKeys = JSON.parse(\n      environment.networks[environment.defaultChain].providerKey\n    );\n    const providerKeyPicked = Math.floor(Math.random() * providerKeys.length);\n    return new providers.AlchemyWebSocketProvider(\n      chain,\n      providerKeys[providerKeyPicked]\n    );\n  }\n\n  createAlchemyFrontProvider(chain: number, secret: string) {\n    return new providers.AlchemyWebSocketProvider(chain, secret);\n  }\n\n  createInfuraFrontProvider(chain: number, id: string, secret: string) {\n    return new providers.InfuraProvider(chain, {\n      projectId: id,\n      projectSecret: secret,\n    });\n  }\n\n  createJSONFrontProvider(chain: number, url: string) {\n    return new providers.JsonRpcProvider(url, chain);\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { PagesFacadeService, UserFacadeService } from '../../store/facades';\nimport { MiscUtilsService } from '../misc-utils';\nimport { UserRegistrationModel } from 'src/app/models/states/user-interfaces';\nimport { WalletTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from '@walletconnect/qrcode-modal';\nimport { PagesEnum } from 'src/app/models/states/pages-interfaces';\nimport { UserStoreErrorsEnum } from 'src/app/models/error-enums';\nimport { generalConfigurations } from 'src/app/configurations';\n\nconst globalAny: any = global;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WalletConnectService {\n  constructor(\n    public miscUtils: MiscUtilsService,\n    public userFacadeService: UserFacadeService,\n    public pagesFacade: PagesFacadeService,\n    public userFacade: UserFacadeService,\n    protected ngZone: NgZone\n  ) {\n    const dateNow = new Date().getTime();\n    if (globalAny.walletConnect === undefined) {\n      const connector = new WalletConnect({\n        bridge: 'https://bridge.walletconnect.org',\n        qrcodeModal: QRCodeModal,\n        qrcodeModalOptions: {\n          mobileLinks: generalConfigurations.wallectConnectSupportedWallets,\n          desktopLinks: [],\n        },\n        clientMeta: generalConfigurations.appMeta,\n      });\n      connector.on('connect', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n        const { accounts, chainId } = payload.params[0];\n        const currentChainId = globalAny.chainId;\n        if (currentChainId !== chainId) {\n          this.userFacadeService.removeUser();\n          const wc = globalAny.walletConnect as WalletConnect;\n          wc.killSession();\n          this.userFacade.setErrorState(UserStoreErrorsEnum.CONNECT_ERROR);\n          this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n          return;\n        }\n        this.connect(dateNow, accounts[0]);\n      });\n      connector.on('session_update', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n        const { accounts, chainId } = payload.params[0];\n        const currentChainId = globalAny.chainId;\n        const currentAccount = globalAny.chainAccount;\n        if (\n          currentChainId !== chainId ||\n          currentAccount.walletAddress.toLowerCase() !==\n            accounts[0].toLowerCase()\n        ) {\n          this.userFacadeService.removeUser();\n          const wc = globalAny.walletConnect as WalletConnect;\n          wc.killSession();\n          this.pagesFacade.setNetworkChainCode(parseInt(chainId, 16));\n          this.userFacadeService.removeUser();\n          this.pagesFacade.gotoPageRoute('home', PagesEnum.HOME);\n          return;\n        }\n      });\n      connector.on('disconnect', (error, payload) => {\n        if (error) {\n          throw error;\n        }\n      });\n      globalAny.walletConnect = connector;\n    }\n  }\n\n  createSession() {\n    globalAny.walletConnect.createSession();\n  }\n\n  connect(time: number, account: string) {\n    this.userFacade.registerUser({\n      walletType: WalletTypesEnum.WALLET_CONNECT,\n      address: account,\n    } as UserRegistrationModel);\n  }\n\n  getChainId() {\n    return globalAny.chainId;\n  }\n\n  signPayment(payloadHash: any) {\n    return new Observable((observer) => {\n      globalAny.walletConnect\n        .sendTransaction(payloadHash)\n        .then((tx) => {\n          if (tx === null || tx.length <= 0 || tx === undefined) {\n            observer.next(false);\n            observer.complete();\n            return;\n          }\n          observer.next(tx);\n          observer.complete();\n          return;\n        })\n        .catch((e) => {\n          observer.next(false);\n          observer.complete();\n        });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Wallet, utils } from 'ethers';\nimport { UserFacadeService } from '../../store/facades';\nimport { NonceTypesEnum } from '../../models/states/wallet-interfaces';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WalletService {\n  constructor(public userFacade: UserFacadeService, public http: HttpClient) {}\n\n  produceNonce(type: NonceTypesEnum = NonceTypesEnum.TOKEN): string {\n    const nonceLength = type === NonceTypesEnum.TOKEN ? 32 : 15;\n    const charLibrary =\n      '0123456789' +\n      (type === NonceTypesEnum.TOKEN\n        ? 'ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'\n        : '');\n    let nonceString = '';\n    for (let i = 0; i < nonceLength; i++) {\n      const rnum = Math.floor(Math.random() * charLibrary.length);\n      nonceString += charLibrary.substring(rnum, rnum + 1);\n    }\n    return nonceString;\n  }\n\n  checksumEtheruemAddress(address: string) {\n    try {\n      utils.getAddress(address);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n\n  validateWalletAddress(address: string) {\n    if (this.checksumEtheruemAddress(address) === false) {\n      return false;\n    }\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n      return false;\n    } else if (\n      /^(0x)?[0-9a-f]{40}$/.test(address) ||\n      /^(0x)?[0-9A-F]{40}$/.test(address)\n    ) {\n      return true;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSBookmarkStoreErrorsEnum } from '../../models/error-enums';\nexport const AddOneENSBookmark = '[ENSBookmarkState] Add bookmark.';\nexport const UpdateENSBookmark = '[ENSBookmarkState] Update bookmark.';\nexport const UpsertOneENSBookmark = '[ENSBookmarkState] Upsert one bookmark.';\nexport const UpsertManyENSBookmark = '[ENSBookmarkState] Upsert many bookmark.';\nexport const GetOneENSBookmark = '[ENSBookmarkState] Get one bookmark.';\nexport const GetAllENSBookmark = '[ENSBookmarkState] Get all bookmark.';\nexport const RemoveOneENSBookmark = '[ENSBookmarkState] Remove one bookmark.';\nexport const RemoveManyENSBookmark = '[ENSBookmarkState] Remove many bookmark.';\nexport const RemoveAllENSBookmark = '[ENSBookmarkState] Remove all bookmark.';\nexport const SetENSBookmarkError = '[ENSBookmarkState] ENSBookmark error set.';\n\nexport class ENSBookmarkErrorSet implements Action {\n  readonly type = SetENSBookmarkError;\n  constructor(public payload: ENSBookmarkStoreErrorsEnum) {}\n}\n\nexport class ENSBookmarkAddOne implements Action {\n  readonly type = AddOneENSBookmark;\n  constructor(public payload: ENSDomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSBookmarkUpsertOne implements Action {\n  readonly type = UpsertOneENSBookmark;\n  constructor(public payload: ENSDomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSBookmarkUpsertMany implements Action {\n  readonly type = UpsertManyENSBookmark;\n  constructor(public payload: ENSDomainMetadataModel[], public toSave = true) {}\n}\n\nexport class ENSBookmarkGetOne implements Action {\n  readonly type = GetOneENSBookmark;\n  constructor(public payload: string) {}\n}\n\nexport class ENSBookmarkGetAll implements Action {\n  readonly type = GetAllENSBookmark;\n  constructor(public payload: string) {}\n}\n\nexport class ENSBookmarkRemoveOne implements Action {\n  readonly type = RemoveOneENSBookmark;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class ENSBookmarkRemoveMany implements Action {\n  readonly type = RemoveManyENSBookmark;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class ENSBookmarkRemoveAll implements Action {\n  readonly type = RemoveAllENSBookmark;\n  constructor(public toSave = true) {}\n}\n\nexport class ENSBookmarkUpdate implements Action {\n  readonly type = UpdateENSBookmark;\n  constructor(public payload: ENSDomainMetadataModel, public toSave = true) {}\n}\n\nexport type ENSBookmarkActions =\n  | ENSBookmarkAddOne\n  | ENSBookmarkRemoveOne\n  | ENSBookmarkRemoveMany\n  | ENSBookmarkGetAll\n  | ENSBookmarkGetOne\n  | ENSBookmarkUpsertOne\n  | ENSBookmarkUpsertMany\n  | ENSBookmarkErrorSet\n  | ENSBookmarkRemoveAll\n  | ENSBookmarkUpdate;\n","import { Action } from '@ngrx/store';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSRegistrationStoreErrorsEnum } from '../../models/error-enums';\nexport const AddOneENSRegistration = '[ENSRegistrationState] Add registration.';\nexport const UpdateENSRegistration =\n  '[ENSRegistrationState] Update registration.';\nexport const UpsertOneENSRegistration =\n  '[ENSRegistrationState] Upsert one registration.';\nexport const UpsertManyENSRegistration =\n  '[ENSRegistrationState] Upsert many registration.';\nexport const GetOneENSRegistration =\n  '[ENSRegistrationState] Get one registration.';\nexport const GetAllENSRegistration =\n  '[ENSRegistrationState] Get all registration.';\nexport const RemoveOneENSRegistration =\n  '[ENSRegistrationState] Remove one registration.';\nexport const RemoveManyENSRegistration =\n  '[ENSRegistrationState] Remove many registration.';\nexport const RemoveAllENSRegistration =\n  '[ENSRegistrationState] Remove all registration.';\nexport const SetENSRegistrationError =\n  '[ENSRegistrationState] ENSRegistration error set.';\n\nexport class ENSRegistrationErrorSet implements Action {\n  readonly type = SetENSRegistrationError;\n  constructor(public payload: ENSRegistrationStoreErrorsEnum) {}\n}\n\nexport class ENSRegistrationAddOne implements Action {\n  readonly type = AddOneENSRegistration;\n  constructor(public payload: ENSDomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSRegistrationUpsertOne implements Action {\n  readonly type = UpsertOneENSRegistration;\n  constructor(public payload: ENSDomainMetadataModel, public toSave = true) {}\n}\n\nexport class ENSRegistrationUpsertMany implements Action {\n  readonly type = UpsertManyENSRegistration;\n  constructor(public payload: ENSDomainMetadataModel[], public toSave = true) {}\n}\n\nexport class ENSRegistrationGetOne implements Action {\n  readonly type = GetOneENSRegistration;\n  constructor(public payload: string) {}\n}\n\nexport class ENSRegistrationGetAll implements Action {\n  readonly type = GetAllENSRegistration;\n  constructor(public payload: string) {}\n}\n\nexport class ENSRegistrationRemoveOne implements Action {\n  readonly type = RemoveOneENSRegistration;\n  constructor(public payload: string, public toSave = true) {}\n}\n\nexport class ENSRegistrationRemoveMany implements Action {\n  readonly type = RemoveManyENSRegistration;\n  constructor(public payload: string[], public toSave = true) {}\n}\n\nexport class ENSRegistrationRemoveAll implements Action {\n  readonly type = RemoveAllENSRegistration;\n  constructor() {}\n}\n\nexport class ENSRegistrationUpdate implements Action {\n  readonly type = UpdateENSRegistration;\n  constructor(public payload: ENSDomainMetadataModel, public toSave = true) {}\n}\n\nexport type ENSRegistrationActions =\n  | ENSRegistrationAddOne\n  | ENSRegistrationRemoveOne\n  | ENSRegistrationRemoveMany\n  | ENSRegistrationGetAll\n  | ENSRegistrationGetOne\n  | ENSRegistrationUpsertOne\n  | ENSRegistrationUpsertMany\n  | ENSRegistrationErrorSet\n  | ENSRegistrationRemoveAll\n  | ENSRegistrationUpdate;\n","import { Action } from \"@ngrx/store\";\nimport { NavigatorButtonsStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const SetNavigatorButtonsState =\n  \"[NavigatorButtonsState] New state set.\";\nexport const GetNavigatorButtonsState =\n  \"[NavigatorButtonsState] Latest state retrieved.\";\n\nexport class NavigatorButtonsStateSet implements Action {\n  readonly type = SetNavigatorButtonsState;\n  constructor(public payload: NavigatorButtonsStateModel) {}\n}\n\nexport class NavigatorButtonsStateGet implements Action {\n  readonly type = GetNavigatorButtonsState;\n  constructor() {}\n}\n\nexport type NavigatorButtonActions =\n  | NavigatorButtonsStateSet\n  | NavigatorButtonsStateGet;\n","import { Action } from \"@ngrx/store\";\nimport { NavigatorStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const SetNavigatorState = \"[NavigatorState] New state set.\";\nexport const SetNavigatorStateDisabledButtons =\n  \"[NavigatorState] Disabled buttons set.\";\nexport const GetNavigatorState = \"[NavigatorState] Latest state retrieved.\";\n\nexport class NavigatorStateSet implements Action {\n  readonly type = SetNavigatorState;\n  constructor(public payload: NavigatorStateModel) {}\n}\n\nexport class NavigatorStateGet implements Action {\n  readonly type = GetNavigatorState;\n  constructor() {}\n}\n\nexport type NavigatorActions = NavigatorStateSet | NavigatorStateGet;\n","import { Action } from '@ngrx/store';\nimport { IpfsErrorsEnum } from 'src/app/models/error-enums';\nimport { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport {\n  GotoPageRouteActionPayloadModel,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\n\nexport const ShowLoadingProgressBarOnLoad = '[PagesState] Spinner dialog set.';\nexport const HideLoadingProgressBarOnLoadFinished =\n  '[PagesState] Spinner dialog unset.';\nexport const SetPagesCriticalError = '[PagesState] critical error set.';\nexport const SetPagesPageSlide = '[PagesState] New page slide set.';\nexport const SetPagesState = '[PagesState] New state set.';\nexport const SetPageIpfsErrors = '[PagesState] ipfs error state set.';\nexport const SetPageIpfsState = '[PagesState] ipfs state set.';\nexport const SetPageChainCode = '[PagesState] chain code set.';\nexport const SetPagesNewPageState = '[PagesState] New state set.';\nexport const SetPagesNetworkState = '[PagesState] New network state set.';\nexport const SetPagesVisibility = '[PagesState] visibility state set.';\nexport const SetRPCProvider = '[PagesState] rpc provider set.';\nexport const SetPagesNetworkStateOffline =\n  '[PagesState] Offline network state procedure invoke.';\nexport const GetPagesState = '[PagesState] Latest state retrieved.';\nexport const GotoPageRoute = '[PagesState] Going to page route.';\n\nexport class PagesSetRPCProvider implements Action {\n  readonly type = SetRPCProvider;\n  constructor(public payload: RPCProviderModel) {}\n}\n\nexport class PagesSetVisibility implements Action {\n  readonly type = SetPagesVisibility;\n  constructor(public payload: boolean) {}\n}\n\nexport class PagesSetCriticalError implements Action {\n  readonly type = SetPagesCriticalError;\n  constructor(public payload: boolean, public redirect = true) {}\n}\n\nexport class PagesSetIpfsError implements Action {\n  readonly type = SetPageIpfsErrors;\n  constructor(public payload: IpfsErrorsEnum) {}\n}\n\nexport class PagesSetIpfsState implements Action {\n  readonly type = SetPageIpfsState;\n  constructor(public payload: IpfsStatesEnum) {}\n}\n\nexport class PagesShowLoadingProgressBarOnLoad implements Action {\n  readonly type = ShowLoadingProgressBarOnLoad;\n  constructor() {}\n}\n\nexport class PagesHideLoadingProgressBarOnLoadFinished implements Action {\n  readonly type = HideLoadingProgressBarOnLoadFinished;\n  constructor() {}\n}\n\nexport class PagesSetChainCode implements Action {\n  readonly type = SetPageChainCode;\n  constructor(public payload: number, public firstTimeSet = false) {}\n}\n\nexport class PagesSetPageSlide implements Action {\n  readonly type = SetPagesPageSlide;\n  constructor(public payload: number) {}\n}\n\nexport class PagesStateSet implements Action {\n  readonly type = SetPagesState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNewPageStateSet implements Action {\n  readonly type = SetPagesNewPageState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNetworkStateSet implements Action {\n  readonly type = SetPagesNetworkState;\n  constructor(public payload: PagesStateModel) {}\n}\n\nexport class PagesNetworkOfflineStateInvoke implements Action {\n  readonly type = SetPagesNetworkStateOffline;\n  constructor() {}\n}\n\nexport class PagesStateGet implements Action {\n  readonly type = GetPagesState;\n  constructor() {}\n}\n\nexport class PageGotoRoute implements Action {\n  readonly type = GotoPageRoute;\n  constructor(public payload: GotoPageRouteActionPayloadModel) {}\n}\n\nexport type PagesActions =\n  | PagesSetRPCProvider\n  | PagesSetChainCode\n  | PagesSetIpfsError\n  | PagesSetIpfsState\n  | PagesSetPageSlide\n  | PagesHideLoadingProgressBarOnLoadFinished\n  | PagesShowLoadingProgressBarOnLoad\n  | PagesStateSet\n  | PagesStateGet\n  | PagesNewPageStateSet\n  | PagesNetworkOfflineStateInvoke\n  | PageGotoRoute\n  | PagesNetworkStateSet\n  | PagesSetCriticalError;\n","import { Action } from '@ngrx/store';\nimport { PaymentStoreErrorsEnum } from '../../models/error-enums';\nimport { PaymentModel } from '../../models/states/payment-interfaces/payment.model';\nexport const PaymentCheckFulfilled =\n  '[PaymentState] Payment checking status if fulfilled.';\nexport const PaymentTriggerStatusChecking =\n  '[PaymentState] Payment checking status triggered.';\nexport const CancelledPayment = '[PaymentState] payment cancelled.';\nexport const AddOnePayment = '[PaymentState] Add payment.';\nexport const UpdatePayment = '[PaymentState] Update payment.';\nexport const UpsertOnePayment = '[PaymentState] Upsert one payment.';\nexport const UpsertManyPayment = '[PaymentState] Upsert many payment.';\nexport const GetOnePayment = '[PaymentState] Get one payment.';\nexport const GetAllPayment = '[PaymentState] Get all payment.';\nexport const SetEthUSDRates = '[PaymentState] ETHUSD rate set.';\nexport const RemoveOnePayment = '[PaymentState] Remove one payment.';\nexport const RemoveManyPayment = '[PaymentState] Remove many payment.';\nexport const RemoveAllPayment = '[PaymentState] Remove all payment.';\nexport const ArchiveAllPayment = '[PaymentState] Archive all payment.';\nexport const SetPaymentError = '[PaymentState] Payment error set.';\n\nexport class PaymentCancelled implements Action {\n  readonly type = CancelledPayment;\n  constructor() {}\n}\n\nexport class PaymentArchiveAll implements Action {\n  readonly type = ArchiveAllPayment;\n  constructor() {}\n}\n\nexport class PaymentETHUSDRatesSet implements Action {\n  readonly type = SetEthUSDRates;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentErrorSet implements Action {\n  readonly type = SetPaymentError;\n  constructor(public payload: PaymentStoreErrorsEnum) {}\n}\n\nexport class PaymentAddOne implements Action {\n  readonly type = AddOnePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpsertOne implements Action {\n  readonly type = UpsertOnePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpsertMany implements Action {\n  readonly type = UpsertManyPayment;\n  constructor(public payload: PaymentModel[]) {}\n}\n\nexport class PaymentGetOne implements Action {\n  readonly type = GetOnePayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentGetAll implements Action {\n  readonly type = GetAllPayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentRemoveOne implements Action {\n  readonly type = RemoveOnePayment;\n  constructor(public payload: string) {}\n}\n\nexport class PaymentRemoveMany implements Action {\n  readonly type = RemoveManyPayment;\n  constructor(public payload: string[]) {}\n}\n\nexport class PaymentRemoveAll implements Action {\n  readonly type = RemoveAllPayment;\n  constructor() {}\n}\n\nexport class CheckPaymentFulfilled implements Action {\n  readonly type = PaymentCheckFulfilled;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport class PaymentUpdate implements Action {\n  readonly type = UpdatePayment;\n  constructor(public payload: PaymentModel) {}\n}\n\nexport type PaymentActions =\n  | PaymentCancelled\n  | PaymentAddOne\n  | PaymentRemoveOne\n  | PaymentRemoveMany\n  | PaymentGetAll\n  | PaymentGetOne\n  | PaymentUpsertOne\n  | PaymentUpsertMany\n  | PaymentErrorSet\n  | PaymentRemoveAll\n  | PaymentETHUSDRatesSet\n  | CheckPaymentFulfilled\n  | PaymentUpdate\n  | PaymentArchiveAll;\n","import { Action } from \"@ngrx/store\";\nimport { UserStoreErrorsEnum } from \"../../models/error-enums\";\nimport {\n  UserModel,\n  UserRegistrationModel,\n} from \"../../models/states/user-interfaces\";\n\nexport const SetUserState = \"[UserState] New state set.\";\nexport const SetUserError = \"[UserState] An error has occured.\";\nexport const GetUserState = \"[UserState] Latest state retrieved.\";\nexport const RemoveUserError = \"[UserState] Error removed.\";\nexport const RemoveUserState =\n  \"[UserState] Latest state replaced (with Empty).\";\nexport const RemoveUser = \"[UserState] Latest user replaced (with Empty).\";\nexport const AddUser = \"[UserState] New user added.\";\nexport const UpdateUser = \"[UserState] User updated added.\";\nexport const RegisterUser = \"[UserState] New user registration.\";\n\nexport class UserErrorSet implements Action {\n  readonly type = SetUserError;\n  constructor(public payload: UserStoreErrorsEnum) {}\n}\n\nexport class UserUpdate implements Action {\n  readonly type = UpdateUser;\n  constructor(public payload: UserModel) {}\n}\n\nexport class UserStateSet implements Action {\n  readonly type = SetUserState;\n  constructor(public payload: UserModel) {}\n}\n\nexport class UserStateGet implements Action {\n  readonly type = GetUserState;\n  constructor(public payload: number) {}\n}\n\nexport class UserStateRemove implements Action {\n  readonly type = RemoveUserState;\n  constructor() {}\n}\n\nexport class UserErrorRemove implements Action {\n  readonly type = RemoveUserError;\n  constructor() {}\n}\n\nexport class UserRemove implements Action {\n  readonly type = RemoveUser;\n  constructor() {}\n}\n\nexport class UserRegister implements Action {\n  readonly type = RegisterUser;\n  constructor(public payload: UserRegistrationModel) {}\n}\n\nexport class UserAdd implements Action {\n  readonly type = AddUser;\n  constructor(public payload: UserModel) {}\n}\n\nexport type UserActions =\n  | UserStateSet\n  | UserUpdate\n  | UserErrorSet\n  | UserStateGet\n  | UserStateRemove\n  | UserErrorRemove\n  | UserRemove\n  | UserRegister\n  | UserAdd;\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { getCurrentUserState, getCurrentUser } from '../selectors';\nimport {\n  UserStateSet,\n  UserStateRemove,\n  UserAdd,\n  UserErrorRemove,\n  UserErrorSet,\n  UserUpdate,\n  UserRemove,\n  UserRegister,\n} from '../actions';\nimport {\n  UserModel,\n  UserRegistrationModel,\n  UserStateModel,\n} from '../../models/states/user-interfaces';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFacadeService {\n  userState$: Observable<UserStateModel>;\n  user$: Observable<UserModel>;\n\n  constructor(public store: Store<UserStateModel>) {\n    this.userState$ = this.store.pipe(select(getCurrentUserState));\n    this.user$ = this.store.pipe(select(getCurrentUser));\n  }\n\n  registerUser(userData: UserRegistrationModel) {\n    this.store.dispatch(new UserRegister(userData));\n  }\n\n  newUserState(userState: UserModel) {\n    this.store.dispatch(new UserStateSet(userState));\n  }\n\n  removeUserState() {\n    this.store.dispatch(new UserStateRemove());\n  }\n\n  removeUser() {\n    this.store.dispatch(new UserRemove());\n  }\n\n  removeUserStateError() {\n    this.store.dispatch(new UserErrorRemove());\n  }\n\n  setErrorState(error: UserStoreErrorsEnum) {\n    this.store.dispatch(new UserErrorSet(error));\n  }\n\n  addUser(userAddData: UserModel) {\n    this.store.dispatch(new UserAdd(userAddData));\n  }\n\n  updateUser(userData: UserModel) {\n    this.store.dispatch(new UserUpdate(userData));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\nimport {\n  getEthUsdPrice,\n  getPayments,\n  getPaymentState,\n  getPaymentStateError,\n  getPaymentStateLoading,\n  getPendingPayments,\n  selectPayment,\n} from '../selectors';\nimport {\n  PaymentErrorSet,\n  PaymentUpdate,\n  PaymentUpsertOne,\n  PaymentRemoveOne,\n  PaymentRemoveMany,\n  PaymentAddOne,\n  ArchiveAllPayment,\n  PaymentArchiveAll,\n  PaymentETHUSDRatesSet,\n  PaymentRemoveAll,\n} from '../actions';\nimport { PaymentStoreErrorsEnum } from '../../models/error-enums';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentFacadeService {\n  paymentState$: Observable<PaymentStateModel>;\n  pendingPayments$: Observable<PaymentModel[]>;\n  approvablePayments$: Observable<PaymentModel[]>;\n  paymentsStored$: Observable<PaymentModel[]>;\n  paymentsStoreError$: Observable<PaymentStoreErrorsEnum>;\n  paymentsStoreLoading$: Observable<boolean>;\n  ethUsdPrice$: Observable<string>;\n\n  constructor(protected store: Store<PaymentModel>) {\n    this.paymentState$ = this.store.pipe(select(getPaymentState));\n    this.pendingPayments$ = this.store.pipe(select(getPendingPayments));\n    this.paymentsStoreError$ = this.store.pipe(select(getPaymentStateError));\n    this.paymentsStoreLoading$ = this.store.pipe(\n      select(getPaymentStateLoading)\n    );\n    this.ethUsdPrice$ = this.store.pipe(select(getEthUsdPrice));\n  }\n\n  setEthUsdRate(usdRate: string) {\n    this.store.dispatch(new PaymentETHUSDRatesSet(usdRate as string));\n  }\n\n  createPayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentAddOne(payment));\n  }\n\n  removeAllPayment() {\n    this.store.dispatch(new PaymentRemoveAll());\n  }\n\n  removePayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentRemoveOne(payment.paymentSerial));\n  }\n\n  removePayments(payments: PaymentModel[]) {\n    this.store.dispatch(\n      new PaymentRemoveMany(payments.map((n) => n.paymentSerial))\n    );\n  }\n\n  archiveAllPayment() {\n    this.store.dispatch(new PaymentArchiveAll());\n  }\n\n  upsertPayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentUpsertOne(payment));\n  }\n\n  updatePayment(payment: PaymentModel) {\n    this.store.dispatch(new PaymentUpdate(payment));\n  }\n\n  getPayment(paymentId: number) {\n    return this.store.pipe(select(selectPayment(paymentId)));\n  }\n\n  getPayments() {\n    return this.store.pipe(select(getPayments));\n  }\n\n  removePaymentStateError() {\n    this.store.dispatch(new PaymentErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSBookmarkStateModel } from 'src/app/models/states/ens-bookmark-interfaces';\nimport {\n  ENSBookmarkAddOne,\n  ENSBookmarkErrorSet,\n  ENSBookmarkRemoveAll,\n  ENSBookmarkRemoveMany,\n  ENSBookmarkRemoveOne,\n  ENSBookmarkUpdate,\n  ENSBookmarkUpsertMany,\n  ENSBookmarkUpsertOne,\n} from '../actions';\nimport {\n  getENSBookmarks,\n  getENSBookmarkState,\n  selectENSBookmark,\n} from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ENSBookmarkFacadeService {\n  getENSBookmarkState$: Observable<ENSBookmarkStateModel>;\n\n  constructor(public store: Store<ENSBookmarkStateModel>) {\n    this.getENSBookmarkState$ = this.store.pipe(select(getENSBookmarkState));\n  }\n  addBookmark(bookmark: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkAddOne(bookmark));\n  }\n\n  removeBookmark(bookmark: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkRemoveOne(bookmark.id));\n  }\n\n  removeAllBookmarks() {\n    this.store.dispatch(new ENSBookmarkRemoveAll());\n  }\n\n  removeBookmarks(bookmark: ENSDomainMetadataModel[]) {\n    this.store.dispatch(new ENSBookmarkRemoveMany(bookmark.map((n) => n.id)));\n  }\n\n  upsertBookmark(bookmark: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkUpsertOne(bookmark));\n  }\n\n  upsertAllBookmark(bookmarks: ENSDomainMetadataModel[]) {\n    this.store.dispatch(new ENSBookmarkUpsertMany(bookmarks));\n  }\n\n  updateBookmark(bookmark: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSBookmarkUpdate(bookmark));\n  }\n\n  getBookmark(bookmarkId: number) {\n    return this.store.pipe(select(selectENSBookmark(bookmarkId)));\n  }\n\n  getBookmarks() {\n    return this.store.pipe(select(getENSBookmarks));\n  }\n\n  removeBookmarkStateError() {\n    this.store.dispatch(new ENSBookmarkErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSRegistrationStateModel } from 'src/app/models/states/ens-registration-interfaces';\nimport {\n  ENSRegistrationAddOne,\n  ENSRegistrationErrorSet,\n  ENSRegistrationRemoveAll,\n  ENSRegistrationRemoveMany,\n  ENSRegistrationRemoveOne,\n  ENSRegistrationUpdate,\n  ENSRegistrationUpsertMany,\n  ENSRegistrationUpsertOne,\n} from '../actions';\nimport {\n  getENSRegistrations,\n  getENSRegistrationState,\n  selectENSRegistration,\n} from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ENSRegistrationFacadeService {\n  getENSRegistrationState$: Observable<ENSRegistrationStateModel>;\n\n  constructor(public store: Store<ENSRegistrationStateModel>) {\n    this.getENSRegistrationState$ = this.store.pipe(\n      select(getENSRegistrationState)\n    );\n  }\n\n  addRegistration(registration: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationAddOne(registration));\n  }\n\n  removeRegistration(registration: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationRemoveOne(registration.id));\n  }\n\n  removeRegistrations(registration: ENSDomainMetadataModel[]) {\n    this.store.dispatch(\n      new ENSRegistrationRemoveMany(registration.map((n) => n.id))\n    );\n  }\n\n  removeAllRegistrations() {\n    this.store.dispatch(new ENSRegistrationRemoveAll());\n  }\n\n  upsertRegistration(registration: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationUpsertOne(registration));\n  }\n\n  upsertAllRegistration(registrations: ENSDomainMetadataModel[]) {\n    this.store.dispatch(new ENSRegistrationUpsertMany(registrations));\n  }\n\n  updateRegistration(registration: ENSDomainMetadataModel) {\n    this.store.dispatch(new ENSRegistrationUpdate(registration));\n  }\n\n  getRegistration(registrationId: number) {\n    return this.store.pipe(select(selectENSRegistration(registrationId)));\n  }\n\n  getRegistrations() {\n    return this.store.pipe(select(getENSRegistrations));\n  }\n\n  removeRegistrationStateError() {\n    this.store.dispatch(new ENSRegistrationErrorSet(undefined));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { NavigatorButtonsStateModel } from '../../models/states/navigator-interfaces';\nimport { NavigatorButtonsStateSet } from '../actions';\nimport { initialNavigatorButtonsState } from '../reducers';\nimport { getCurrentNavigatorButtonsState } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigatorButtonsFacadeService {\n  disabledButtonnavigatorState$: Observable<NavigatorButtonsStateModel>;\n\n  constructor(public store: Store<NavigatorButtonsStateModel>) {\n    this.disabledButtonnavigatorState$ = this.store.pipe(\n      select(getCurrentNavigatorButtonsState)\n    );\n  }\n\n  newNavigatorButtonsState(navigatorState: NavigatorButtonsStateModel) {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorButtonsStateSet(navigatorState));\n    }, 100);\n  }\n\n  resetNavigatorButtonState() {\n    setTimeout(() => {\n      this.store.dispatch(\n        new NavigatorButtonsStateSet(initialNavigatorButtonsState)\n      );\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\nimport { NavigatorStateSet } from '../actions';\nimport { initialNavigatorState } from '../reducers';\nimport { getCurrentNavigatorState } from '../selectors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigatorFacadeService {\n  navigatorState$: Observable<NavigatorStateModel>;\n\n  constructor(public store: Store<NavigatorStateModel>) {\n    this.navigatorState$ = this.store.pipe(select(getCurrentNavigatorState));\n  }\n\n  newNavigatorState(navigatorState: NavigatorStateModel) {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorStateSet(navigatorState));\n    });\n  }\n\n  resetNavigatorState() {\n    setTimeout(() => {\n      this.store.dispatch(new NavigatorStateSet(initialNavigatorState));\n    });\n  }\n}\n","import { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { NavigatorFacadeService } from './navigator.facades';\nimport { NavigatorButtonsFacadeService } from './navigator-buttons.facades';\nimport {\n  getCriticalErrorState,\n  getCurrentErrorCode,\n  getCurrentPageLoadState,\n  getCurrentPagesState,\n  getCurrentPageVisibility,\n  getIpfsError,\n  getIpfsState,\n} from '../selectors';\nimport {\n  PageGotoRoute,\n  PagesNetworkOfflineStateInvoke,\n  PagesNetworkStateSet,\n  PagesNewPageStateSet,\n  PagesShowLoadingProgressBarOnLoad,\n  PagesHideLoadingProgressBarOnLoadFinished,\n  PagesSetPageSlide,\n  PagesSetChainCode,\n  PagesSetIpfsError,\n  PagesSetIpfsState,\n  PagesSetCriticalError,\n  PagesSetRPCProvider,\n} from '../actions';\nimport {\n  GotoPageRouteActionPayloadModel,\n  PagesEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from '../../../environments/environment';\nimport { IpfsErrorsEnum } from 'src/app/models/error-enums';\nimport { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { GenericDialogComponent } from 'src/app/widgets/generic-dialog';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PagesFacadeService {\n  pagesState$: Observable<PagesStateModel>;\n  pagesIpfsState$: Observable<IpfsStatesEnum>;\n  pagesIpfsError$: Observable<IpfsErrorsEnum>;\n  pageErrorCode$: Observable<string>;\n  pageLoadingState$: Observable<boolean>;\n  pageCritiaclError$: Observable<boolean>;\n  pageVisibility$: Observable<boolean>;\n\n  constructor(\n    public router: Router,\n    public store: Store<PagesStateModel>,\n    public navigatorFacade: NavigatorFacadeService,\n    public navigatorButtonFacade: NavigatorButtonsFacadeService,\n    public dialog: MatDialog,\n    public ngZone: NgZone\n  ) {\n    this.pagesState$ = this.store.pipe(select(getCurrentPagesState));\n    this.pageErrorCode$ = this.store.pipe(select(getCurrentErrorCode));\n    this.pagesIpfsState$ = this.store.pipe(select(getIpfsState));\n    this.pagesIpfsError$ = this.store.pipe(select(getIpfsError));\n    this.pageLoadingState$ = this.store.pipe(select(getCurrentPageLoadState));\n    this.pageCritiaclError$ = this.store.pipe(select(getCriticalErrorState));\n    this.pageVisibility$ = this.store.pipe(select(getCurrentPageVisibility));\n  }\n\n  showLoadingProgressBar() {\n    this.store.dispatch(new PagesShowLoadingProgressBarOnLoad());\n  }\n\n  showNotEnabledToolDialog() {\n    this.dialog.open(GenericDialogComponent, {\n      data: {\n        titleText: 'HEADER.FEATURE_DISABLED',\n        subText: 'LABELS.FEATURE_DISABLED',\n      },\n      panelClass: 'cos-generic-dialog',\n    });\n  }\n\n  setPageCriticalError(errorOccured: boolean, redirect = true) {\n    this.store.dispatch(new PagesSetCriticalError(errorOccured, redirect));\n  }\n\n  setRpcProvider(providerData: RPCProviderModel) {\n    this.store.dispatch(new PagesSetRPCProvider(providerData));\n  }\n\n  setIpfsError(error: IpfsErrorsEnum) {\n    this.store.dispatch(new PagesSetIpfsError(error));\n  }\n\n  setIpfsState(state: IpfsStatesEnum) {\n    this.store.dispatch(new PagesSetIpfsState(state));\n  }\n\n  hideLoadingProgressBar() {\n    this.store.dispatch(new PagesHideLoadingProgressBarOnLoadFinished());\n  }\n\n  newPagesState(pagesState: PagesStateModel) {\n    this.store.dispatch(new PagesNewPageStateSet(pagesState));\n    this.navigatorFacade.resetNavigatorState();\n  }\n\n  newNetworkState(networkState: PagesStateModel) {\n    this.store.dispatch(new PagesNetworkStateSet(networkState));\n  }\n\n  setNetworkChainCode(chainCode: number, firstTimeSet = false) {\n    this.store.dispatch(new PagesSetChainCode(chainCode, firstTimeSet));\n  }\n\n  setChainCodeByNetworkName(networkName: string, firstTimeSet = false) {\n    const networkData = environment.networks[networkName];\n    const chainCode = networkData.chainId;\n    this.store.dispatch(new PagesSetChainCode(chainCode, firstTimeSet));\n  }\n\n  triggerNetworkOfflineDialog() {\n    this.store.dispatch(new PagesNetworkOfflineStateInvoke());\n  }\n\n  setPageSlide(pageSlide: number) {\n    this.store.dispatch(new PagesSetPageSlide(pageSlide));\n  }\n\n  gotoPageRoute(pageRoute: string, toPageId: PagesEnum) {\n    this.store.dispatch(\n      new PageGotoRoute({\n        route: pageRoute,\n        pageId: toPageId,\n      } as GotoPageRouteActionPayloadModel)\n    );\n    this.navigatorFacade.resetNavigatorState();\n    this.navigatorButtonFacade.resetNavigatorButtonState();\n  }\n}\n","import { NavigatorButtonsStateModel } from \"../../models/states/navigator-interfaces\";\nimport { GetNavigatorButtonsState, SetNavigatorButtonsState } from \"../actions\";\n\nexport const initialNavigatorButtonsState: NavigatorButtonsStateModel = {\n  disabledButtons: undefined,\n};\n\nexport function NavigatorButtonsReducers(\n  state: NavigatorButtonsStateModel = initialNavigatorButtonsState,\n  action: any\n) {\n  switch (action.type) {\n    case SetNavigatorButtonsState: {\n      return action.payload;\n    }\n\n    case GetNavigatorButtonsState: {\n      return state;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { NavigatorStateModel } from \"../../models/states/navigator-interfaces\";\nimport { GetNavigatorState, SetNavigatorState } from \"../actions\";\n\nexport const initialNavigatorState: NavigatorStateModel = {\n  navigatorActiveButtonId: undefined,\n  navigatorData: undefined,\n};\n\nexport function NavigatorReducers(\n  state: NavigatorStateModel = initialNavigatorState,\n  action: any\n) {\n  switch (action.type) {\n    case SetNavigatorState: {\n      return action.payload;\n    }\n\n    case GetNavigatorState: {\n      return state;\n    }\n\n    default:\n      return state;\n  }\n}\n","export enum IpfsStatesEnum {\n  IPFS_READY = 'IPFS.READY',\n  IPFS_INITIALISING = 'IPFS.INITIALISING',\n  IPFS_FINDING = 'IPFS.FINDING_PEERS',\n  IPFS_FAILED = 'IPFS.FAILED',\n  IPFS_PUBLISHING = 'IPFS.PUBLISHING',\n}\n","import { IpfsStatesEnum } from 'src/app/models/ipfs';\nimport { generalConfigurations } from '../../configurations';\nimport { PagesStateModel } from '../../models/states/pages-interfaces';\nimport {\n  GetPagesState,\n  GotoPageRoute,\n  HideLoadingProgressBarOnLoadFinished,\n  SetPageChainCode,\n  SetPageIpfsErrors,\n  SetPageIpfsState,\n  SetPagesCriticalError,\n  SetPagesNewPageState,\n  SetPagesPageSlide,\n  SetPagesState,\n  SetPagesVisibility,\n  SetRPCProvider,\n  ShowLoadingProgressBarOnLoad,\n} from '../actions';\n\nconst initialPagesState: PagesStateModel = {\n  optionalProvider: undefined,\n  pageVisibility: true,\n  criticalErrorOccured: false,\n  currentPageId: generalConfigurations.defaultPage,\n  currentPageSlide: 0,\n  errorCode: undefined,\n  ipfsError: undefined,\n  ipfsReady: IpfsStatesEnum.IPFS_INITIALISING,\n  networkStatus: undefined,\n  networkChainCode: undefined,\n  isPageLoading: false,\n};\n\nexport function PagesReducers(\n  state: PagesStateModel = initialPagesState,\n  action: any\n) {\n  switch (action.type) {\n    case SetPagesState: {\n      const newState = {\n        ...state,\n        currentPageId:\n          'currentPageId' in action.payload\n            ? action.payload.currentPageId\n            : state.currentPageId,\n        networkStatus:\n          'networkStatus' in action.payload\n            ? action.payload.networkStatus\n            : state.networkStatus,\n        networkChainCode:\n          'networkChainCode' in action.payload\n            ? action.payload.networkChainCode\n            : state.networkChainCode,\n        currentPageSlide: state.currentPageSlide,\n        errorCode:\n          'errorCode' in action.payload ? action.payload.errorCode : undefined,\n      };\n      return newState;\n    }\n\n    case SetRPCProvider: {\n      const newState = {\n        ...state,\n        optionalProvider: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesVisibility: {\n      const newState = {\n        ...state,\n        pageVisibility: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesCriticalError: {\n      const newState = {\n        ...state,\n        criticalErrorOccured: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPageIpfsErrors: {\n      const newState = {\n        ...state,\n        ipfsError: action.payload,\n        ipfsReady: IpfsStatesEnum.IPFS_FAILED,\n      };\n      return newState;\n    }\n\n    case SetPageIpfsState: {\n      const newState = {\n        ...state,\n        ipfsReady: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesPageSlide: {\n      const newState = {\n        ...state,\n        currentPageSlide: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPagesNewPageState: {\n      const newState = {\n        ...state,\n        pageId: action.payload.currentPageId,\n        currentPageSlide: state.currentPageSlide,\n      };\n      return newState;\n    }\n\n    case SetPagesPageSlide: {\n      const newState = {\n        ...state,\n        currentPageSlide: action.payload,\n      };\n      return newState;\n    }\n\n    case SetPageChainCode: {\n      const newState = {\n        ...state,\n        networkChainCode: action.payload,\n      };\n      return newState;\n    }\n\n    case ShowLoadingProgressBarOnLoad: {\n      const newState = {\n        ...state,\n        isPageLoading: true,\n      };\n      return newState;\n    }\n\n    case HideLoadingProgressBarOnLoadFinished: {\n      const newState = {\n        ...state,\n        isPageLoading: false,\n      };\n      return newState;\n    }\n\n    case GetPagesState: {\n      return state;\n    }\n\n    case GotoPageRoute: {\n      return {\n        ...state,\n        currentPageId: action.payload.pageId,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { UserModel, UserStateModel } from \"../../models/states/user-interfaces\";\nimport {\n  AddUser,\n  GetUserState,\n  RegisterUser,\n  RemoveUser,\n  RemoveUserError,\n  RemoveUserState,\n  SetUserError,\n  SetUserState,\n  UpdateUser,\n} from \"../actions\";\n\nconst initialUserState: UserStateModel = {\n  error: undefined,\n  loading: false,\n  success: undefined,\n  user: {} as UserModel,\n};\n\nexport function UserReducers(\n  state: UserStateModel = initialUserState,\n  action: any\n) {\n  switch (action.type) {\n    case SetUserError: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    }\n\n    case SetUserState: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case AddUser: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateUser: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n\n    case GetUserState: {\n      const newState = {\n        ...state,\n      };\n      return newState;\n    }\n\n    case RemoveUserError: {\n      return {\n        ...state,\n        loading: false,\n        error: undefined,\n      };\n    }\n\n    case RegisterUser: {\n      return {\n        ...state,\n        loading: true,\n        error: undefined,\n      };\n    }\n\n    case RemoveUser: {\n      return {\n        ...state,\n        user: {},\n      };\n    }\n\n    case RemoveUserState: {\n      return initialUserState;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\nimport {\n  UpsertOnePayment,\n  UpsertManyPayment,\n  RemoveOnePayment,\n  RemoveManyPayment,\n  RemoveAllPayment,\n  SetPaymentError,\n  UpdatePayment,\n  AddOnePayment,\n  SetEthUSDRates,\n  ArchiveAllPayment,\n  CancelledPayment,\n} from '../actions';\n\nexport function selectPaymentId(payment: PaymentModel): string {\n  return payment.id;\n}\n\nexport const adapter: EntityAdapter<PaymentModel> =\n  createEntityAdapter<PaymentModel>({\n    selectId: selectPaymentId,\n  });\n\nexport const initialPaymentState: PaymentStateModel = adapter.getInitialState({\n  error: undefined,\n  loading: false,\n  ethUsdPrice: '0.00',\n  paymentCancelled: false,\n});\n\nexport function PaymentReducers(\n  state: PaymentStateModel = initialPaymentState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOnePayment:\n    case UpdatePayment: {\n      const stateChange = adapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case SetEthUSDRates: {\n      return {\n        ...state,\n        ethUsdPrice: action.payload,\n      };\n    }\n\n    case AddOnePayment: {\n      const stateChange = adapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n        paymentCancelled: false,\n      };\n    }\n\n    case UpsertManyPayment: {\n      const stateChange = adapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveOnePayment: {\n      const stateChange = adapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveManyPayment: {\n      const stateChange = adapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case RemoveAllPayment: {\n      const stateChange = adapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case ArchiveAllPayment: {\n      const payments = state.entities;\n      const updatedPayments = [];\n      for (const p of Object.keys(payments)) {\n        updatedPayments.push({ ...payments[p], archived: true });\n      }\n      const stateChange = adapter.upsertMany(updatedPayments, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case SetPaymentError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n        paymentCancelled: false,\n      };\n    }\n\n    case UpdatePayment: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n        paymentCancelled: false,\n      };\n    }\n\n    case CancelledPayment: {\n      return {\n        ...state,\n        error: undefined,\n        loading: false,\n        paymentCancelled: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSRegistrationStateModel } from '../../models/states/ens-registration-interfaces';\nimport {\n  UpsertOneENSRegistration,\n  UpsertManyENSRegistration,\n  RemoveOneENSRegistration,\n  RemoveManyENSRegistration,\n  RemoveAllENSRegistration,\n  SetENSRegistrationError,\n  UpdateENSRegistration,\n  AddOneENSRegistration,\n} from '../actions';\n\nexport function selectENSRegistrationId(\n  registration: ENSDomainMetadataModel\n): string {\n  return registration.id;\n}\n\nexport const ensRegistrationAdapter: EntityAdapter<ENSDomainMetadataModel> =\n  createEntityAdapter<ENSDomainMetadataModel>({\n    selectId: selectENSRegistrationId,\n  });\n\nexport const initialENSRegistrationState: ENSRegistrationStateModel =\n  ensRegistrationAdapter.getInitialState({\n    error: undefined,\n    loading: false,\n  });\n\nexport function ENSRegistrationReducers(\n  state: ENSRegistrationStateModel = initialENSRegistrationState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOneENSRegistration:\n    case UpdateENSRegistration: {\n      const stateChange = ensRegistrationAdapter.upsertOne(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneENSRegistration: {\n      const stateChange = ensRegistrationAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyENSRegistration: {\n      const stateChange = ensRegistrationAdapter.upsertMany(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeOne(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeMany(\n        action.payload,\n        state\n      );\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllENSRegistration: {\n      const stateChange = ensRegistrationAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetENSRegistrationError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateENSRegistration: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSBookmarkStateModel } from '../../models/states/ens-bookmark-interfaces';\nimport {\n  UpsertOneENSBookmark,\n  UpsertManyENSBookmark,\n  RemoveOneENSBookmark,\n  RemoveManyENSBookmark,\n  RemoveAllENSBookmark,\n  SetENSBookmarkError,\n  UpdateENSBookmark,\n  AddOneENSBookmark,\n} from '../actions';\n\nexport function selectENSBookmarkId(bookmark: ENSDomainMetadataModel): string {\n  return bookmark.id;\n}\n\nexport const ensBookmarkAdapter: EntityAdapter<ENSDomainMetadataModel> =\n  createEntityAdapter<ENSDomainMetadataModel>({\n    selectId: selectENSBookmarkId,\n  });\n\nexport const initialENSBookmarkState: ENSBookmarkStateModel =\n  ensBookmarkAdapter.getInitialState({\n    error: undefined,\n    loading: false,\n  });\n\nexport function ENSBookmarkReducers(\n  state: ENSBookmarkStateModel = initialENSBookmarkState,\n  action: any\n) {\n  switch (action.type) {\n    case UpsertOneENSBookmark:\n    case UpdateENSBookmark: {\n      const stateChange = ensBookmarkAdapter.upsertOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case AddOneENSBookmark: {\n      const stateChange = ensBookmarkAdapter.addOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    case UpsertManyENSBookmark: {\n      const stateChange = ensBookmarkAdapter.upsertMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveOneENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeOne(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveManyENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeMany(action.payload, state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case RemoveAllENSBookmark: {\n      const stateChange = ensBookmarkAdapter.removeAll(state);\n      return {\n        ...state,\n        ids: stateChange.ids,\n        entities: stateChange.entities,\n        error: undefined,\n        loading: false,\n      };\n    }\n\n    case SetENSBookmarkError: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    }\n\n    case UpdateENSBookmark: {\n      return {\n        ...state,\n        error: undefined,\n        loading: true,\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { NavigatorButtonsStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const getNavigatorButtonsState =\n  createFeatureSelector<NavigatorButtonsStateModel>(\"NavigatorButtonsState\");\n\nexport const getCurrentNavigatorButtonsState = createSelector(\n  getNavigatorButtonsState,\n  (state: NavigatorButtonsStateModel) => state\n);\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { NavigatorStateModel } from \"../../models/states/navigator-interfaces\";\n\nexport const getNavigatorState =\n  createFeatureSelector<NavigatorStateModel>(\"NavigatorState\");\n\nexport const getCurrentNavigatorState = createSelector(\n  getNavigatorState,\n  (state: NavigatorStateModel) => state\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { PagesStateModel } from '../../models/states/pages-interfaces';\n\nexport const getPagesState =\n  createFeatureSelector<PagesStateModel>('PagesState');\n\nexport const getCurrentPagesState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state\n);\n\nexport const getCurrentNetworkState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.networkStatus\n);\n\nexport const getCurrentPageVisibility = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.pageVisibility\n);\n\nexport const getCurrentNetworkChainId = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.networkChainCode\n);\n\nexport const getCurrentPageLoadState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.isPageLoading\n);\n\nexport const getCriticalErrorState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.criticalErrorOccured\n);\n\nexport const getIpfsState = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.ipfsReady\n);\n\nexport const getIpfsError = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => state.ipfsError\n);\n\nexport const getCurrentErrorCode = createSelector(\n  getPagesState,\n  (state: PagesStateModel) => {\n    if ('errorCode' in state === false) {\n      return undefined;\n    }\n    if (state.errorCode === undefined) {\n      return undefined;\n    }\n    return state.errorCode;\n  }\n);\n","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\nimport { UserStateModel } from \"../../models/states/user-interfaces\";\n\nexport const getUserState = createFeatureSelector<UserStateModel>(\"UserState\");\nexport const getUser = createSelector(getUserState, (state) => state);\nexport const getCurrentUserState = createSelector(\n  getUserState,\n  (state: UserStateModel) => state\n);\nexport const getCurrentUser = createSelector(\n  getUser,\n  (state: UserStateModel) => state.user\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport {\n  PaymentModel,\n  PaymentStateModel,\n} from '../../models/states/payment-interfaces';\n\nexport const getPaymentStateFull =\n  createFeatureSelector<PaymentStateModel>('PaymentState');\n\nexport const getPaymentState = createSelector(\n  getPaymentStateFull,\n  (state) => state\n);\n\nexport const getEthUsdPrice = createSelector(\n  getPaymentStateFull,\n  (state) => state.ethUsdPrice\n);\n\nexport const getPayments = createSelector(getPaymentStateFull, (state) =>\n  Object.values(state.entities)\n);\n\nexport const getPaymentIds = createSelector(\n  getPaymentStateFull,\n  (state) => state.ids\n);\n\nexport const selectPayment = (id: number) =>\n  createSelector(getPaymentStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as PaymentModel;\n  });\n\nexport const getPaymentStateError = createSelector(\n  getPaymentStateFull,\n  (state) => state.error\n);\n\nexport const getPaymentStateLoading = createSelector(\n  getPaymentStateFull,\n  (state) => state.loading\n);\n\nexport const getPendingPayments = createSelector(\n  getPaymentStateFull,\n  (state) => {\n    const pendingPs: PaymentModel[] = [];\n    const ps = Object.values(state.entities) as PaymentModel[];\n    for (const p of ps) {\n      if (p.paymentStatus === false) {\n        pendingPs.push(p);\n      }\n    }\n    if (pendingPs.length <= 0) {\n      return null;\n    }\n    return pendingPs;\n  }\n);\n\nexport const getArchivedPayments = createSelector(\n  getPaymentStateFull,\n  (state) => {\n    const archivedPs: PaymentModel[] = [];\n    const ps = Object.values(state.entities) as PaymentModel[];\n    for (const p of ps) {\n      if (p.archived === true) {\n        archivedPs.push(p);\n      }\n    }\n    if (archivedPs.length <= 0) {\n      return null;\n    }\n    return archivedPs;\n  }\n);\n\nexport const isPaymentDuplicate = (id: string) =>\n  createSelector(getPaymentStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as PaymentModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSRegistrationStateModel } from '../../models/states/ens-registration-interfaces';\n\nexport const getENSRegistrationStateFull =\n  createFeatureSelector<ENSRegistrationStateModel>('ENSRegistrationState');\n\nexport const getENSRegistrationState = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state\n);\n\nexport const getENSRegistrations = createSelector(\n  getENSRegistrationStateFull,\n  (state) => Object.values(state.entities)\n);\n\nexport const getENSRegistrationIds = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.ids\n);\n\nexport const selectENSRegistration = (id: number) =>\n  createSelector(getENSRegistrationStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as ENSDomainMetadataModel;\n  });\n\nexport const getENSRegistrationStateError = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.error\n);\n\nexport const getENSRegistrationStateLoading = createSelector(\n  getENSRegistrationStateFull,\n  (state) => state.loading\n);\n\nexport const isENSRegistrationDuplicate = (id: string) =>\n  createSelector(getENSRegistrationStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as ENSDomainMetadataModel;\n    }\n    return false;\n  });\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { ENSDomainMetadataModel } from 'src/app/models/canvas';\nimport { ENSBookmarkStateModel } from '../../models/states/ens-bookmark-interfaces';\n\nexport const getENSBookmarkStateFull =\n  createFeatureSelector<ENSBookmarkStateModel>('ENSBookmarkState');\n\nexport const getENSBookmarkState = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state\n);\n\nexport const getENSBookmarks = createSelector(\n  getENSBookmarkStateFull,\n  (state) => Object.values(state.entities)\n);\n\nexport const getENSBookmarkIds = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.ids\n);\n\nexport const selectENSBookmark = (id: number) =>\n  createSelector(getENSBookmarkStateFull, (state) => {\n    if ((state.ids as number[]).indexOf(id) <= -1) {\n      return undefined;\n    }\n    return state.entities[id] as ENSDomainMetadataModel;\n  });\n\nexport const getENSBookmarkStateError = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.error\n);\n\nexport const getENSBookmarkStateLoading = createSelector(\n  getENSBookmarkStateFull,\n  (state) => state.loading\n);\n\nexport const isENSBookmarkDuplicate = (id: string) =>\n  createSelector(getENSBookmarkStateFull, (state) => {\n    if (Object.keys(state.entities).indexOf(id) > -1) {\n      return state.entities[id] as ENSDomainMetadataModel;\n    }\n    return false;\n  });\n","<div mat-dialog-content>\n  <ng-container *ngIf=\"data.showSpinner === true\">\n    <app-icon\n      *ngIf=\"data.lightColour === true\"\n      [iconSize]=\"data.spinnerSize\"\n      class=\"cos-padding-3\"\n    >\n      <ng-container *ngIf=\"data.customIcon === ''\"> lspin </ng-container>\n      <ng-container *ngIf=\"data.customIcon !== ''\">\n        {{ data.customIcon }}\n      </ng-container>\n    </app-icon>\n    <!-- *ngIf=\"data.lightColour === false\" -->\n    <app-icon [iconSize]=\"data.spinnerSize\" class=\"cos-padding-3\">\n      <ng-container *ngIf=\"data.customIcon === ''\"> spin </ng-container>\n      <ng-container *ngIf=\"data.customIcon !== ''\">\n        {{ data.customIcon }}\n      </ng-container>\n    </app-icon>\n  </ng-container>\n  <div\n    [ngClass]=\"textAlign\"\n    *ngIf=\"data.titleText !== undefined && data.titleText !== ''\"\n    class=\"cos-margin-1 cos-no-margin-top cos-no-margin-left cos-no-margin-right cos-body-0\"\n  >\n    <b>\n      {{ data.titleText | translate }}\n    </b>\n  </div>\n  <div\n    *ngIf=\"data.titleText === undefined || data.titleText === ''\"\n    [ngClass]=\"textAlign\"\n    class=\"cos-margin-1 cos-no-margin-top cos-no-margin-left cos-no-margin-right\"\n  >\n    {{ data.message | translate }}\n  </div>\n  <div\n    [ngClass]=\"textAlign\"\n    *ngIf=\"data.subText !== ''\"\n    class=\"cos-margin-4 cos-no-margin-top cos-no-margin-left cos-no-margin-right\"\n  >\n    {{ data.subText | translate }}\n  </div>\n</div>\n<div\n  mat-dialog-actions\n  [fxLayoutAlign]=\"data.textAlign === 'center' ? 'center center' : 'end center'\"\n>\n  <button (click)=\"goToLink()\" mat-button class=\"cos-body-4\">\n    <b>\n      {{\n        (data.buttonTitle !== undefined && data.buttonTitle !== \"\"\n          ? data.buttonTitle\n          : \"BUTTON.CLOSE\"\n        ) | translate\n      }}\n    </b>\n  </button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { PagesEnum } from 'src/app/models/states/pages-interfaces';\nimport { PagesFacadeService } from 'src/app/store/facades';\n\n@Component({\n  selector: 'app-generic-dialog',\n  templateUrl: './generic-dialog.component.html',\n  styleUrls: ['./generic-dialog.component.scss'],\n})\nexport class GenericDialogComponent implements OnInit {\n  overlaysCountOnInit = 0;\n  closedByButton = false;\n\n  constructor(\n    protected router: Router,\n    protected pagesFacadeService: PagesFacadeService,\n    public genericDialogRef: MatDialogRef<GenericDialogComponent>,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      message: string;\n      showSpinner?: boolean;\n      lightColour?: boolean;\n      spinnerSize?: number;\n      customIcon?: string;\n      subText?: string;\n      titleText?: string;\n      textAlign?: string;\n      buttonTitle?: string;\n      buttonLink?: string;\n      buttonLinkPageRef?: PagesEnum;\n      goToOnExit?: string;\n      goToOnExitPage?: PagesEnum;\n    }\n  ) {}\n\n  ngOnInit() {\n    this.genericDialogRef.backdropClick().subscribe(() => {\n      if (this.closedByButton === true) {\n        return;\n      }\n      this.closeDialog();\n    });\n    const overlays = document.getElementsByClassName(\n      'cdk-overlay-dark-backdrop'\n    );\n    const wrappers = document.getElementsByClassName(\n      'cdk-global-overlay-wrapper'\n    );\n    this.overlaysCountOnInit = overlays.length;\n    if (overlays.length > 1) {\n      for (let i = 1; i < overlays.length; i++) {\n        overlays[i].remove();\n      }\n      const attr = document.createAttribute('style');\n      attr.value = 'z-index: 1001 !important;';\n      overlays[0].attributes.setNamedItem(attr);\n      const existingAttr =\n        wrappers[wrappers.length - 1].attributes.getNamedItem('style');\n      const newAttr = document.createAttribute('style');\n      newAttr.value = existingAttr.value + ' z-index: 1001 !important;';\n      wrappers[wrappers.length - 1].attributes.setNamedItem(newAttr);\n      return;\n    }\n  }\n\n  closeDialog() {\n    const overlays = document.getElementsByClassName(\n      'cdk-overlay-dark-backdrop'\n    );\n    const wrappers = document.getElementsByClassName(\n      'cdk-global-overlay-wrapper'\n    );\n    if (this.overlaysCountOnInit > 1) {\n      const attr = document.createAttribute('style');\n      attr.value = 'z-index: 1000 !important;';\n      overlays[0].attributes.setNamedItem(attr);\n      const existingAttr =\n        wrappers[wrappers.length - 1].attributes.getNamedItem('style');\n      const newAttr = document.createAttribute('style');\n      newAttr.value = existingAttr.value + ' z-index: 1001 !important;';\n      wrappers[wrappers.length - 1].attributes.setNamedItem(newAttr);\n      this.genericDialogRef.close();\n      return;\n    }\n    if (this.closedByButton === false && this.data.goToOnExit !== undefined) {\n      this.pagesFacadeService.gotoPageRoute(\n        this.data.goToOnExit,\n        this.data.goToOnExitPage\n      );\n    }\n  }\n\n  goToLink() {\n    this.closedByButton = true;\n    if (this.data.buttonLink !== undefined) {\n      this.pagesFacadeService.gotoPageRoute(\n        this.data.buttonLink,\n        this.data.buttonLinkPageRef\n      );\n    }\n    this.genericDialogRef.close();\n  }\n\n  get textAlign() {\n    if (this.data.textAlign === '') {\n      return '';\n    } else if (this.data.textAlign === 'right') {\n      return 'cos-right-text';\n    } else if (this.data.textAlign === 'center') {\n      return 'cos-center-text';\n    }\n  }\n}\n","import {\n  AfterViewChecked,\n  Component,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { from, interval, of, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { infiniteLoopedIcons } from 'src/app/configurations';\nimport { NonceTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport { IconRegistryService, WalletService } from 'src/app/services';\n\ndeclare const APNG: any;\n\n@Component({\n  selector: 'app-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n})\nexport class IconComponent implements OnDestroy, AfterViewChecked {\n  @Input() iconSize = 24;\n  @ViewChild('icon', { static: false }) icon: any;\n  isVisible = false;\n  setIcon;\n  iconsRegistry;\n  iconAnimation;\n  checkIconSubscription;\n  iconId;\n\n  constructor(\n    public iconRegistryService: IconRegistryService,\n    public walletService: WalletService\n  ) {\n    this.iconsRegistry = this.iconRegistryService.injectCustomIcons();\n    this.iconId = walletService.produceNonce(NonceTypesEnum.SERIAL);\n    const stopCheck: Subject<boolean> = new Subject<boolean>();\n    this.checkIconSubscription = interval(1)\n      .pipe(\n        takeUntil(stopCheck),\n        switchMap((i) => {\n          if (this.icon === undefined) {\n            return of(false);\n          }\n          if (\n            'nativeElement' in this.icon === false ||\n            this.icon.nativeElement.innerText === ''\n          ) {\n            return of(false);\n          }\n          this.setIcon = this.icon.nativeElement.innerText.replaceAll(' ', '');\n          const canvas = document.getElementById(\n            'canvas-icon-' + this.setIcon + this.iconId\n          ) as HTMLCanvasElement;\n          if (canvas === null) {\n            return of(false);\n          }\n          return from(\n            APNG.parseURL('../../../' + this.iconsRegistry[this.setIcon])\n          );\n        }),\n        map((apng: any) => {\n          if (apng === false) {\n            return;\n          }\n          const canvas = document.getElementById(\n            'canvas-icon-' + this.setIcon + this.iconId\n          ) as HTMLCanvasElement;\n          canvas.width = apng.width;\n          canvas.height = apng.height;\n          this.iconAnimation = apng;\n          this.iconAnimation.addContext(canvas.getContext('2d'));\n          this.playIcon();\n          stopCheck.next(false);\n          stopCheck.complete();\n          return;\n        })\n      )\n      .subscribe();\n  }\n\n  playIcon() {\n    this.iconAnimation.play();\n    if (infiniteLoopedIcons.indexOf(this.setIcon) > -1) {\n      return;\n    }\n    setTimeout(() => {\n      this.iconAnimation.rewind();\n    }, this.iconAnimation.frames.length * 25);\n    return;\n  }\n\n  ngAfterViewChecked() {\n    if (this.iconAnimation === undefined && this.icon !== undefined) {\n      return;\n    }\n\n    if (\n      this.isVisible == false &&\n      this.icon.nativeElement.offsetParent != null\n    ) {\n      this.isVisible = true;\n      this.playIcon();\n    } else if (\n      this.isVisible == true &&\n      this.icon.nativeElement.offsetParent == null\n    ) {\n      this.isVisible = false;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.checkIconSubscription) {\n      this.checkIconSubscription.unsubscribe();\n      this.checkIconSubscription = undefined;\n    }\n  }\n}\n","<div #icon style=\"overflow: hidden; width: 0; height: 0\">\n  <ng-content></ng-content>\n</div>\n<div\n  id=\"canvas-icon-container\"\n  class=\"co-icon\"\n  [style.height]=\"iconSize + 'px'\"\n  [style.width]=\"iconSize + 'px'\"\n>\n  <canvas\n    id=\"{{ 'canvas-icon-' + setIcon + iconId }}\"\n    [style.height]=\"iconSize + 'px'\"\n    [style.width]=\"iconSize + 'px'\"\n  >\n  </canvas>\n</div>\n","import { Subject } from \"rxjs\";\n\nexport class BootController {\n  private static instance: BootController;\n  private _reboot: Subject<boolean> = new Subject();\n  private reboot$ = this._reboot.asObservable();\n\n  static getbootControl() {\n    if (!BootController.instance) {\n      BootController.instance = new BootController();\n    }\n    return BootController.instance;\n  }\n\n  public watchReboot() {\n    return this.reboot$;\n  }\n\n  public restart() {\n    this._reboot.next(true);\n  }\n}\n","export const environment = { production: true, development: false, deployed: true, test: false, local: false, chrome: false, defaultChain: 'homestead', baseUrl: 'https://predomain.eth.limo', validChainIds: { '5': 'goerli', '1': 'homestead', }, networks: { goerli: { networkId: 'goerli', networkName: 'Goerli Testnet', chainId: 5, providerKey: '[ \"8R44ckgzRQzE9kFCtp7QtGQHU6JcAbdy\", \"r82XAy-r3Q6quUsMViJzfGF5CcnKfKWz\", \"MzyOIUDKmR27GrfIFOLe0MKDHSRWvS4x\", \"tNtGnCC2yhXCcYeSQtNArj9RiITWp8aB\", \"RBfJZTGtvAKmZtzgxJsZX9N4UqkfN6Yc\", \"quPdmnozs0xsQsV-z7joxh28JZ1ZNZUj\", \"cDE_nnY3Cmulv6bcBHpUYoPZNl7gO-gt\", \"axpK6yj_VfQ8D7aP3F1l5js9X_fMg3Iw\", \"gn1-taCzEPP-L6zxsjLDT19lgFELique\", \"SbakDEKRcQwdl5JC-nJigVXLlnupyrTa\" ]', ensApp: 'https://app.ens.domains', ensMetadataAPI: 'https://metadata.ens.domains/goerli/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/', ensGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/ensdomains/ensgoerli', }, homestead: { networkId: 'homestead', networkName: 'Mainnet', chainId: 1, providerKey: '[ \"8R44ckgzRQzE9kFCtp7QtGQHU6JcAbdy\", \"r82XAy-r3Q6quUsMViJzfGF5CcnKfKWz\", \"MzyOIUDKmR27GrfIFOLe0MKDHSRWvS4x\", \"tNtGnCC2yhXCcYeSQtNArj9RiITWp8aB\", \"RBfJZTGtvAKmZtzgxJsZX9N4UqkfN6Yc\", \"quPdmnozs0xsQsV-z7joxh28JZ1ZNZUj\", \"cDE_nnY3Cmulv6bcBHpUYoPZNl7gO-gt\", \"axpK6yj_VfQ8D7aP3F1l5js9X_fMg3Iw\", \"gn1-taCzEPP-L6zxsjLDT19lgFELique\", \"SbakDEKRcQwdl5JC-nJigVXLlnupyrTa\" ]', ensApp: 'https://app.ens.domains', ensMetadataAPI: 'https://metadata.ens.domains/mainnet/0x57f1887a8bf19b14fc0df6fd9b2acc9af147ea85/', ensGraphQLAPI: 'https://api.thegraph.com/subgraphs/name/ensdomains/ens', }, }, };\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PathResolveService } from './services';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'bootstrap',\n    pathMatch: 'full',\n  },\n  {\n    path: 'bootstrap',\n    loadChildren: () =>\n      import('./modules/bootstrap.module').then((m) => m.BootstrapModule),\n  },\n  {\n    path: 'home',\n    loadChildren: () =>\n      import('./modules/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: 'canvas',\n    loadChildren: () =>\n      import('./modules/canvas.module').then((m) => m.CanvasModule),\n  },\n  {\n    path: 'domain/:domain',\n    loadChildren: () =>\n      import('./modules/domain.module').then((m) => m.DomainModule),\n  },\n  {\n    path: 'profile/:user',\n    loadChildren: () =>\n      import('./modules/profile.module').then((m) => m.ProfileModule),\n  },\n  {\n    path: 'manage',\n    loadChildren: () =>\n      import('./modules/manage.module').then((m) => m.ManageModule),\n  },\n  {\n    path: 'checkout',\n    loadChildren: () =>\n      import('./modules/checkout.module').then((m) => m.CheckoutModule),\n  },\n  {\n    path: 'category/:category',\n    loadChildren: () =>\n      import('./modules/category.module').then((m) => m.CategoryModule),\n  },\n  {\n    path: 'checkout/:serial',\n    loadChildren: () =>\n      import('./modules/checkout.module').then((m) => m.CheckoutModule),\n  },\n  {\n    path: '**',\n    resolve: {\n      path: PathResolveService,\n    },\n    loadChildren: () =>\n      import('./modules/not-found.module').then((m) => m.NotFoundModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export enum NetworkStatusEnum {\n\tOFFLINE,\n\tONLINE,\n}\n","<div\n  *ngIf=\"(pageLoadingState | async) === true\"\n  class=\"co-progress-bar cos-fluid-width cos-pos-fixed cos-pos-top-reset\"\n>\n  <mat-progress-bar\n    class=\"cos-main-progress-bar\"\n    mode=\"indeterminate\"\n    [value]=\"0\"\n  ></mat-progress-bar>\n</div>\n<div [style.height]=\"getHeight()\">\n  <router-outlet> </router-outlet>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  HostListener,\n  AfterViewInit,\n  OnDestroy,\n  HostBinding,\n  OnChanges,\n  DoCheck,\n} from '@angular/core';\nimport { MatTab } from '@angular/material/tabs';\nimport { Router } from '@angular/router';\nimport { PagesFacadeService } from './store/facades/pages.facades';\nimport { NetworkStatusEnum } from './models/states/pages-interfaces/network-status.enum';\nimport { IconRegistryService, UserSessionService } from './services';\nimport { of } from 'rxjs';\n\nconst globalAny: any = global;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, DoCheck, AfterViewInit {\n  @HostBinding('class') className = '';\n  @ViewChild('navigation', { static: true }) navigation: MatTab;\n  lightMode = false;\n\n  @HostListener('window:online', ['$event'])\n  onNetworkOnline(target) {\n    this.pagesFacade.newNetworkState({\n      networkStatus: NetworkStatusEnum.ONLINE,\n    });\n  }\n\n  @HostListener('window:offline', ['$event'])\n  onNetworkOffline(target) {\n    this.pagesFacade.newNetworkState({\n      networkStatus: NetworkStatusEnum.OFFLINE,\n    });\n  }\n\n  constructor(\n    protected router: Router,\n    protected userSessionService: UserSessionService,\n    protected iconsRegistryService: IconRegistryService,\n    protected pagesFacade: PagesFacadeService\n  ) {}\n\n  ngOnInit() {\n    const cId = this.userSessionService.getDefaultChainId();\n    this.iconsRegistryService.perloadCustomIcons();\n    this.pagesFacade.setNetworkChainCode(cId, false);\n  }\n\n  ngDoCheck(): void {\n    const cdk = document.getElementsByClassName('cdk-overlay-container');\n    if (cdk.length > 0 && this.lightMode === true) {\n      cdk[0].classList.add('light-mode');\n    }\n  }\n\n  ngAfterViewInit() {\n    if (navigator.onLine === true) {\n      this.pagesFacade.newNetworkState({\n        networkStatus: NetworkStatusEnum.ONLINE,\n      });\n    } else {\n      this.pagesFacade.newNetworkState({\n        networkStatus: NetworkStatusEnum.OFFLINE,\n      });\n    }\n  }\n\n  getHeight() {\n    return window.innerHeight + 'px';\n  }\n\n  get pageLoadingState() {\n    if (this.pagesFacade === undefined) {\n      return of(true);\n    }\n    return this.pagesFacade.pageLoadingState$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { NavigatorStateModel } from '../../models/states/navigator-interfaces';\n\n@Injectable()\nexport class NavigatorEffects {\n  constructor(\n    private actions$: Actions,\n    public store: Store<NavigatorStateModel>\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RpcService {\n  constructor() {}\n\n  loadRpc() {\n    return localStorage.getItem('canvas-rpc');\n  }\n\n  saveRpc(rpcData: RPCProviderModel) {\n    localStorage.setItem('canvas-rpc', JSON.stringify(rpcData));\n  }\n\n  removeRPC() {\n    localStorage.removeItem('canvas-rpc');\n  }\n}\n","import { of } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport { Injectable, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport {\n  Actions,\n  createEffect,\n  ofType,\n  ROOT_EFFECTS_INIT,\n} from '@ngrx/effects';\nimport {\n  Router,\n  ActivatedRoute,\n  NavigationStart,\n  NavigationEnd,\n  NavigationError,\n} from '@angular/router';\nimport {\n  GotoPageRoute,\n  PageGotoRoute,\n  PagesNetworkOfflineStateInvoke,\n  PagesNetworkStateSet,\n  PagesSetChainCode,\n  PagesSetCriticalError,\n  PagesSetRPCProvider,\n  PagesSetVisibility,\n  SetPageChainCode,\n  SetPagesCriticalError,\n  SetPagesNetworkState,\n  SetPagesNetworkStateOffline,\n  SetRPCProvider,\n  UserRemove,\n} from '../actions';\nimport { getCurrentPagesState, getCurrentUser } from '../selectors';\nimport {\n  NetworkStatusEnum,\n  PagesStateModel,\n} from '../../models/states/pages-interfaces';\nimport { BootController } from '../../../boot-control';\nimport { PagesFacadeService } from '../facades';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog';\nimport { environment } from '../../../environments/environment';\nimport { UserService, UserSessionService } from '../../services';\nimport {\n  catchError,\n  delay,\n  filter,\n  map,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { RPCProviderModel } from 'src/app/models/rpc/rpc-provider.model';\nimport { RpcService } from 'src/app/services/rpc';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class PagesEffects {\n  constructor(\n    protected actions$: Actions,\n    protected route: Router,\n    protected activatedRoute: ActivatedRoute,\n    protected store: Store<PagesStateModel>,\n    protected userSessionService: UserSessionService,\n    protected pagesFacade: PagesFacadeService,\n    protected userService: UserService,\n    protected rpcService: RpcService,\n    public dialog: MatDialog,\n    public ngZone: NgZone\n  ) {\n    document.addEventListener(\n      'visibilitychange',\n      () => {\n        if (document.hidden) {\n          this.store.dispatch(new PagesSetVisibility(false));\n        } else {\n          this.store.dispatch(new PagesSetVisibility(true));\n        }\n      },\n      false\n    );\n  }\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ROOT_EFFECTS_INIT),\n        switchMap((p) => {\n          return this.route.events.pipe(\n            takeUntil(\n              this.ngZone.runOutsideAngular(() => {\n                return BootController.getbootControl().watchReboot();\n              })\n            )\n          );\n        }),\n        map((e: any) => {\n          if (e instanceof NavigationStart) {\n            if ((e as NavigationStart).url !== '/') {\n              this.pagesFacade.showLoadingProgressBar();\n            }\n          }\n          if (e instanceof NavigationEnd) {\n            setTimeout(() => {\n              this.pagesFacade.hideLoadingProgressBar();\n            }, 1500);\n          }\n          if (e instanceof NavigationError) {\n            setTimeout(() => {\n              this.pagesFacade.hideLoadingProgressBar();\n            }, 1500);\n          }\n          const chainId =\n            environment.networks[environment.defaultChain].chainId;\n          if (chainId !== globalAny.chainId) {\n            this.assessProviderChanges(chainId);\n          }\n        })\n      ),\n    { dispatch: false }\n  );\n\n  provideRPCSet$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetRPCProvider>(SetRPCProvider),\n        map((action) => {\n          const chainId =\n            environment.networks[environment.defaultChain].chainId;\n          if (action.payload === undefined) {\n            this.createProvider(chainId);\n            this.rpcService.removeRPC();\n            return;\n          }\n          this.createProvider(chainId, action.payload);\n          this.rpcService.saveRpc(action.payload);\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkStatus$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesNetworkStateSet>(SetPagesNetworkState),\n        map((networkState) => {\n          if (\n            networkState.payload.networkStatus === NetworkStatusEnum.OFFLINE\n          ) {\n            this.store.dispatch(new PagesNetworkOfflineStateInvoke());\n          }\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkStatusOffline$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesNetworkOfflineStateInvoke>(SetPagesNetworkStateOffline),\n        withLatestFrom(this.store.pipe(select(getCurrentPagesState)) as any),\n        map((networkAndPageState) => {\n          const [network, pageState] = networkAndPageState;\n          if (this.dialog.openDialogs.length > 0) {\n            return;\n          }\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  networkChangedId$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetChainCode>(SetPageChainCode),\n        withLatestFrom(\n          this.store.pipe(select(getCurrentPagesState)),\n          this.store.pipe(select(getCurrentUser))\n        ),\n        delay(250),\n        map((networkAndPageState) => {\n          const [action, pageState, userData] = networkAndPageState;\n          if (\n            action.payload === undefined ||\n            action.payload in environment.validChainIds === false ||\n            action.payload !==\n              environment.networks[environment.defaultChain].chainId\n          ) {\n            this.ngZone.run(() => {\n              const dialogRef = this.dialog.open(GenericDialogComponent, {\n                data: {\n                  message: 'GENERIC.NETWORK_CHANGED_INCOMPATIBLE',\n                },\n                panelClass: 'cos-generic-dialog',\n              });\n            });\n            this.store.dispatch(new UserRemove());\n            return;\n          }\n          this.assessProviderChanges(action.payload);\n          return;\n        })\n      ),\n    { dispatch: false }\n  );\n\n  pageCriticalError$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PagesSetCriticalError>(SetPagesCriticalError),\n        filter((action) => action.redirect === true),\n        map((action) => {\n          this.route.navigateByUrl('not-found');\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  gotoPageRoute$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PageGotoRoute>(GotoPageRoute),\n        map((route) => {\n          if (route.payload.route !== 'not-found') {\n            this.pagesFacade.setPageCriticalError(false, false);\n          }\n          this.route.navigateByUrl(route.payload.route);\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  createProvider(chainId: number, providerData: RPCProviderModel = null) {\n    const newProvider = this.userSessionService.getUserSessionProvider(\n      chainId,\n      providerData\n    );\n    globalAny.chainId = chainId;\n    globalAny.canvasProvider = newProvider;\n  }\n\n  assessProviderChanges(chainId: number) {\n    const providerData = this.rpcService.loadRpc();\n    if (\n      (providerData === null || providerData === undefined) &&\n      globalAny.canvasProvider === undefined\n    ) {\n      this.createProvider(chainId);\n    } else {\n      this.store.dispatch(new PagesSetRPCProvider(JSON.parse(providerData)));\n    }\n  }\n}\n","import { of } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\nimport {\n  Actions,\n  ofType,\n  ROOT_EFFECTS_INIT,\n  createEffect,\n} from '@ngrx/effects';\nimport { map, switchMap, catchError, delay } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport {\n  TranslationService,\n  TrezorService,\n  UserService,\n  UserSessionService,\n} from '../../services';\nimport {\n  RegisterUser,\n  RemoveUser,\n  UserAdd,\n  UserErrorSet,\n  UserRegister,\n  UserRemove,\n} from '../actions';\nimport { UserModel } from '../../models/states/user-interfaces';\nimport { UserStoreErrorsEnum } from '../../models/error-enums';\nimport { MatDialog } from '@angular/material/dialog';\nimport { WalletTypesEnum } from '../../models/states/wallet-interfaces';\nimport { MetamaskService } from '../../services/metamask/metamask.service';\nimport { LedgerService } from '../../services/ledger/ledger.service';\nimport { GenericDialogComponent } from '../../widgets/generic-dialog';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private actions$: Actions,\n    public route: Router,\n    public userService: UserService,\n    public translationService: TranslationService,\n    public userSessionService: UserSessionService,\n    public metamaskService: MetamaskService,\n    public trezorService: TrezorService,\n    public ledgerService: LedgerService,\n    public store: Store<UserModel>,\n    public ngZone: NgZone,\n    public dialog: MatDialog\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ROOT_EFFECTS_INIT),\n        map((r) => {\n          const timeNow = new Date().getTime();\n          const userSessionStored = this.userSessionService.loadUserSession();\n          if (userSessionStored === undefined || userSessionStored === null) {\n            return;\n          }\n          const userData = JSON.parse(userSessionStored) as UserModel;\n          const defaultChainId = this.userSessionService.getDefaultChainId();\n          if (userData.connectType === WalletTypesEnum.METAMASK) {\n            this.metamaskService.chainChangedDetectionDaemon();\n          }\n          if (\n            userData.connectType === WalletTypesEnum.METAMASK &&\n            this.metamaskService.getChainId() != defaultChainId\n          ) {\n            const dialogRef = this.dialog.open(GenericDialogComponent, {\n              data: {\n                message: 'GENERIC.NETWORK_CHANGED_INCOMPATIBLE',\n              },\n              panelClass: 'cos-generic-dialog',\n            });\n            this.store.dispatch(new UserRemove());\n            return;\n          }\n          this.store.dispatch(\n            new UserAdd(JSON.parse(userSessionStored as string))\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userRemove$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserRemove>(RemoveUser),\n        map((action) => {\n          this.userSessionService.quitUserSession();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userRegister$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<UserRegister>(RegisterUser),\n        delay(1000),\n        switchMap((action) => {\n          const timeNow = new Date().getTime();\n          const defaultChainId = this.userSessionService.getDefaultChainId();\n          if (\n            action.payload.walletType === WalletTypesEnum.METAMASK &&\n            this.metamaskService.getChainId() != defaultChainId\n          ) {\n            this.store.dispatch(new UserRemove());\n            return of(false);\n          }\n          switch (action.payload.walletType) {\n            case WalletTypesEnum.WALLET_CONNECT:\n              {\n                return of([\n                  timeNow,\n                  action.payload.address,\n                  action.payload.walletType,\n                ]);\n              }\n              break;\n            case WalletTypesEnum.METAMASK:\n              {\n                return this.metamaskService.connect(timeNow).pipe(\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(false);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  })\n                );\n              }\n              break;\n            case WalletTypesEnum.TREZOR:\n              {\n                return this.trezorService.connect(timeNow).pipe(\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(false);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  })\n                );\n              }\n              break;\n            case WalletTypesEnum.LEDGER:\n              {\n                return this.ledgerService.connect(timeNow).pipe(\n                  switchMap((r: any) => {\n                    if (r === false) {\n                      return of(false);\n                    }\n                    return of([timeNow, r, action.payload.walletType]);\n                  })\n                );\n              }\n              break;\n          }\n        }),\n        map((r: any) => {\n          if (r === false) {\n            this.store.dispatch(\n              new UserErrorSet(UserStoreErrorsEnum.CONNECT_ERROR)\n            );\n            return;\n          }\n          const [timestamp, address, walletType] = r;\n          const userSession = {\n            connectSignature: undefined,\n            timestamp: timestamp,\n            walletAddress: address,\n            originalConnectAddress: address,\n            deviceLanguage: navigator.language || 'en-US',\n            connectType: walletType,\n          } as UserModel;\n          globalAny.chainAccount = userSession;\n          this.store.dispatch(new UserAdd(userSession));\n          if (walletType === WalletTypesEnum.METAMASK) {\n            this.metamaskService.chainChangedDetectionDaemon();\n          }\n          this.userSessionService.saveUserSession(userSession);\n          return;\n        }),\n        catchError((error) => {\n          return of(false);\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport * as ethers from 'ethers';\nimport {\n  Actions,\n  createEffect,\n  ofType,\n  ROOT_EFFECTS_INIT,\n} from '@ngrx/effects';\nimport {\n  CurrencyExchangeService,\n  CurrencyService,\n  LedgerService,\n  MiscUtilsService,\n  PaymentEffectsService,\n  PaymentErrorService,\n  PaymentService,\n  PaymentStorageService,\n  TranslationService,\n  TrezorService,\n  UserService,\n  WalletService,\n} from '../../services';\nimport {\n  PaymentErrorCodes,\n  PaymentModel,\n  PaymentStateModel,\n  PaymentTypesEnum,\n} from '../../models/states/payment-interfaces';\nimport { PagesFacadeService, UserFacadeService } from '../facades';\nimport { MetamaskService } from '../../services/metamask';\nimport {\n  AddOnePayment,\n  ArchiveAllPayment,\n  CheckPaymentFulfilled,\n  PaymentAddOne,\n  PaymentArchiveAll,\n  PaymentCancelled,\n  PaymentCheckFulfilled,\n  PaymentRemoveAll,\n  PaymentRemoveOne,\n  PaymentUpsertMany,\n  PaymentUpsertOne,\n  RemoveAllPayment,\n  UpsertOnePayment,\n} from '../actions';\nimport {\n  catchError,\n  map,\n  mergeMap,\n  switchMap,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { from, interval, of, Subject } from 'rxjs';\nimport {\n  getCurrentNetworkChainId,\n  getCurrentUser,\n  getPayments,\n} from '../selectors';\nimport { WalletTypesEnum } from 'src/app/models/states/wallet-interfaces';\nimport { BigNumber, utils } from 'ethers';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { generalConfigurations } from 'src/app/configurations';\nimport { WalletConnectService } from 'src/app/services/wallet-connect';\nimport { getTransactionByNonce } from 'find-replacement-tx';\n\nconst globalAny: any = global;\n\n@Injectable()\nexport class PaymentEffects {\n  staticPaymentTranslatedTexts;\n  staticGenericTranslatedTexts;\n  constructor(\n    private actions$: Actions,\n    protected paymentService: PaymentService,\n    protected walletService: WalletService,\n    protected userService: UserService,\n    protected pagesFacade: PagesFacadeService,\n    protected paymentErrorService: PaymentErrorService,\n    protected userFacadeService: UserFacadeService,\n    protected store: Store<PaymentStateModel>,\n    protected translationService: TranslationService,\n    protected currencyService: CurrencyService,\n    protected currencyExchangeService: CurrencyExchangeService,\n    protected metamaskService: MetamaskService,\n    protected walletConnectService: WalletConnectService,\n    protected trezorService: TrezorService,\n    protected paymentStorageService: PaymentStorageService,\n    protected ledgerService: LedgerService,\n    protected miscUtils: MiscUtilsService,\n    protected snackBar: MatSnackBar,\n    protected paymentEffectsService: PaymentEffectsService,\n    protected ngZone: NgZone\n  ) {\n    this.staticPaymentTranslatedTexts =\n      this.translationService.getCacheableLanguagekeys('PAYMENT');\n    this.staticGenericTranslatedTexts =\n      this.translationService.getCacheableLanguagekeys('GENERIC');\n  }\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ROOT_EFFECTS_INIT),\n        switchMap((r) => {\n          const payments = this.paymentStorageService.loadPayments();\n          if (payments !== false) {\n            this.store.dispatch(\n              new PaymentUpsertMany(payments as any as PaymentModel[])\n            );\n          }\n          if (payments === false || payments === null || payments.length <= 0) {\n            return this.currencyExchangeService.getPrices();\n          }\n          for (const p of payments) {\n            if (\n              p.paymentHash !== null &&\n              p.paymentHash !== '' &&\n              p.paymentStatus === false\n            ) {\n              this.store.dispatch(new CheckPaymentFulfilled(p));\n            }\n          }\n          return this.currencyExchangeService.getPrices();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  addPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentAddOne>(AddOnePayment),\n        withLatestFrom(\n          this.store.pipe(select(getPayments)),\n          this.store.pipe(select(getCurrentUser)),\n          this.store.pipe(select(getCurrentNetworkChainId))\n        ),\n        switchMap(([action, payments, user, chainId]: any[]) => {\n          const provider = globalAny.canvasProvider;\n          return this.paymentService.getGasPrice(provider).pipe(\n            switchMap((gasPrice) => {\n              return of([action, user, provider, chainId, gasPrice]);\n            })\n          );\n        }),\n        switchMap(([action, user, provider, chainId, gasPrice]: any[]) => {\n          return this.paymentService\n            .getWalletNonce(provider, user.walletAddress)\n            .pipe(\n              switchMap((nonce) => {\n                return of([action, user, provider, chainId, gasPrice, nonce]);\n              })\n            );\n        }),\n        switchMap(\n          ([action, user, provider, chainId, gasPrice, nonce]: any[]) => {\n            const preparedTx = this.paymentService.prepareTransaction(\n              chainId,\n              nonce,\n              action.payload.paymentMarketAddress,\n              action.payload.paymentGasLimit,\n              gasPrice.gasPrice,\n              action.payload\n            );\n            this.snackBar.open(\n              this.staticGenericTranslatedTexts.PENDING_TRANSACTION_CERATED,\n              'close',\n              {\n                horizontalPosition: 'center',\n                verticalPosition: 'bottom',\n                duration: 5000,\n              }\n            );\n            if (user.connectType === WalletTypesEnum.LEDGER) {\n              const txToFilter = {\n                ...preparedTx,\n                gasLimit: preparedTx.gas,\n                value:\n                  preparedTx.value === '0'\n                    ? '0x0'\n                    : ethers.BigNumber.from(preparedTx.value).toHexString(),\n              };\n              delete txToFilter.gas;\n              const txHex = utils.serializeTransaction(txToFilter);\n              return this.ledgerService.signPayment(txHex).pipe(\n                switchMap((signed: any) => {\n                  const signedPacked = utils.serializeTransaction(txToFilter, {\n                    v: BigNumber.from('0x' + signed.v).toNumber(),\n                    r: '0x' + signed.r,\n                    s: '0x' + signed.s,\n                  });\n                  return from(provider.sendTransaction(signedPacked));\n                }),\n                switchMap((r) => {\n                  return of([action, (r as any).hash, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.WALLET_CONNECT) {\n              const txToFilter = {\n                ...preparedTx,\n                from: user.walletAddress,\n              };\n              delete txToFilter.gasPrice;\n              delete txToFilter.nonce;\n              return this.walletConnectService.signPayment(txToFilter).pipe(\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.METAMASK) {\n              const txToFilter = {\n                ...preparedTx,\n                from: user.walletAddress,\n              };\n              delete txToFilter.gasPrice;\n              delete txToFilter.nonce;\n              return this.metamaskService.signPayment([txToFilter]).pipe(\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n            if (user.connectType === WalletTypesEnum.TREZOR) {\n              return this.trezorService.signPayment(preparedTx).pipe(\n                switchMap((signed: any) => {\n                  return from(provider.sendTransaction(signed as string));\n                }),\n                switchMap((r) => {\n                  return of([action, r, nonce]);\n                })\n              );\n            }\n          }\n        ),\n        switchMap(([action, hash, nonce]) => {\n          if (hash === false) {\n            this.store.dispatch(new PaymentRemoveOne(action.payload.id));\n            this.snackBar.open(\n              this.staticPaymentTranslatedTexts['PAYMENT_CANCELLED'],\n              'close',\n              {\n                horizontalPosition: 'center',\n                verticalPosition: 'bottom',\n                duration: 15000,\n              }\n            );\n            this.store.dispatch(new PaymentCancelled());\n            this.store.dispatch(new PaymentRemoveOne(action.payload.id));\n            return of(false);\n          }\n          this.store.dispatch(\n            new PaymentUpsertOne({\n              ...action.payload,\n              paymentStatus: false,\n              paymentHash: hash,\n              paymentNonce: nonce,\n            })\n          );\n          const paymentResolved = new Subject<boolean>();\n          return this.pagesFacade.pageVisibility$.pipe(\n            withLatestFrom(this.store.pipe(select(getPayments))),\n            takeUntil(paymentResolved),\n            map((pvp) => {\n              const [pv, payments] = pvp;\n              const payment = payments[action.payload.id];\n              if (\n                payment &&\n                'paymentStatus' in payment &&\n                payment.paymentStatus === true\n              ) {\n                paymentResolved.next(false);\n                return;\n              }\n              if (pv === true) {\n                this.store.dispatch(\n                  new CheckPaymentFulfilled({\n                    ...action.payload,\n                    paymentHash: hash,\n                    paymentNonce: nonce,\n                  })\n                );\n              }\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  upsertPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentUpsertOne>(UpsertOnePayment),\n        withLatestFrom(this.store.pipe(select(getPayments))),\n        switchMap(([a, paymentState]) => {\n          const payments = paymentState as PaymentModel[];\n          let payment;\n          for (const p of payments) {\n            if (p.id === a.payload.id) {\n              payment = a.payload;\n            }\n          }\n          return of(payments);\n        }),\n        map((p) => {\n          return this.paymentStorageService.savePayments(p);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  archiveAllPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentArchiveAll>(ArchiveAllPayment),\n        withLatestFrom(this.store.pipe(select(getPayments))),\n        map(([action, payments]) => {\n          this.paymentStorageService.savePayments(payments);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  removeAllPayment$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<PaymentRemoveAll>(RemoveAllPayment),\n        map((action) => {\n          this.paymentStorageService.removePayments();\n        })\n      ),\n    { dispatch: false }\n  );\n\n  userCheckPaymentStatus$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<CheckPaymentFulfilled>(PaymentCheckFulfilled),\n        mergeMap((action) => {\n          const hasResolved = new Subject<boolean>();\n          return interval(generalConfigurations.timeToUpdateCheckoutPipe).pipe(\n            takeUntil(hasResolved),\n            switchMap((i) => {\n              const provider = globalAny.canvasProvider;\n              if (provider === undefined) {\n                return of(false);\n              }\n              return from(provider.getBlockNumber()).pipe(\n                switchMap((blockNumber) => {\n                  if (\n                    blockNumber === null ||\n                    blockNumber === false ||\n                    blockNumber === undefined\n                  ) {\n                    throw false;\n                  }\n                  const searchTxFromBlock = (blockNumber as number) - 5;\n                  const tx = {\n                    from: action.payload.paymentPayer,\n                    to: action.payload.paymentPayee,\n                    nonce: action.payload.paymentNonce,\n                  };\n                  return from(\n                    provider.getTransactionReceipt(action.payload.paymentHash)\n                  ).pipe(\n                    switchMap((foundTx) => {\n                      if (foundTx === null || foundTx === false) {\n                        return from(\n                          getTransactionByNonce(\n                            provider,\n                            searchTxFromBlock,\n                            tx.from,\n                            tx.nonce\n                          )\n                        ).pipe(\n                          switchMap((r) => {\n                            if (r === null) {\n                              return of(null);\n                            }\n                            return from(provider.getTransactionReceipt(r.hash));\n                          })\n                        );\n                      }\n                      return of(foundTx);\n                    }),\n                    catchError((e) => {\n                      return of(null);\n                    })\n                  );\n                }),\n                map((r: any) => {\n                  if (r === null || r === undefined) {\n                    return;\n                  }\n                  if (r.status === 0) {\n                    this.store.dispatch(\n                      new PaymentUpsertOne({\n                        id: action.payload.id,\n                        paymentHash: action.payload.paymentHash,\n                        paymentStatus: false,\n                        paymentError: PaymentErrorCodes.PAYMENT_FAILURE,\n                      })\n                    );\n                    hasResolved.next(false);\n                    return;\n                  }\n                  if (\n                    r.status === 1 &&\n                    r.confirmations >=\n                      generalConfigurations.maxConfirmationsUntilTxFinal\n                  ) {\n                    this.store.dispatch(\n                      new PaymentUpsertOne({\n                        id: action.payload.id,\n                        paymentDate:\n                          action.payload.paymentType === PaymentTypesEnum.COMMIT\n                            ? new Date().getTime()\n                            : action.payload.paymentDate,\n                        paymentHash: action.payload.paymentHash,\n                        paymentStatus: true,\n                        paymentError: PaymentErrorCodes.NONE,\n                      })\n                    );\n                    hasResolved.next(false);\n                    return;\n                  }\n                })\n              );\n            })\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Actions,\n  createEffect,\n  ofType,\n  ROOT_EFFECTS_INIT,\n} from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { ENSBookmarkStateModel } from 'src/app/models/states/ens-bookmark-interfaces';\nimport { BookmarksServiceService } from 'src/app/services/bookmarks';\nimport {\n  AddOneENSBookmark,\n  ENSBookmarkAddOne,\n  ENSBookmarkRemoveAll,\n  ENSBookmarkRemoveOne,\n  ENSBookmarkUpsertMany,\n  ENSBookmarkUpsertOne,\n  RemoveAllENSBookmark,\n  RemoveOneENSBookmark,\n  UpsertManyENSBookmark,\n  UpsertOneENSBookmark,\n} from '../actions';\nimport { getENSBookmarks } from '../selectors';\n\n@Injectable()\nexport class ENSBookmarkEffects {\n  constructor(\n    private actions$: Actions,\n    protected bookMarkService: BookmarksServiceService,\n    public store: Store<ENSBookmarkStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ROOT_EFFECTS_INIT),\n        map((p) => {\n          const bookmarks = this.bookMarkService.loadBookmarksAndFeed();\n          for (const b of Object.keys(bookmarks)) {\n            this.store.dispatch(\n              new ENSBookmarkAddOne(\n                {\n                  id: bookmarks[b].labelName,\n                  ...bookmarks[b],\n                },\n                false\n              )\n            );\n          }\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkAddOne>(AddOneENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllBookmarks$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkRemoveAll>(RemoveAllENSBookmark),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSBookmarks))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeAllBookmarks();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkRemoveOne>(RemoveOneENSBookmark),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSBookmarks))),\n        map((state) => {\n          const [action, bookmarks] = state;\n          this.bookMarkService.removeBookmark(bookmarks, action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkUpsertOne>(UpsertOneENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyBookmark$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSBookmarkUpsertMany>(UpsertManyENSBookmark),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.bookMarkService.saveAllBookmark(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Actions,\n  createEffect,\n  ofType,\n  ROOT_EFFECTS_INIT,\n} from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { filter, map, withLatestFrom } from 'rxjs/operators';\nimport { ENSRegistrationStateModel } from 'src/app/models/states/ens-registration-interfaces';\nimport {\n  RegistrationFacilityService,\n  RegistrationServiceService,\n} from 'src/app/services/registration';\nimport {\n  AddOneENSRegistration,\n  ENSRegistrationAddOne,\n  ENSRegistrationRemoveAll,\n  ENSRegistrationUpsertMany,\n  ENSRegistrationUpsertOne,\n  RemoveAllENSRegistration,\n  RemoveOneENSRegistration,\n  UpsertManyENSRegistration,\n  UpsertOneENSRegistration,\n} from '../actions';\nimport { getENSRegistrations } from '../selectors';\n\n@Injectable()\nexport class ENSRegistrationEffects {\n  constructor(\n    private actions$: Actions,\n    protected registrationService: RegistrationServiceService,\n    protected registrationFacilityService: RegistrationFacilityService,\n    public store: Store<ENSRegistrationStateModel>\n  ) {}\n\n  init$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(ROOT_EFFECTS_INIT),\n        map((p) => {\n          const registrations =\n            this.registrationService.loadRegistrationsAndFeed();\n          for (const b of Object.keys(registrations)) {\n            this.store.dispatch(\n              new ENSRegistrationAddOne(\n                {\n                  id: registrations[b].labelName,\n                  ...registrations[b],\n                },\n                false\n              )\n            );\n          }\n        })\n      ),\n    {\n      dispatch: false,\n    }\n  );\n\n  addOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationAddOne>(AddOneENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationAddOne>(RemoveOneENSRegistration),\n        filter((action) => action.toSave === true),\n        withLatestFrom(this.store.pipe(select(getENSRegistrations))),\n        map((state) => {\n          const [action, registrations] = state;\n          this.registrationService.removeRegistration(\n            registrations,\n            action.payload.labelName\n          );\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  removeAllRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationRemoveAll>(RemoveAllENSRegistration),\n        map(() => {\n          this.registrationService.removeAllRegistrations();\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertOneRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationUpsertOne>(UpsertOneENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n\n  upsertManyRegistration$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType<ENSRegistrationUpsertMany>(UpsertManyENSRegistration),\n        filter((action) => action.toSave === true),\n        map((action) => {\n          this.registrationService.saveAllRegistrations(action.payload);\n        })\n      ),\n\n    { dispatch: false }\n  );\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport {\n  BrowserModule,\n  HAMMER_GESTURE_CONFIG,\n} from '@angular/platform-browser';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogModule,\n  MAT_DIALOG_DATA,\n  MatDialogRef,\n} from '@angular/material/dialog';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { Intercept } from './services/intercept/intercept';\nimport { HammerJsConf } from './configurations';\nimport { serviceProviders } from './models';\nimport { NetworkStatusDialogComponent } from './widgets/network-status-dialog';\nimport { GenericDialogModule, TranslationModule } from './modules/miscs';\nimport {\n  ENSBookmarkReducers,\n  ENSRegistrationReducers,\n  NavigatorButtonsReducers,\n  NavigatorReducers,\n  PagesReducers,\n  PaymentReducers,\n  UserReducers,\n} from './store/reducers';\nimport {\n  ENSBookmarkEffects,\n  NavigatorEffects,\n  PagesEffects,\n  PaymentEffects,\n  UserEffects,\n} from './store/effects';\nimport { environment } from '../environments/environment';\nimport { ENSRegistrationEffects } from './store/effects';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [AppComponent, NetworkStatusDialogComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    MatProgressBarModule,\n    MatSnackBarModule,\n    TranslationModule,\n    StoreModule.forRoot(\n      {\n        UserState: UserReducers,\n        NavigatorState: NavigatorReducers,\n        PagesState: PagesReducers,\n        PaymentState: PaymentReducers,\n        NavigatorButtonsState: NavigatorButtonsReducers,\n        ENSRegistrationState: ENSRegistrationReducers,\n        ENSBookmarkState: ENSBookmarkReducers,\n      },\n      {\n        runtimeChecks: {\n          strictActionImmutability: false,\n        },\n      }\n    ),\n    EffectsModule.forRoot([\n      UserEffects,\n      NavigatorEffects,\n      PagesEffects,\n      PaymentEffects,\n      ENSRegistrationEffects,\n      ENSBookmarkEffects,\n    ]),\n    environment.deployed === true\n      ? []\n      : StoreDevtoolsModule.instrument({\n          maxAge: 200,\n        }),\n    MatDialogModule,\n    MatButtonModule,\n    GenericDialogModule,\n  ],\n  exports: [\n    NetworkStatusDialogComponent,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    TranslationModule,\n    MatSnackBarModule,\n    GenericDialogModule,\n  ],\n  providers: [\n    ...serviceProviders,\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerJsConf,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: Intercept,\n      multi: true,\n    },\n    { provide: MAT_DIALOG_DATA, useValue: {} },\n    { provide: MatDialogRef, useValue: {} },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [NetworkStatusDialogComponent],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class AppModule {}\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\nimport { BehaviorSubject } from 'rxjs';\nimport { BootController } from './boot-control';\n\ndeclare global {\n  interface Window {\n    global: any;\n    process: any;\n    ethereumProvider: any;\n    etherscanProvider: any;\n  }\n}\n(window as any).global = window;\n(window as any).process = window;\n(window as any).process.browser = true;\n(window as any).process.version = '';\n(window as any).process.versions = { node: false };\n(window as any).global.appIsPaused = new BehaviorSubject(false);\n\nif (environment.production === true) {\n  enableProdMode();\n}\n\nexport function main(): any {\n  return platformBrowserDynamic().bootstrapModule(AppModule);\n}\n\nlet mainApp;\nif (module['hot']) {\n  module['hot'].accept();\n}\nconst boot = BootController.getbootControl()\n  .watchReboot()\n  .subscribe(() => {\n    if (mainApp) {\n      if ('ngRef' in window && 'destroy' in window['ngRef']) {\n        window['ngRef'].destroy();\n      }\n      window['ngRef'] = mainApp;\n    }\n    mainApp = main().catch((err) => console.error('Bootstrap error:', err));\n  });\nBootController.getbootControl().restart();\n"],"sourceRoot":"webpack:///","file":"main.b2c06767ec0ead01.js"}